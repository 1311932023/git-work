// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chengdugameproto.proto

#ifndef PROTOBUF_chengdugameproto_2eproto__INCLUDED
#define PROTOBUF_chengdugameproto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "gameproto.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {
namespace game {
namespace chengdumj {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_chengdugameproto_2eproto();
void protobuf_AssignDesc_chengdugameproto_2eproto();
void protobuf_ShutdownFile_chengdugameproto_2eproto();

class AckUserChangeCardStart;
class AckChangeCardOk;
class AckChangeCard;
class ReqChangeCard;
class AckUserLackStart;
class AckUserLackTypeOk;
class AckUserLackType;
class ReqChooseLackType;
class tagCDGameScence;
class DianPaoInfo;
class AckCDGameEnd;
class DaJiaoInfo;
class GangFenInfo;
class GangInfo;
class HuPaiInfo;

// ===================================================================

class AckUserChangeCardStart : public ::google::protobuf::Message {
 public:
  AckUserChangeCardStart();
  virtual ~AckUserChangeCardStart();

  AckUserChangeCardStart(const AckUserChangeCardStart& from);

  inline AckUserChangeCardStart& operator=(const AckUserChangeCardStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckUserChangeCardStart& default_instance();

  void Swap(AckUserChangeCardStart* other);

  // implements Message ----------------------------------------------

  AckUserChangeCardStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckUserChangeCardStart& from);
  void MergeFrom(const AckUserChangeCardStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 isTimeOut = 1;
  inline bool has_istimeout() const;
  inline void clear_istimeout();
  static const int kIsTimeOutFieldNumber = 1;
  inline ::google::protobuf::int32 istimeout() const;
  inline void set_istimeout(::google::protobuf::int32 value);

  // optional int32 remain_time = 2;
  inline bool has_remain_time() const;
  inline void clear_remain_time();
  static const int kRemainTimeFieldNumber = 2;
  inline ::google::protobuf::int32 remain_time() const;
  inline void set_remain_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.chengdumj.AckUserChangeCardStart)
 private:
  inline void set_has_istimeout();
  inline void clear_has_istimeout();
  inline void set_has_remain_time();
  inline void clear_has_remain_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 istimeout_;
  ::google::protobuf::int32 remain_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_chengdugameproto_2eproto();
  friend void protobuf_AssignDesc_chengdugameproto_2eproto();
  friend void protobuf_ShutdownFile_chengdugameproto_2eproto();

  void InitAsDefaultInstance();
  static AckUserChangeCardStart* default_instance_;
};
// -------------------------------------------------------------------

class AckChangeCardOk : public ::google::protobuf::Message {
 public:
  AckChangeCardOk();
  virtual ~AckChangeCardOk();

  AckChangeCardOk(const AckChangeCardOk& from);

  inline AckChangeCardOk& operator=(const AckChangeCardOk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckChangeCardOk& default_instance();

  void Swap(AckChangeCardOk* other);

  // implements Message ----------------------------------------------

  AckChangeCardOk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckChangeCardOk& from);
  void MergeFrom(const AckChangeCardOk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 chairID = 1;
  inline int chairid_size() const;
  inline void clear_chairid();
  static const int kChairIDFieldNumber = 1;
  inline ::google::protobuf::int32 chairid(int index) const;
  inline void set_chairid(int index, ::google::protobuf::int32 value);
  inline void add_chairid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      chairid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_chairid();

  // repeated int32 isOk = 2;
  inline int isok_size() const;
  inline void clear_isok();
  static const int kIsOkFieldNumber = 2;
  inline ::google::protobuf::int32 isok(int index) const;
  inline void set_isok(int index, ::google::protobuf::int32 value);
  inline void add_isok(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      isok() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_isok();

  // @@protoc_insertion_point(class_scope:proto.game.chengdumj.AckChangeCardOk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > chairid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > isok_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_chengdugameproto_2eproto();
  friend void protobuf_AssignDesc_chengdugameproto_2eproto();
  friend void protobuf_ShutdownFile_chengdugameproto_2eproto();

  void InitAsDefaultInstance();
  static AckChangeCardOk* default_instance_;
};
// -------------------------------------------------------------------

class AckChangeCard : public ::google::protobuf::Message {
 public:
  AckChangeCard();
  virtual ~AckChangeCard();

  AckChangeCard(const AckChangeCard& from);

  inline AckChangeCard& operator=(const AckChangeCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckChangeCard& default_instance();

  void Swap(AckChangeCard* other);

  // implements Message ----------------------------------------------

  AckChangeCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckChangeCard& from);
  void MergeFrom(const AckChangeCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chairID = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairIDFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // repeated int32 Card = 2;
  inline int card_size() const;
  inline void clear_card();
  static const int kCardFieldNumber = 2;
  inline ::google::protobuf::int32 card(int index) const;
  inline void set_card(int index, ::google::protobuf::int32 value);
  inline void add_card(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      card() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_card();

  // repeated int32 oldCard = 3;
  inline int oldcard_size() const;
  inline void clear_oldcard();
  static const int kOldCardFieldNumber = 3;
  inline ::google::protobuf::int32 oldcard(int index) const;
  inline void set_oldcard(int index, ::google::protobuf::int32 value);
  inline void add_oldcard(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      oldcard() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_oldcard();

  // @@protoc_insertion_point(class_scope:proto.game.chengdumj.AckChangeCard)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > card_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > oldcard_;
  ::google::protobuf::int32 chairid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_chengdugameproto_2eproto();
  friend void protobuf_AssignDesc_chengdugameproto_2eproto();
  friend void protobuf_ShutdownFile_chengdugameproto_2eproto();

  void InitAsDefaultInstance();
  static AckChangeCard* default_instance_;
};
// -------------------------------------------------------------------

class ReqChangeCard : public ::google::protobuf::Message {
 public:
  ReqChangeCard();
  virtual ~ReqChangeCard();

  ReqChangeCard(const ReqChangeCard& from);

  inline ReqChangeCard& operator=(const ReqChangeCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqChangeCard& default_instance();

  void Swap(ReqChangeCard* other);

  // implements Message ----------------------------------------------

  ReqChangeCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqChangeCard& from);
  void MergeFrom(const ReqChangeCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ischange = 1;
  inline bool has_ischange() const;
  inline void clear_ischange();
  static const int kIschangeFieldNumber = 1;
  inline ::google::protobuf::int32 ischange() const;
  inline void set_ischange(::google::protobuf::int32 value);

  // repeated int32 Card = 2;
  inline int card_size() const;
  inline void clear_card();
  static const int kCardFieldNumber = 2;
  inline ::google::protobuf::int32 card(int index) const;
  inline void set_card(int index, ::google::protobuf::int32 value);
  inline void add_card(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      card() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_card();

  // @@protoc_insertion_point(class_scope:proto.game.chengdumj.ReqChangeCard)
 private:
  inline void set_has_ischange();
  inline void clear_has_ischange();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > card_;
  ::google::protobuf::int32 ischange_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_chengdugameproto_2eproto();
  friend void protobuf_AssignDesc_chengdugameproto_2eproto();
  friend void protobuf_ShutdownFile_chengdugameproto_2eproto();

  void InitAsDefaultInstance();
  static ReqChangeCard* default_instance_;
};
// -------------------------------------------------------------------

class AckUserLackStart : public ::google::protobuf::Message {
 public:
  AckUserLackStart();
  virtual ~AckUserLackStart();

  AckUserLackStart(const AckUserLackStart& from);

  inline AckUserLackStart& operator=(const AckUserLackStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckUserLackStart& default_instance();

  void Swap(AckUserLackStart* other);

  // implements Message ----------------------------------------------

  AckUserLackStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckUserLackStart& from);
  void MergeFrom(const AckUserLackStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 isTimeOut = 1;
  inline bool has_istimeout() const;
  inline void clear_istimeout();
  static const int kIsTimeOutFieldNumber = 1;
  inline ::google::protobuf::int32 istimeout() const;
  inline void set_istimeout(::google::protobuf::int32 value);

  // optional int32 remain_time = 2;
  inline bool has_remain_time() const;
  inline void clear_remain_time();
  static const int kRemainTimeFieldNumber = 2;
  inline ::google::protobuf::int32 remain_time() const;
  inline void set_remain_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.chengdumj.AckUserLackStart)
 private:
  inline void set_has_istimeout();
  inline void clear_has_istimeout();
  inline void set_has_remain_time();
  inline void clear_has_remain_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 istimeout_;
  ::google::protobuf::int32 remain_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_chengdugameproto_2eproto();
  friend void protobuf_AssignDesc_chengdugameproto_2eproto();
  friend void protobuf_ShutdownFile_chengdugameproto_2eproto();

  void InitAsDefaultInstance();
  static AckUserLackStart* default_instance_;
};
// -------------------------------------------------------------------

class AckUserLackTypeOk : public ::google::protobuf::Message {
 public:
  AckUserLackTypeOk();
  virtual ~AckUserLackTypeOk();

  AckUserLackTypeOk(const AckUserLackTypeOk& from);

  inline AckUserLackTypeOk& operator=(const AckUserLackTypeOk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckUserLackTypeOk& default_instance();

  void Swap(AckUserLackTypeOk* other);

  // implements Message ----------------------------------------------

  AckUserLackTypeOk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckUserLackTypeOk& from);
  void MergeFrom(const AckUserLackTypeOk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 chairID = 1;
  inline int chairid_size() const;
  inline void clear_chairid();
  static const int kChairIDFieldNumber = 1;
  inline ::google::protobuf::int32 chairid(int index) const;
  inline void set_chairid(int index, ::google::protobuf::int32 value);
  inline void add_chairid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      chairid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_chairid();

  // repeated int32 isOk = 2;
  inline int isok_size() const;
  inline void clear_isok();
  static const int kIsOkFieldNumber = 2;
  inline ::google::protobuf::int32 isok(int index) const;
  inline void set_isok(int index, ::google::protobuf::int32 value);
  inline void add_isok(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      isok() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_isok();

  // @@protoc_insertion_point(class_scope:proto.game.chengdumj.AckUserLackTypeOk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > chairid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > isok_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_chengdugameproto_2eproto();
  friend void protobuf_AssignDesc_chengdugameproto_2eproto();
  friend void protobuf_ShutdownFile_chengdugameproto_2eproto();

  void InitAsDefaultInstance();
  static AckUserLackTypeOk* default_instance_;
};
// -------------------------------------------------------------------

class AckUserLackType : public ::google::protobuf::Message {
 public:
  AckUserLackType();
  virtual ~AckUserLackType();

  AckUserLackType(const AckUserLackType& from);

  inline AckUserLackType& operator=(const AckUserLackType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckUserLackType& default_instance();

  void Swap(AckUserLackType* other);

  // implements Message ----------------------------------------------

  AckUserLackType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckUserLackType& from);
  void MergeFrom(const AckUserLackType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 LackType = 1;
  inline int lacktype_size() const;
  inline void clear_lacktype();
  static const int kLackTypeFieldNumber = 1;
  inline ::google::protobuf::int32 lacktype(int index) const;
  inline void set_lacktype(int index, ::google::protobuf::int32 value);
  inline void add_lacktype(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lacktype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lacktype();

  // @@protoc_insertion_point(class_scope:proto.game.chengdumj.AckUserLackType)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lacktype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_chengdugameproto_2eproto();
  friend void protobuf_AssignDesc_chengdugameproto_2eproto();
  friend void protobuf_ShutdownFile_chengdugameproto_2eproto();

  void InitAsDefaultInstance();
  static AckUserLackType* default_instance_;
};
// -------------------------------------------------------------------

class ReqChooseLackType : public ::google::protobuf::Message {
 public:
  ReqChooseLackType();
  virtual ~ReqChooseLackType();

  ReqChooseLackType(const ReqChooseLackType& from);

  inline ReqChooseLackType& operator=(const ReqChooseLackType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqChooseLackType& default_instance();

  void Swap(ReqChooseLackType* other);

  // implements Message ----------------------------------------------

  ReqChooseLackType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqChooseLackType& from);
  void MergeFrom(const ReqChooseLackType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.chengdumj.ReqChooseLackType)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_chengdugameproto_2eproto();
  friend void protobuf_AssignDesc_chengdugameproto_2eproto();
  friend void protobuf_ShutdownFile_chengdugameproto_2eproto();

  void InitAsDefaultInstance();
  static ReqChooseLackType* default_instance_;
};
// -------------------------------------------------------------------

class tagCDGameScence : public ::google::protobuf::Message {
 public:
  tagCDGameScence();
  virtual ~tagCDGameScence();

  tagCDGameScence(const tagCDGameScence& from);

  inline tagCDGameScence& operator=(const tagCDGameScence& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagCDGameScence& default_instance();

  void Swap(tagCDGameScence* other);

  // implements Message ----------------------------------------------

  tagCDGameScence* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagCDGameScence& from);
  void MergeFrom(const tagCDGameScence& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.game.AckGameScene GameSence = 1;
  inline bool has_gamesence() const;
  inline void clear_gamesence();
  static const int kGameSenceFieldNumber = 1;
  inline const ::proto::game::AckGameScene& gamesence() const;
  inline ::proto::game::AckGameScene* mutable_gamesence();
  inline ::proto::game::AckGameScene* release_gamesence();
  inline void set_allocated_gamesence(::proto::game::AckGameScene* gamesence);

  // optional bool dingqueing = 2;
  inline bool has_dingqueing() const;
  inline void clear_dingqueing();
  static const int kDingqueingFieldNumber = 2;
  inline bool dingqueing() const;
  inline void set_dingqueing(bool value);

  // optional int32 dingque_remain_time = 3;
  inline bool has_dingque_remain_time() const;
  inline void clear_dingque_remain_time();
  static const int kDingqueRemainTimeFieldNumber = 3;
  inline ::google::protobuf::int32 dingque_remain_time() const;
  inline void set_dingque_remain_time(::google::protobuf::int32 value);

  // optional bool huanzhanging = 4;
  inline bool has_huanzhanging() const;
  inline void clear_huanzhanging();
  static const int kHuanzhangingFieldNumber = 4;
  inline bool huanzhanging() const;
  inline void set_huanzhanging(bool value);

  // optional int32 huanzhang_remain_time = 5;
  inline bool has_huanzhang_remain_time() const;
  inline void clear_huanzhang_remain_time();
  static const int kHuanzhangRemainTimeFieldNumber = 5;
  inline ::google::protobuf::int32 huanzhang_remain_time() const;
  inline void set_huanzhang_remain_time(::google::protobuf::int32 value);

  // repeated int32 dingqueisok = 6;
  inline int dingqueisok_size() const;
  inline void clear_dingqueisok();
  static const int kDingqueisokFieldNumber = 6;
  inline ::google::protobuf::int32 dingqueisok(int index) const;
  inline void set_dingqueisok(int index, ::google::protobuf::int32 value);
  inline void add_dingqueisok(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dingqueisok() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dingqueisok();

  // repeated int32 dingquese = 7;
  inline int dingquese_size() const;
  inline void clear_dingquese();
  static const int kDingqueseFieldNumber = 7;
  inline ::google::protobuf::int32 dingquese(int index) const;
  inline void set_dingquese(int index, ::google::protobuf::int32 value);
  inline void add_dingquese(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dingquese() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dingquese();

  // repeated int32 huanzhangisok = 8;
  inline int huanzhangisok_size() const;
  inline void clear_huanzhangisok();
  static const int kHuanzhangisokFieldNumber = 8;
  inline ::google::protobuf::int32 huanzhangisok(int index) const;
  inline void set_huanzhangisok(int index, ::google::protobuf::int32 value);
  inline void add_huanzhangisok(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      huanzhangisok() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_huanzhangisok();

  // repeated .proto.game.chengdumj.ReqChangeCard huanzhangpai = 9;
  inline int huanzhangpai_size() const;
  inline void clear_huanzhangpai();
  static const int kHuanzhangpaiFieldNumber = 9;
  inline const ::proto::game::chengdumj::ReqChangeCard& huanzhangpai(int index) const;
  inline ::proto::game::chengdumj::ReqChangeCard* mutable_huanzhangpai(int index);
  inline ::proto::game::chengdumj::ReqChangeCard* add_huanzhangpai();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::ReqChangeCard >&
      huanzhangpai() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::ReqChangeCard >*
      mutable_huanzhangpai();

  // optional int32 GameType = 10;
  inline bool has_gametype() const;
  inline void clear_gametype();
  static const int kGameTypeFieldNumber = 10;
  inline ::google::protobuf::int32 gametype() const;
  inline void set_gametype(::google::protobuf::int32 value);

  // optional int32 bYiPaoDuoXiang = 11;
  inline bool has_byipaoduoxiang() const;
  inline void clear_byipaoduoxiang();
  static const int kBYiPaoDuoXiangFieldNumber = 11;
  inline ::google::protobuf::int32 byipaoduoxiang() const;
  inline void set_byipaoduoxiang(::google::protobuf::int32 value);

  // optional int32 bQiangGangHu = 12;
  inline bool has_bqiangganghu() const;
  inline void clear_bqiangganghu();
  static const int kBQiangGangHuFieldNumber = 12;
  inline ::google::protobuf::int32 bqiangganghu() const;
  inline void set_bqiangganghu(::google::protobuf::int32 value);

  // optional int32 bHuanSanZhang = 13;
  inline bool has_bhuansanzhang() const;
  inline void clear_bhuansanzhang();
  static const int kBHuanSanZhangFieldNumber = 13;
  inline ::google::protobuf::int32 bhuansanzhang() const;
  inline void set_bhuansanzhang(::google::protobuf::int32 value);

  // optional int32 bAllDianGangHua = 14;
  inline bool has_balldianganghua() const;
  inline void clear_balldianganghua();
  static const int kBAllDianGangHuaFieldNumber = 14;
  inline ::google::protobuf::int32 balldianganghua() const;
  inline void set_balldianganghua(::google::protobuf::int32 value);

  // optional int32 bZiMoJiaFanJiaDi = 15;
  inline bool has_bzimojiafanjiadi() const;
  inline void clear_bzimojiafanjiadi();
  static const int kBZiMoJiaFanJiaDiFieldNumber = 15;
  inline ::google::protobuf::int32 bzimojiafanjiadi() const;
  inline void set_bzimojiafanjiadi(::google::protobuf::int32 value);

  // optional int32 bHuFanFengDing = 16;
  inline bool has_bhufanfengding() const;
  inline void clear_bhufanfengding();
  static const int kBHuFanFengDingFieldNumber = 16;
  inline ::google::protobuf::int32 bhufanfengding() const;
  inline void set_bhufanfengding(::google::protobuf::int32 value);

  // optional int32 bYaoJiuJiangDui = 17;
  inline bool has_byaojiujiangdui() const;
  inline void clear_byaojiujiangdui();
  static const int kBYaoJiuJiangDuiFieldNumber = 17;
  inline ::google::protobuf::int32 byaojiujiangdui() const;
  inline void set_byaojiujiangdui(::google::protobuf::int32 value);

  // optional int32 bMenQingZhongZhang = 18;
  inline bool has_bmenqingzhongzhang() const;
  inline void clear_bmenqingzhongzhang();
  static const int kBMenQingZhongZhangFieldNumber = 18;
  inline ::google::protobuf::int32 bmenqingzhongzhang() const;
  inline void set_bmenqingzhongzhang(::google::protobuf::int32 value);

  // optional int32 bTianDiHu = 19;
  inline bool has_btiandihu() const;
  inline void clear_btiandihu();
  static const int kBTianDiHuFieldNumber = 19;
  inline ::google::protobuf::int32 btiandihu() const;
  inline void set_btiandihu(::google::protobuf::int32 value);

  // optional int32 bDianPaoKePingHu = 20;
  inline bool has_bdianpaokepinghu() const;
  inline void clear_bdianpaokepinghu();
  static const int kBDianPaoKePingHuFieldNumber = 20;
  inline ::google::protobuf::int32 bdianpaokepinghu() const;
  inline void set_bdianpaokepinghu(::google::protobuf::int32 value);

  // optional int32 bYiTiaoLong = 21;
  inline bool has_byitiaolong() const;
  inline void clear_byitiaolong();
  static const int kBYiTiaoLongFieldNumber = 21;
  inline ::google::protobuf::int32 byitiaolong() const;
  inline void set_byitiaolong(::google::protobuf::int32 value);

  // optional int32 bGuaCa = 22;
  inline bool has_bguaca() const;
  inline void clear_bguaca();
  static const int kBGuaCaFieldNumber = 22;
  inline ::google::protobuf::int32 bguaca() const;
  inline void set_bguaca(::google::protobuf::int32 value);

  // optional int32 nPlayNum = 23;
  inline bool has_nplaynum() const;
  inline void clear_nplaynum();
  static const int kNPlayNumFieldNumber = 23;
  inline ::google::protobuf::int32 nplaynum() const;
  inline void set_nplaynum(::google::protobuf::int32 value);

  // optional int32 nPaiZhangShu = 24;
  inline bool has_npaizhangshu() const;
  inline void clear_npaizhangshu();
  static const int kNPaiZhangShuFieldNumber = 24;
  inline ::google::protobuf::int32 npaizhangshu() const;
  inline void set_npaizhangshu(::google::protobuf::int32 value);

  // optional int32 nTianHuFan = 25;
  inline bool has_ntianhufan() const;
  inline void clear_ntianhufan();
  static const int kNTianHuFanFieldNumber = 25;
  inline ::google::protobuf::int32 ntianhufan() const;
  inline void set_ntianhufan(::google::protobuf::int32 value);

  // optional int32 nDiHuFan = 26;
  inline bool has_ndihufan() const;
  inline void clear_ndihufan();
  static const int kNDiHuFanFieldNumber = 26;
  inline ::google::protobuf::int32 ndihufan() const;
  inline void set_ndihufan(::google::protobuf::int32 value);

  // optional int32 nDuiDuiHuFan = 27;
  inline bool has_nduiduihufan() const;
  inline void clear_nduiduihufan();
  static const int kNDuiDuiHuFanFieldNumber = 27;
  inline ::google::protobuf::int32 nduiduihufan() const;
  inline void set_nduiduihufan(::google::protobuf::int32 value);

  // repeated int32 nHuType = 28;
  inline int nhutype_size() const;
  inline void clear_nhutype();
  static const int kNHuTypeFieldNumber = 28;
  inline ::google::protobuf::int32 nhutype(int index) const;
  inline void set_nhutype(int index, ::google::protobuf::int32 value);
  inline void add_nhutype(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nhutype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nhutype();

  // repeated int32 nZiMoHuCard = 29;
  inline int nzimohucard_size() const;
  inline void clear_nzimohucard();
  static const int kNZiMoHuCardFieldNumber = 29;
  inline ::google::protobuf::int32 nzimohucard(int index) const;
  inline void set_nzimohucard(int index, ::google::protobuf::int32 value);
  inline void add_nzimohucard(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nzimohucard() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nzimohucard();

  // optional int32 bJiaXinWu = 30;
  inline bool has_bjiaxinwu() const;
  inline void clear_bjiaxinwu();
  static const int kBJiaXinWuFieldNumber = 30;
  inline ::google::protobuf::int32 bjiaxinwu() const;
  inline void set_bjiaxinwu(::google::protobuf::int32 value);

  // repeated .proto.game.chengdumj.DianPaoInfo stdianpaoinfo = 31;
  inline int stdianpaoinfo_size() const;
  inline void clear_stdianpaoinfo();
  static const int kStdianpaoinfoFieldNumber = 31;
  inline const ::proto::game::chengdumj::DianPaoInfo& stdianpaoinfo(int index) const;
  inline ::proto::game::chengdumj::DianPaoInfo* mutable_stdianpaoinfo(int index);
  inline ::proto::game::chengdumj::DianPaoInfo* add_stdianpaoinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::DianPaoInfo >&
      stdianpaoinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::DianPaoInfo >*
      mutable_stdianpaoinfo();

  // repeated int32 nDianPaoHuCard = 32;
  inline int ndianpaohucard_size() const;
  inline void clear_ndianpaohucard();
  static const int kNDianPaoHuCardFieldNumber = 32;
  inline ::google::protobuf::int32 ndianpaohucard(int index) const;
  inline void set_ndianpaohucard(int index, ::google::protobuf::int32 value);
  inline void add_ndianpaohucard(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ndianpaohucard() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ndianpaohucard();

  // optional int32 bHaiDiHuaJiaFan = 33;
  inline bool has_bhaidihuajiafan() const;
  inline void clear_bhaidihuajiafan();
  static const int kBHaiDiHuaJiaFanFieldNumber = 33;
  inline ::google::protobuf::int32 bhaidihuajiafan() const;
  inline void set_bhaidihuajiafan(::google::protobuf::int32 value);

  // optional int32 bHaiDiPaoJiaFan = 34;
  inline bool has_bhaidipaojiafan() const;
  inline void clear_bhaidipaojiafan();
  static const int kBHaiDiPaoJiaFanFieldNumber = 34;
  inline ::google::protobuf::int32 bhaidipaojiafan() const;
  inline void set_bhaidipaojiafan(::google::protobuf::int32 value);

  // optional int32 bDiFen = 35;
  inline bool has_bdifen() const;
  inline void clear_bdifen();
  static const int kBDiFenFieldNumber = 35;
  inline ::google::protobuf::int32 bdifen() const;
  inline void set_bdifen(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.chengdumj.tagCDGameScence)
 private:
  inline void set_has_gamesence();
  inline void clear_has_gamesence();
  inline void set_has_dingqueing();
  inline void clear_has_dingqueing();
  inline void set_has_dingque_remain_time();
  inline void clear_has_dingque_remain_time();
  inline void set_has_huanzhanging();
  inline void clear_has_huanzhanging();
  inline void set_has_huanzhang_remain_time();
  inline void clear_has_huanzhang_remain_time();
  inline void set_has_gametype();
  inline void clear_has_gametype();
  inline void set_has_byipaoduoxiang();
  inline void clear_has_byipaoduoxiang();
  inline void set_has_bqiangganghu();
  inline void clear_has_bqiangganghu();
  inline void set_has_bhuansanzhang();
  inline void clear_has_bhuansanzhang();
  inline void set_has_balldianganghua();
  inline void clear_has_balldianganghua();
  inline void set_has_bzimojiafanjiadi();
  inline void clear_has_bzimojiafanjiadi();
  inline void set_has_bhufanfengding();
  inline void clear_has_bhufanfengding();
  inline void set_has_byaojiujiangdui();
  inline void clear_has_byaojiujiangdui();
  inline void set_has_bmenqingzhongzhang();
  inline void clear_has_bmenqingzhongzhang();
  inline void set_has_btiandihu();
  inline void clear_has_btiandihu();
  inline void set_has_bdianpaokepinghu();
  inline void clear_has_bdianpaokepinghu();
  inline void set_has_byitiaolong();
  inline void clear_has_byitiaolong();
  inline void set_has_bguaca();
  inline void clear_has_bguaca();
  inline void set_has_nplaynum();
  inline void clear_has_nplaynum();
  inline void set_has_npaizhangshu();
  inline void clear_has_npaizhangshu();
  inline void set_has_ntianhufan();
  inline void clear_has_ntianhufan();
  inline void set_has_ndihufan();
  inline void clear_has_ndihufan();
  inline void set_has_nduiduihufan();
  inline void clear_has_nduiduihufan();
  inline void set_has_bjiaxinwu();
  inline void clear_has_bjiaxinwu();
  inline void set_has_bhaidihuajiafan();
  inline void clear_has_bhaidihuajiafan();
  inline void set_has_bhaidipaojiafan();
  inline void clear_has_bhaidipaojiafan();
  inline void set_has_bdifen();
  inline void clear_has_bdifen();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::game::AckGameScene* gamesence_;
  bool dingqueing_;
  bool huanzhanging_;
  ::google::protobuf::int32 dingque_remain_time_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dingqueisok_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dingquese_;
  ::google::protobuf::int32 huanzhang_remain_time_;
  ::google::protobuf::int32 gametype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > huanzhangisok_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::ReqChangeCard > huanzhangpai_;
  ::google::protobuf::int32 byipaoduoxiang_;
  ::google::protobuf::int32 bqiangganghu_;
  ::google::protobuf::int32 bhuansanzhang_;
  ::google::protobuf::int32 balldianganghua_;
  ::google::protobuf::int32 bzimojiafanjiadi_;
  ::google::protobuf::int32 bhufanfengding_;
  ::google::protobuf::int32 byaojiujiangdui_;
  ::google::protobuf::int32 bmenqingzhongzhang_;
  ::google::protobuf::int32 btiandihu_;
  ::google::protobuf::int32 bdianpaokepinghu_;
  ::google::protobuf::int32 byitiaolong_;
  ::google::protobuf::int32 bguaca_;
  ::google::protobuf::int32 nplaynum_;
  ::google::protobuf::int32 npaizhangshu_;
  ::google::protobuf::int32 ntianhufan_;
  ::google::protobuf::int32 ndihufan_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nhutype_;
  ::google::protobuf::int32 nduiduihufan_;
  ::google::protobuf::int32 bjiaxinwu_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nzimohucard_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::DianPaoInfo > stdianpaoinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ndianpaohucard_;
  ::google::protobuf::int32 bhaidihuajiafan_;
  ::google::protobuf::int32 bhaidipaojiafan_;
  ::google::protobuf::int32 bdifen_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(35 + 31) / 32];

  friend void  protobuf_AddDesc_chengdugameproto_2eproto();
  friend void protobuf_AssignDesc_chengdugameproto_2eproto();
  friend void protobuf_ShutdownFile_chengdugameproto_2eproto();

  void InitAsDefaultInstance();
  static tagCDGameScence* default_instance_;
};
// -------------------------------------------------------------------

class DianPaoInfo : public ::google::protobuf::Message {
 public:
  DianPaoInfo();
  virtual ~DianPaoInfo();

  DianPaoInfo(const DianPaoInfo& from);

  inline DianPaoInfo& operator=(const DianPaoInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DianPaoInfo& default_instance();

  void Swap(DianPaoInfo* other);

  // implements Message ----------------------------------------------

  DianPaoInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DianPaoInfo& from);
  void MergeFrom(const DianPaoInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 seatid = 1;
  inline bool has_seatid() const;
  inline void clear_seatid();
  static const int kSeatidFieldNumber = 1;
  inline ::google::protobuf::int32 seatid() const;
  inline void set_seatid(::google::protobuf::int32 value);

  // optional int32 nDianPaoCardShunXu = 2;
  inline bool has_ndianpaocardshunxu() const;
  inline void clear_ndianpaocardshunxu();
  static const int kNDianPaoCardShunXuFieldNumber = 2;
  inline ::google::protobuf::int32 ndianpaocardshunxu() const;
  inline void set_ndianpaocardshunxu(::google::protobuf::int32 value);

  // optional int32 nDianPaoCard = 3;
  inline bool has_ndianpaocard() const;
  inline void clear_ndianpaocard();
  static const int kNDianPaoCardFieldNumber = 3;
  inline ::google::protobuf::int32 ndianpaocard() const;
  inline void set_ndianpaocard(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.chengdumj.DianPaoInfo)
 private:
  inline void set_has_seatid();
  inline void clear_has_seatid();
  inline void set_has_ndianpaocardshunxu();
  inline void clear_has_ndianpaocardshunxu();
  inline void set_has_ndianpaocard();
  inline void clear_has_ndianpaocard();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seatid_;
  ::google::protobuf::int32 ndianpaocardshunxu_;
  ::google::protobuf::int32 ndianpaocard_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_chengdugameproto_2eproto();
  friend void protobuf_AssignDesc_chengdugameproto_2eproto();
  friend void protobuf_ShutdownFile_chengdugameproto_2eproto();

  void InitAsDefaultInstance();
  static DianPaoInfo* default_instance_;
};
// -------------------------------------------------------------------

class AckCDGameEnd : public ::google::protobuf::Message {
 public:
  AckCDGameEnd();
  virtual ~AckCDGameEnd();

  AckCDGameEnd(const AckCDGameEnd& from);

  inline AckCDGameEnd& operator=(const AckCDGameEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckCDGameEnd& default_instance();

  void Swap(AckCDGameEnd* other);

  // implements Message ----------------------------------------------

  AckCDGameEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckCDGameEnd& from);
  void MergeFrom(const AckCDGameEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.game.AckGameEnd_Chengdu gameend = 1;
  inline bool has_gameend() const;
  inline void clear_gameend();
  static const int kGameendFieldNumber = 1;
  inline const ::proto::game::AckGameEnd_Chengdu& gameend() const;
  inline ::proto::game::AckGameEnd_Chengdu* mutable_gameend();
  inline ::proto::game::AckGameEnd_Chengdu* release_gameend();
  inline void set_allocated_gameend(::proto::game::AckGameEnd_Chengdu* gameend);

  // repeated int32 husocore = 2;
  inline int husocore_size() const;
  inline void clear_husocore();
  static const int kHusocoreFieldNumber = 2;
  inline ::google::protobuf::int32 husocore(int index) const;
  inline void set_husocore(int index, ::google::protobuf::int32 value);
  inline void add_husocore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      husocore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_husocore();

  // repeated .proto.game.chengdumj.HuPaiInfo hupaiinfo = 3;
  inline int hupaiinfo_size() const;
  inline void clear_hupaiinfo();
  static const int kHupaiinfoFieldNumber = 3;
  inline const ::proto::game::chengdumj::HuPaiInfo& hupaiinfo(int index) const;
  inline ::proto::game::chengdumj::HuPaiInfo* mutable_hupaiinfo(int index);
  inline ::proto::game::chengdumj::HuPaiInfo* add_hupaiinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::HuPaiInfo >&
      hupaiinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::HuPaiInfo >*
      mutable_hupaiinfo();

  // repeated .proto.game.chengdumj.DaJiaoInfo dajiaoinfo = 4;
  inline int dajiaoinfo_size() const;
  inline void clear_dajiaoinfo();
  static const int kDajiaoinfoFieldNumber = 4;
  inline const ::proto::game::chengdumj::DaJiaoInfo& dajiaoinfo(int index) const;
  inline ::proto::game::chengdumj::DaJiaoInfo* mutable_dajiaoinfo(int index);
  inline ::proto::game::chengdumj::DaJiaoInfo* add_dajiaoinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::DaJiaoInfo >&
      dajiaoinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::DaJiaoInfo >*
      mutable_dajiaoinfo();

  // @@protoc_insertion_point(class_scope:proto.game.chengdumj.AckCDGameEnd)
 private:
  inline void set_has_gameend();
  inline void clear_has_gameend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::game::AckGameEnd_Chengdu* gameend_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > husocore_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::HuPaiInfo > hupaiinfo_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::DaJiaoInfo > dajiaoinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_chengdugameproto_2eproto();
  friend void protobuf_AssignDesc_chengdugameproto_2eproto();
  friend void protobuf_ShutdownFile_chengdugameproto_2eproto();

  void InitAsDefaultInstance();
  static AckCDGameEnd* default_instance_;
};
// -------------------------------------------------------------------

class DaJiaoInfo : public ::google::protobuf::Message {
 public:
  DaJiaoInfo();
  virtual ~DaJiaoInfo();

  DaJiaoInfo(const DaJiaoInfo& from);

  inline DaJiaoInfo& operator=(const DaJiaoInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DaJiaoInfo& default_instance();

  void Swap(DaJiaoInfo* other);

  // implements Message ----------------------------------------------

  DaJiaoInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DaJiaoInfo& from);
  void MergeFrom(const DaJiaoInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 seatid = 1;
  inline bool has_seatid() const;
  inline void clear_seatid();
  static const int kSeatidFieldNumber = 1;
  inline ::google::protobuf::int32 seatid() const;
  inline void set_seatid(::google::protobuf::int32 value);

  // optional int32 dajiaotype = 2;
  inline bool has_dajiaotype() const;
  inline void clear_dajiaotype();
  static const int kDajiaotypeFieldNumber = 2;
  inline ::google::protobuf::int32 dajiaotype() const;
  inline void set_dajiaotype(::google::protobuf::int32 value);

  // optional int32 dajiaofenshu = 3;
  inline bool has_dajiaofenshu() const;
  inline void clear_dajiaofenshu();
  static const int kDajiaofenshuFieldNumber = 3;
  inline ::google::protobuf::int32 dajiaofenshu() const;
  inline void set_dajiaofenshu(::google::protobuf::int32 value);

  // optional int32 dajiaopai = 4;
  inline bool has_dajiaopai() const;
  inline void clear_dajiaopai();
  static const int kDajiaopaiFieldNumber = 4;
  inline ::google::protobuf::int32 dajiaopai() const;
  inline void set_dajiaopai(::google::protobuf::int32 value);

  // optional int32 dajiaofan = 5;
  inline bool has_dajiaofan() const;
  inline void clear_dajiaofan();
  static const int kDajiaofanFieldNumber = 5;
  inline ::google::protobuf::int32 dajiaofan() const;
  inline void set_dajiaofan(::google::protobuf::int32 value);

  // repeated int32 dajiaoleixing = 6;
  inline int dajiaoleixing_size() const;
  inline void clear_dajiaoleixing();
  static const int kDajiaoleixingFieldNumber = 6;
  inline ::google::protobuf::int32 dajiaoleixing(int index) const;
  inline void set_dajiaoleixing(int index, ::google::protobuf::int32 value);
  inline void add_dajiaoleixing(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dajiaoleixing() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dajiaoleixing();

  // repeated int32 dajiaoleixingfan = 7;
  inline int dajiaoleixingfan_size() const;
  inline void clear_dajiaoleixingfan();
  static const int kDajiaoleixingfanFieldNumber = 7;
  inline ::google::protobuf::int32 dajiaoleixingfan(int index) const;
  inline void set_dajiaoleixingfan(int index, ::google::protobuf::int32 value);
  inline void add_dajiaoleixingfan(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dajiaoleixingfan() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dajiaoleixingfan();

  // @@protoc_insertion_point(class_scope:proto.game.chengdumj.DaJiaoInfo)
 private:
  inline void set_has_seatid();
  inline void clear_has_seatid();
  inline void set_has_dajiaotype();
  inline void clear_has_dajiaotype();
  inline void set_has_dajiaofenshu();
  inline void clear_has_dajiaofenshu();
  inline void set_has_dajiaopai();
  inline void clear_has_dajiaopai();
  inline void set_has_dajiaofan();
  inline void clear_has_dajiaofan();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seatid_;
  ::google::protobuf::int32 dajiaotype_;
  ::google::protobuf::int32 dajiaofenshu_;
  ::google::protobuf::int32 dajiaopai_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dajiaoleixing_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dajiaoleixingfan_;
  ::google::protobuf::int32 dajiaofan_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_chengdugameproto_2eproto();
  friend void protobuf_AssignDesc_chengdugameproto_2eproto();
  friend void protobuf_ShutdownFile_chengdugameproto_2eproto();

  void InitAsDefaultInstance();
  static DaJiaoInfo* default_instance_;
};
// -------------------------------------------------------------------

class GangFenInfo : public ::google::protobuf::Message {
 public:
  GangFenInfo();
  virtual ~GangFenInfo();

  GangFenInfo(const GangFenInfo& from);

  inline GangFenInfo& operator=(const GangFenInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GangFenInfo& default_instance();

  void Swap(GangFenInfo* other);

  // implements Message ----------------------------------------------

  GangFenInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GangFenInfo& from);
  void MergeFrom(const GangFenInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 seatid = 1;
  inline bool has_seatid() const;
  inline void clear_seatid();
  static const int kSeatidFieldNumber = 1;
  inline ::google::protobuf::int32 seatid() const;
  inline void set_seatid(::google::protobuf::int32 value);

  // optional int32 gangfen = 2;
  inline bool has_gangfen() const;
  inline void clear_gangfen();
  static const int kGangfenFieldNumber = 2;
  inline ::google::protobuf::int32 gangfen() const;
  inline void set_gangfen(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.chengdumj.GangFenInfo)
 private:
  inline void set_has_seatid();
  inline void clear_has_seatid();
  inline void set_has_gangfen();
  inline void clear_has_gangfen();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seatid_;
  ::google::protobuf::int32 gangfen_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_chengdugameproto_2eproto();
  friend void protobuf_AssignDesc_chengdugameproto_2eproto();
  friend void protobuf_ShutdownFile_chengdugameproto_2eproto();

  void InitAsDefaultInstance();
  static GangFenInfo* default_instance_;
};
// -------------------------------------------------------------------

class GangInfo : public ::google::protobuf::Message {
 public:
  GangInfo();
  virtual ~GangInfo();

  GangInfo(const GangInfo& from);

  inline GangInfo& operator=(const GangInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GangInfo& default_instance();

  void Swap(GangInfo* other);

  // implements Message ----------------------------------------------

  GangInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GangInfo& from);
  void MergeFrom(const GangInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 gangpai = 1;
  inline bool has_gangpai() const;
  inline void clear_gangpai();
  static const int kGangpaiFieldNumber = 1;
  inline ::google::protobuf::int32 gangpai() const;
  inline void set_gangpai(::google::protobuf::int32 value);

  // optional int32 gangtype = 2;
  inline bool has_gangtype() const;
  inline void clear_gangtype();
  static const int kGangtypeFieldNumber = 2;
  inline ::google::protobuf::int32 gangtype() const;
  inline void set_gangtype(::google::protobuf::int32 value);

  // optional int32 gangyingfen = 3;
  inline bool has_gangyingfen() const;
  inline void clear_gangyingfen();
  static const int kGangyingfenFieldNumber = 3;
  inline ::google::protobuf::int32 gangyingfen() const;
  inline void set_gangyingfen(::google::protobuf::int32 value);

  // optional int32 diangangid = 4;
  inline bool has_diangangid() const;
  inline void clear_diangangid();
  static const int kDiangangidFieldNumber = 4;
  inline ::google::protobuf::int32 diangangid() const;
  inline void set_diangangid(::google::protobuf::int32 value);

  // repeated .proto.game.chengdumj.GangFenInfo gangfeninfo = 5;
  inline int gangfeninfo_size() const;
  inline void clear_gangfeninfo();
  static const int kGangfeninfoFieldNumber = 5;
  inline const ::proto::game::chengdumj::GangFenInfo& gangfeninfo(int index) const;
  inline ::proto::game::chengdumj::GangFenInfo* mutable_gangfeninfo(int index);
  inline ::proto::game::chengdumj::GangFenInfo* add_gangfeninfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::GangFenInfo >&
      gangfeninfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::GangFenInfo >*
      mutable_gangfeninfo();

  // @@protoc_insertion_point(class_scope:proto.game.chengdumj.GangInfo)
 private:
  inline void set_has_gangpai();
  inline void clear_has_gangpai();
  inline void set_has_gangtype();
  inline void clear_has_gangtype();
  inline void set_has_gangyingfen();
  inline void clear_has_gangyingfen();
  inline void set_has_diangangid();
  inline void clear_has_diangangid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 gangpai_;
  ::google::protobuf::int32 gangtype_;
  ::google::protobuf::int32 gangyingfen_;
  ::google::protobuf::int32 diangangid_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::GangFenInfo > gangfeninfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_chengdugameproto_2eproto();
  friend void protobuf_AssignDesc_chengdugameproto_2eproto();
  friend void protobuf_ShutdownFile_chengdugameproto_2eproto();

  void InitAsDefaultInstance();
  static GangInfo* default_instance_;
};
// -------------------------------------------------------------------

class HuPaiInfo : public ::google::protobuf::Message {
 public:
  HuPaiInfo();
  virtual ~HuPaiInfo();

  HuPaiInfo(const HuPaiInfo& from);

  inline HuPaiInfo& operator=(const HuPaiInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HuPaiInfo& default_instance();

  void Swap(HuPaiInfo* other);

  // implements Message ----------------------------------------------

  HuPaiInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HuPaiInfo& from);
  void MergeFrom(const HuPaiInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 seatid = 1;
  inline bool has_seatid() const;
  inline void clear_seatid();
  static const int kSeatidFieldNumber = 1;
  inline ::google::protobuf::int32 seatid() const;
  inline void set_seatid(::google::protobuf::int32 value);

  // optional int32 totalhufan = 2;
  inline bool has_totalhufan() const;
  inline void clear_totalhufan();
  static const int kTotalhufanFieldNumber = 2;
  inline ::google::protobuf::int32 totalhufan() const;
  inline void set_totalhufan(::google::protobuf::int32 value);

  // optional int32 hutype = 3;
  inline bool has_hutype() const;
  inline void clear_hutype();
  static const int kHutypeFieldNumber = 3;
  inline ::google::protobuf::int32 hutype() const;
  inline void set_hutype(::google::protobuf::int32 value);

  // optional int32 hushunxu = 4;
  inline bool has_hushunxu() const;
  inline void clear_hushunxu();
  static const int kHushunxuFieldNumber = 4;
  inline ::google::protobuf::int32 hushunxu() const;
  inline void set_hushunxu(::google::protobuf::int32 value);

  // optional int32 hucard = 5;
  inline bool has_hucard() const;
  inline void clear_hucard();
  static const int kHucardFieldNumber = 5;
  inline ::google::protobuf::int32 hucard() const;
  inline void set_hucard(::google::protobuf::int32 value);

  // optional int32 dianpaoseatid = 6;
  inline bool has_dianpaoseatid() const;
  inline void clear_dianpaoseatid();
  static const int kDianpaoseatidFieldNumber = 6;
  inline ::google::protobuf::int32 dianpaoseatid() const;
  inline void set_dianpaoseatid(::google::protobuf::int32 value);

  // optional int32 totalgangfen = 7;
  inline bool has_totalgangfen() const;
  inline void clear_totalgangfen();
  static const int kTotalgangfenFieldNumber = 7;
  inline ::google::protobuf::int32 totalgangfen() const;
  inline void set_totalgangfen(::google::protobuf::int32 value);

  // optional int32 totalzhuanyufen = 8;
  inline bool has_totalzhuanyufen() const;
  inline void clear_totalzhuanyufen();
  static const int kTotalzhuanyufenFieldNumber = 8;
  inline ::google::protobuf::int32 totalzhuanyufen() const;
  inline void set_totalzhuanyufen(::google::protobuf::int32 value);

  // repeated int32 hufanleixing = 9;
  inline int hufanleixing_size() const;
  inline void clear_hufanleixing();
  static const int kHufanleixingFieldNumber = 9;
  inline ::google::protobuf::int32 hufanleixing(int index) const;
  inline void set_hufanleixing(int index, ::google::protobuf::int32 value);
  inline void add_hufanleixing(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      hufanleixing() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_hufanleixing();

  // repeated int32 hufan = 10;
  inline int hufan_size() const;
  inline void clear_hufan();
  static const int kHufanFieldNumber = 10;
  inline ::google::protobuf::int32 hufan(int index) const;
  inline void set_hufan(int index, ::google::protobuf::int32 value);
  inline void add_hufan(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      hufan() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_hufan();

  // repeated .proto.game.chengdumj.GangInfo ganginfo = 11;
  inline int ganginfo_size() const;
  inline void clear_ganginfo();
  static const int kGanginfoFieldNumber = 11;
  inline const ::proto::game::chengdumj::GangInfo& ganginfo(int index) const;
  inline ::proto::game::chengdumj::GangInfo* mutable_ganginfo(int index);
  inline ::proto::game::chengdumj::GangInfo* add_ganginfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::GangInfo >&
      ganginfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::GangInfo >*
      mutable_ganginfo();

  // repeated int32 beihuseatid = 12;
  inline int beihuseatid_size() const;
  inline void clear_beihuseatid();
  static const int kBeihuseatidFieldNumber = 12;
  inline ::google::protobuf::int32 beihuseatid(int index) const;
  inline void set_beihuseatid(int index, ::google::protobuf::int32 value);
  inline void add_beihuseatid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      beihuseatid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_beihuseatid();

  // @@protoc_insertion_point(class_scope:proto.game.chengdumj.HuPaiInfo)
 private:
  inline void set_has_seatid();
  inline void clear_has_seatid();
  inline void set_has_totalhufan();
  inline void clear_has_totalhufan();
  inline void set_has_hutype();
  inline void clear_has_hutype();
  inline void set_has_hushunxu();
  inline void clear_has_hushunxu();
  inline void set_has_hucard();
  inline void clear_has_hucard();
  inline void set_has_dianpaoseatid();
  inline void clear_has_dianpaoseatid();
  inline void set_has_totalgangfen();
  inline void clear_has_totalgangfen();
  inline void set_has_totalzhuanyufen();
  inline void clear_has_totalzhuanyufen();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seatid_;
  ::google::protobuf::int32 totalhufan_;
  ::google::protobuf::int32 hutype_;
  ::google::protobuf::int32 hushunxu_;
  ::google::protobuf::int32 hucard_;
  ::google::protobuf::int32 dianpaoseatid_;
  ::google::protobuf::int32 totalgangfen_;
  ::google::protobuf::int32 totalzhuanyufen_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > hufanleixing_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > hufan_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::GangInfo > ganginfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > beihuseatid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_chengdugameproto_2eproto();
  friend void protobuf_AssignDesc_chengdugameproto_2eproto();
  friend void protobuf_ShutdownFile_chengdugameproto_2eproto();

  void InitAsDefaultInstance();
  static HuPaiInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// AckUserChangeCardStart

// optional int32 isTimeOut = 1;
inline bool AckUserChangeCardStart::has_istimeout() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckUserChangeCardStart::set_has_istimeout() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckUserChangeCardStart::clear_has_istimeout() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckUserChangeCardStart::clear_istimeout() {
  istimeout_ = 0;
  clear_has_istimeout();
}
inline ::google::protobuf::int32 AckUserChangeCardStart::istimeout() const {
  return istimeout_;
}
inline void AckUserChangeCardStart::set_istimeout(::google::protobuf::int32 value) {
  set_has_istimeout();
  istimeout_ = value;
}

// optional int32 remain_time = 2;
inline bool AckUserChangeCardStart::has_remain_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckUserChangeCardStart::set_has_remain_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckUserChangeCardStart::clear_has_remain_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckUserChangeCardStart::clear_remain_time() {
  remain_time_ = 0;
  clear_has_remain_time();
}
inline ::google::protobuf::int32 AckUserChangeCardStart::remain_time() const {
  return remain_time_;
}
inline void AckUserChangeCardStart::set_remain_time(::google::protobuf::int32 value) {
  set_has_remain_time();
  remain_time_ = value;
}

// -------------------------------------------------------------------

// AckChangeCardOk

// repeated int32 chairID = 1;
inline int AckChangeCardOk::chairid_size() const {
  return chairid_.size();
}
inline void AckChangeCardOk::clear_chairid() {
  chairid_.Clear();
}
inline ::google::protobuf::int32 AckChangeCardOk::chairid(int index) const {
  return chairid_.Get(index);
}
inline void AckChangeCardOk::set_chairid(int index, ::google::protobuf::int32 value) {
  chairid_.Set(index, value);
}
inline void AckChangeCardOk::add_chairid(::google::protobuf::int32 value) {
  chairid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckChangeCardOk::chairid() const {
  return chairid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckChangeCardOk::mutable_chairid() {
  return &chairid_;
}

// repeated int32 isOk = 2;
inline int AckChangeCardOk::isok_size() const {
  return isok_.size();
}
inline void AckChangeCardOk::clear_isok() {
  isok_.Clear();
}
inline ::google::protobuf::int32 AckChangeCardOk::isok(int index) const {
  return isok_.Get(index);
}
inline void AckChangeCardOk::set_isok(int index, ::google::protobuf::int32 value) {
  isok_.Set(index, value);
}
inline void AckChangeCardOk::add_isok(::google::protobuf::int32 value) {
  isok_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckChangeCardOk::isok() const {
  return isok_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckChangeCardOk::mutable_isok() {
  return &isok_;
}

// -------------------------------------------------------------------

// AckChangeCard

// optional int32 chairID = 1;
inline bool AckChangeCard::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckChangeCard::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckChangeCard::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckChangeCard::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 AckChangeCard::chairid() const {
  return chairid_;
}
inline void AckChangeCard::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// repeated int32 Card = 2;
inline int AckChangeCard::card_size() const {
  return card_.size();
}
inline void AckChangeCard::clear_card() {
  card_.Clear();
}
inline ::google::protobuf::int32 AckChangeCard::card(int index) const {
  return card_.Get(index);
}
inline void AckChangeCard::set_card(int index, ::google::protobuf::int32 value) {
  card_.Set(index, value);
}
inline void AckChangeCard::add_card(::google::protobuf::int32 value) {
  card_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckChangeCard::card() const {
  return card_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckChangeCard::mutable_card() {
  return &card_;
}

// repeated int32 oldCard = 3;
inline int AckChangeCard::oldcard_size() const {
  return oldcard_.size();
}
inline void AckChangeCard::clear_oldcard() {
  oldcard_.Clear();
}
inline ::google::protobuf::int32 AckChangeCard::oldcard(int index) const {
  return oldcard_.Get(index);
}
inline void AckChangeCard::set_oldcard(int index, ::google::protobuf::int32 value) {
  oldcard_.Set(index, value);
}
inline void AckChangeCard::add_oldcard(::google::protobuf::int32 value) {
  oldcard_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckChangeCard::oldcard() const {
  return oldcard_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckChangeCard::mutable_oldcard() {
  return &oldcard_;
}

// -------------------------------------------------------------------

// ReqChangeCard

// optional int32 ischange = 1;
inline bool ReqChangeCard::has_ischange() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqChangeCard::set_has_ischange() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqChangeCard::clear_has_ischange() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqChangeCard::clear_ischange() {
  ischange_ = 0;
  clear_has_ischange();
}
inline ::google::protobuf::int32 ReqChangeCard::ischange() const {
  return ischange_;
}
inline void ReqChangeCard::set_ischange(::google::protobuf::int32 value) {
  set_has_ischange();
  ischange_ = value;
}

// repeated int32 Card = 2;
inline int ReqChangeCard::card_size() const {
  return card_.size();
}
inline void ReqChangeCard::clear_card() {
  card_.Clear();
}
inline ::google::protobuf::int32 ReqChangeCard::card(int index) const {
  return card_.Get(index);
}
inline void ReqChangeCard::set_card(int index, ::google::protobuf::int32 value) {
  card_.Set(index, value);
}
inline void ReqChangeCard::add_card(::google::protobuf::int32 value) {
  card_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ReqChangeCard::card() const {
  return card_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ReqChangeCard::mutable_card() {
  return &card_;
}

// -------------------------------------------------------------------

// AckUserLackStart

// optional int32 isTimeOut = 1;
inline bool AckUserLackStart::has_istimeout() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckUserLackStart::set_has_istimeout() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckUserLackStart::clear_has_istimeout() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckUserLackStart::clear_istimeout() {
  istimeout_ = 0;
  clear_has_istimeout();
}
inline ::google::protobuf::int32 AckUserLackStart::istimeout() const {
  return istimeout_;
}
inline void AckUserLackStart::set_istimeout(::google::protobuf::int32 value) {
  set_has_istimeout();
  istimeout_ = value;
}

// optional int32 remain_time = 2;
inline bool AckUserLackStart::has_remain_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckUserLackStart::set_has_remain_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckUserLackStart::clear_has_remain_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckUserLackStart::clear_remain_time() {
  remain_time_ = 0;
  clear_has_remain_time();
}
inline ::google::protobuf::int32 AckUserLackStart::remain_time() const {
  return remain_time_;
}
inline void AckUserLackStart::set_remain_time(::google::protobuf::int32 value) {
  set_has_remain_time();
  remain_time_ = value;
}

// -------------------------------------------------------------------

// AckUserLackTypeOk

// repeated int32 chairID = 1;
inline int AckUserLackTypeOk::chairid_size() const {
  return chairid_.size();
}
inline void AckUserLackTypeOk::clear_chairid() {
  chairid_.Clear();
}
inline ::google::protobuf::int32 AckUserLackTypeOk::chairid(int index) const {
  return chairid_.Get(index);
}
inline void AckUserLackTypeOk::set_chairid(int index, ::google::protobuf::int32 value) {
  chairid_.Set(index, value);
}
inline void AckUserLackTypeOk::add_chairid(::google::protobuf::int32 value) {
  chairid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckUserLackTypeOk::chairid() const {
  return chairid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckUserLackTypeOk::mutable_chairid() {
  return &chairid_;
}

// repeated int32 isOk = 2;
inline int AckUserLackTypeOk::isok_size() const {
  return isok_.size();
}
inline void AckUserLackTypeOk::clear_isok() {
  isok_.Clear();
}
inline ::google::protobuf::int32 AckUserLackTypeOk::isok(int index) const {
  return isok_.Get(index);
}
inline void AckUserLackTypeOk::set_isok(int index, ::google::protobuf::int32 value) {
  isok_.Set(index, value);
}
inline void AckUserLackTypeOk::add_isok(::google::protobuf::int32 value) {
  isok_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckUserLackTypeOk::isok() const {
  return isok_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckUserLackTypeOk::mutable_isok() {
  return &isok_;
}

// -------------------------------------------------------------------

// AckUserLackType

// repeated int32 LackType = 1;
inline int AckUserLackType::lacktype_size() const {
  return lacktype_.size();
}
inline void AckUserLackType::clear_lacktype() {
  lacktype_.Clear();
}
inline ::google::protobuf::int32 AckUserLackType::lacktype(int index) const {
  return lacktype_.Get(index);
}
inline void AckUserLackType::set_lacktype(int index, ::google::protobuf::int32 value) {
  lacktype_.Set(index, value);
}
inline void AckUserLackType::add_lacktype(::google::protobuf::int32 value) {
  lacktype_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckUserLackType::lacktype() const {
  return lacktype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckUserLackType::mutable_lacktype() {
  return &lacktype_;
}

// -------------------------------------------------------------------

// ReqChooseLackType

// required int32 Type = 1;
inline bool ReqChooseLackType::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqChooseLackType::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqChooseLackType::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqChooseLackType::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ReqChooseLackType::type() const {
  return type_;
}
inline void ReqChooseLackType::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// tagCDGameScence

// optional .proto.game.AckGameScene GameSence = 1;
inline bool tagCDGameScence::has_gamesence() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagCDGameScence::set_has_gamesence() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagCDGameScence::clear_has_gamesence() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagCDGameScence::clear_gamesence() {
  if (gamesence_ != NULL) gamesence_->::proto::game::AckGameScene::Clear();
  clear_has_gamesence();
}
inline const ::proto::game::AckGameScene& tagCDGameScence::gamesence() const {
  return gamesence_ != NULL ? *gamesence_ : *default_instance_->gamesence_;
}
inline ::proto::game::AckGameScene* tagCDGameScence::mutable_gamesence() {
  set_has_gamesence();
  if (gamesence_ == NULL) gamesence_ = new ::proto::game::AckGameScene;
  return gamesence_;
}
inline ::proto::game::AckGameScene* tagCDGameScence::release_gamesence() {
  clear_has_gamesence();
  ::proto::game::AckGameScene* temp = gamesence_;
  gamesence_ = NULL;
  return temp;
}
inline void tagCDGameScence::set_allocated_gamesence(::proto::game::AckGameScene* gamesence) {
  delete gamesence_;
  gamesence_ = gamesence;
  if (gamesence) {
    set_has_gamesence();
  } else {
    clear_has_gamesence();
  }
}

// optional bool dingqueing = 2;
inline bool tagCDGameScence::has_dingqueing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagCDGameScence::set_has_dingqueing() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagCDGameScence::clear_has_dingqueing() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagCDGameScence::clear_dingqueing() {
  dingqueing_ = false;
  clear_has_dingqueing();
}
inline bool tagCDGameScence::dingqueing() const {
  return dingqueing_;
}
inline void tagCDGameScence::set_dingqueing(bool value) {
  set_has_dingqueing();
  dingqueing_ = value;
}

// optional int32 dingque_remain_time = 3;
inline bool tagCDGameScence::has_dingque_remain_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tagCDGameScence::set_has_dingque_remain_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tagCDGameScence::clear_has_dingque_remain_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tagCDGameScence::clear_dingque_remain_time() {
  dingque_remain_time_ = 0;
  clear_has_dingque_remain_time();
}
inline ::google::protobuf::int32 tagCDGameScence::dingque_remain_time() const {
  return dingque_remain_time_;
}
inline void tagCDGameScence::set_dingque_remain_time(::google::protobuf::int32 value) {
  set_has_dingque_remain_time();
  dingque_remain_time_ = value;
}

// optional bool huanzhanging = 4;
inline bool tagCDGameScence::has_huanzhanging() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void tagCDGameScence::set_has_huanzhanging() {
  _has_bits_[0] |= 0x00000008u;
}
inline void tagCDGameScence::clear_has_huanzhanging() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void tagCDGameScence::clear_huanzhanging() {
  huanzhanging_ = false;
  clear_has_huanzhanging();
}
inline bool tagCDGameScence::huanzhanging() const {
  return huanzhanging_;
}
inline void tagCDGameScence::set_huanzhanging(bool value) {
  set_has_huanzhanging();
  huanzhanging_ = value;
}

// optional int32 huanzhang_remain_time = 5;
inline bool tagCDGameScence::has_huanzhang_remain_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void tagCDGameScence::set_has_huanzhang_remain_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void tagCDGameScence::clear_has_huanzhang_remain_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void tagCDGameScence::clear_huanzhang_remain_time() {
  huanzhang_remain_time_ = 0;
  clear_has_huanzhang_remain_time();
}
inline ::google::protobuf::int32 tagCDGameScence::huanzhang_remain_time() const {
  return huanzhang_remain_time_;
}
inline void tagCDGameScence::set_huanzhang_remain_time(::google::protobuf::int32 value) {
  set_has_huanzhang_remain_time();
  huanzhang_remain_time_ = value;
}

// repeated int32 dingqueisok = 6;
inline int tagCDGameScence::dingqueisok_size() const {
  return dingqueisok_.size();
}
inline void tagCDGameScence::clear_dingqueisok() {
  dingqueisok_.Clear();
}
inline ::google::protobuf::int32 tagCDGameScence::dingqueisok(int index) const {
  return dingqueisok_.Get(index);
}
inline void tagCDGameScence::set_dingqueisok(int index, ::google::protobuf::int32 value) {
  dingqueisok_.Set(index, value);
}
inline void tagCDGameScence::add_dingqueisok(::google::protobuf::int32 value) {
  dingqueisok_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagCDGameScence::dingqueisok() const {
  return dingqueisok_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagCDGameScence::mutable_dingqueisok() {
  return &dingqueisok_;
}

// repeated int32 dingquese = 7;
inline int tagCDGameScence::dingquese_size() const {
  return dingquese_.size();
}
inline void tagCDGameScence::clear_dingquese() {
  dingquese_.Clear();
}
inline ::google::protobuf::int32 tagCDGameScence::dingquese(int index) const {
  return dingquese_.Get(index);
}
inline void tagCDGameScence::set_dingquese(int index, ::google::protobuf::int32 value) {
  dingquese_.Set(index, value);
}
inline void tagCDGameScence::add_dingquese(::google::protobuf::int32 value) {
  dingquese_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagCDGameScence::dingquese() const {
  return dingquese_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagCDGameScence::mutable_dingquese() {
  return &dingquese_;
}

// repeated int32 huanzhangisok = 8;
inline int tagCDGameScence::huanzhangisok_size() const {
  return huanzhangisok_.size();
}
inline void tagCDGameScence::clear_huanzhangisok() {
  huanzhangisok_.Clear();
}
inline ::google::protobuf::int32 tagCDGameScence::huanzhangisok(int index) const {
  return huanzhangisok_.Get(index);
}
inline void tagCDGameScence::set_huanzhangisok(int index, ::google::protobuf::int32 value) {
  huanzhangisok_.Set(index, value);
}
inline void tagCDGameScence::add_huanzhangisok(::google::protobuf::int32 value) {
  huanzhangisok_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagCDGameScence::huanzhangisok() const {
  return huanzhangisok_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagCDGameScence::mutable_huanzhangisok() {
  return &huanzhangisok_;
}

// repeated .proto.game.chengdumj.ReqChangeCard huanzhangpai = 9;
inline int tagCDGameScence::huanzhangpai_size() const {
  return huanzhangpai_.size();
}
inline void tagCDGameScence::clear_huanzhangpai() {
  huanzhangpai_.Clear();
}
inline const ::proto::game::chengdumj::ReqChangeCard& tagCDGameScence::huanzhangpai(int index) const {
  return huanzhangpai_.Get(index);
}
inline ::proto::game::chengdumj::ReqChangeCard* tagCDGameScence::mutable_huanzhangpai(int index) {
  return huanzhangpai_.Mutable(index);
}
inline ::proto::game::chengdumj::ReqChangeCard* tagCDGameScence::add_huanzhangpai() {
  return huanzhangpai_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::ReqChangeCard >&
tagCDGameScence::huanzhangpai() const {
  return huanzhangpai_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::ReqChangeCard >*
tagCDGameScence::mutable_huanzhangpai() {
  return &huanzhangpai_;
}

// optional int32 GameType = 10;
inline bool tagCDGameScence::has_gametype() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void tagCDGameScence::set_has_gametype() {
  _has_bits_[0] |= 0x00000200u;
}
inline void tagCDGameScence::clear_has_gametype() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void tagCDGameScence::clear_gametype() {
  gametype_ = 0;
  clear_has_gametype();
}
inline ::google::protobuf::int32 tagCDGameScence::gametype() const {
  return gametype_;
}
inline void tagCDGameScence::set_gametype(::google::protobuf::int32 value) {
  set_has_gametype();
  gametype_ = value;
}

// optional int32 bYiPaoDuoXiang = 11;
inline bool tagCDGameScence::has_byipaoduoxiang() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void tagCDGameScence::set_has_byipaoduoxiang() {
  _has_bits_[0] |= 0x00000400u;
}
inline void tagCDGameScence::clear_has_byipaoduoxiang() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void tagCDGameScence::clear_byipaoduoxiang() {
  byipaoduoxiang_ = 0;
  clear_has_byipaoduoxiang();
}
inline ::google::protobuf::int32 tagCDGameScence::byipaoduoxiang() const {
  return byipaoduoxiang_;
}
inline void tagCDGameScence::set_byipaoduoxiang(::google::protobuf::int32 value) {
  set_has_byipaoduoxiang();
  byipaoduoxiang_ = value;
}

// optional int32 bQiangGangHu = 12;
inline bool tagCDGameScence::has_bqiangganghu() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void tagCDGameScence::set_has_bqiangganghu() {
  _has_bits_[0] |= 0x00000800u;
}
inline void tagCDGameScence::clear_has_bqiangganghu() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void tagCDGameScence::clear_bqiangganghu() {
  bqiangganghu_ = 0;
  clear_has_bqiangganghu();
}
inline ::google::protobuf::int32 tagCDGameScence::bqiangganghu() const {
  return bqiangganghu_;
}
inline void tagCDGameScence::set_bqiangganghu(::google::protobuf::int32 value) {
  set_has_bqiangganghu();
  bqiangganghu_ = value;
}

// optional int32 bHuanSanZhang = 13;
inline bool tagCDGameScence::has_bhuansanzhang() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void tagCDGameScence::set_has_bhuansanzhang() {
  _has_bits_[0] |= 0x00001000u;
}
inline void tagCDGameScence::clear_has_bhuansanzhang() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void tagCDGameScence::clear_bhuansanzhang() {
  bhuansanzhang_ = 0;
  clear_has_bhuansanzhang();
}
inline ::google::protobuf::int32 tagCDGameScence::bhuansanzhang() const {
  return bhuansanzhang_;
}
inline void tagCDGameScence::set_bhuansanzhang(::google::protobuf::int32 value) {
  set_has_bhuansanzhang();
  bhuansanzhang_ = value;
}

// optional int32 bAllDianGangHua = 14;
inline bool tagCDGameScence::has_balldianganghua() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void tagCDGameScence::set_has_balldianganghua() {
  _has_bits_[0] |= 0x00002000u;
}
inline void tagCDGameScence::clear_has_balldianganghua() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void tagCDGameScence::clear_balldianganghua() {
  balldianganghua_ = 0;
  clear_has_balldianganghua();
}
inline ::google::protobuf::int32 tagCDGameScence::balldianganghua() const {
  return balldianganghua_;
}
inline void tagCDGameScence::set_balldianganghua(::google::protobuf::int32 value) {
  set_has_balldianganghua();
  balldianganghua_ = value;
}

// optional int32 bZiMoJiaFanJiaDi = 15;
inline bool tagCDGameScence::has_bzimojiafanjiadi() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void tagCDGameScence::set_has_bzimojiafanjiadi() {
  _has_bits_[0] |= 0x00004000u;
}
inline void tagCDGameScence::clear_has_bzimojiafanjiadi() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void tagCDGameScence::clear_bzimojiafanjiadi() {
  bzimojiafanjiadi_ = 0;
  clear_has_bzimojiafanjiadi();
}
inline ::google::protobuf::int32 tagCDGameScence::bzimojiafanjiadi() const {
  return bzimojiafanjiadi_;
}
inline void tagCDGameScence::set_bzimojiafanjiadi(::google::protobuf::int32 value) {
  set_has_bzimojiafanjiadi();
  bzimojiafanjiadi_ = value;
}

// optional int32 bHuFanFengDing = 16;
inline bool tagCDGameScence::has_bhufanfengding() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void tagCDGameScence::set_has_bhufanfengding() {
  _has_bits_[0] |= 0x00008000u;
}
inline void tagCDGameScence::clear_has_bhufanfengding() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void tagCDGameScence::clear_bhufanfengding() {
  bhufanfengding_ = 0;
  clear_has_bhufanfengding();
}
inline ::google::protobuf::int32 tagCDGameScence::bhufanfengding() const {
  return bhufanfengding_;
}
inline void tagCDGameScence::set_bhufanfengding(::google::protobuf::int32 value) {
  set_has_bhufanfengding();
  bhufanfengding_ = value;
}

// optional int32 bYaoJiuJiangDui = 17;
inline bool tagCDGameScence::has_byaojiujiangdui() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void tagCDGameScence::set_has_byaojiujiangdui() {
  _has_bits_[0] |= 0x00010000u;
}
inline void tagCDGameScence::clear_has_byaojiujiangdui() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void tagCDGameScence::clear_byaojiujiangdui() {
  byaojiujiangdui_ = 0;
  clear_has_byaojiujiangdui();
}
inline ::google::protobuf::int32 tagCDGameScence::byaojiujiangdui() const {
  return byaojiujiangdui_;
}
inline void tagCDGameScence::set_byaojiujiangdui(::google::protobuf::int32 value) {
  set_has_byaojiujiangdui();
  byaojiujiangdui_ = value;
}

// optional int32 bMenQingZhongZhang = 18;
inline bool tagCDGameScence::has_bmenqingzhongzhang() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void tagCDGameScence::set_has_bmenqingzhongzhang() {
  _has_bits_[0] |= 0x00020000u;
}
inline void tagCDGameScence::clear_has_bmenqingzhongzhang() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void tagCDGameScence::clear_bmenqingzhongzhang() {
  bmenqingzhongzhang_ = 0;
  clear_has_bmenqingzhongzhang();
}
inline ::google::protobuf::int32 tagCDGameScence::bmenqingzhongzhang() const {
  return bmenqingzhongzhang_;
}
inline void tagCDGameScence::set_bmenqingzhongzhang(::google::protobuf::int32 value) {
  set_has_bmenqingzhongzhang();
  bmenqingzhongzhang_ = value;
}

// optional int32 bTianDiHu = 19;
inline bool tagCDGameScence::has_btiandihu() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void tagCDGameScence::set_has_btiandihu() {
  _has_bits_[0] |= 0x00040000u;
}
inline void tagCDGameScence::clear_has_btiandihu() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void tagCDGameScence::clear_btiandihu() {
  btiandihu_ = 0;
  clear_has_btiandihu();
}
inline ::google::protobuf::int32 tagCDGameScence::btiandihu() const {
  return btiandihu_;
}
inline void tagCDGameScence::set_btiandihu(::google::protobuf::int32 value) {
  set_has_btiandihu();
  btiandihu_ = value;
}

// optional int32 bDianPaoKePingHu = 20;
inline bool tagCDGameScence::has_bdianpaokepinghu() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void tagCDGameScence::set_has_bdianpaokepinghu() {
  _has_bits_[0] |= 0x00080000u;
}
inline void tagCDGameScence::clear_has_bdianpaokepinghu() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void tagCDGameScence::clear_bdianpaokepinghu() {
  bdianpaokepinghu_ = 0;
  clear_has_bdianpaokepinghu();
}
inline ::google::protobuf::int32 tagCDGameScence::bdianpaokepinghu() const {
  return bdianpaokepinghu_;
}
inline void tagCDGameScence::set_bdianpaokepinghu(::google::protobuf::int32 value) {
  set_has_bdianpaokepinghu();
  bdianpaokepinghu_ = value;
}

// optional int32 bYiTiaoLong = 21;
inline bool tagCDGameScence::has_byitiaolong() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void tagCDGameScence::set_has_byitiaolong() {
  _has_bits_[0] |= 0x00100000u;
}
inline void tagCDGameScence::clear_has_byitiaolong() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void tagCDGameScence::clear_byitiaolong() {
  byitiaolong_ = 0;
  clear_has_byitiaolong();
}
inline ::google::protobuf::int32 tagCDGameScence::byitiaolong() const {
  return byitiaolong_;
}
inline void tagCDGameScence::set_byitiaolong(::google::protobuf::int32 value) {
  set_has_byitiaolong();
  byitiaolong_ = value;
}

// optional int32 bGuaCa = 22;
inline bool tagCDGameScence::has_bguaca() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void tagCDGameScence::set_has_bguaca() {
  _has_bits_[0] |= 0x00200000u;
}
inline void tagCDGameScence::clear_has_bguaca() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void tagCDGameScence::clear_bguaca() {
  bguaca_ = 0;
  clear_has_bguaca();
}
inline ::google::protobuf::int32 tagCDGameScence::bguaca() const {
  return bguaca_;
}
inline void tagCDGameScence::set_bguaca(::google::protobuf::int32 value) {
  set_has_bguaca();
  bguaca_ = value;
}

// optional int32 nPlayNum = 23;
inline bool tagCDGameScence::has_nplaynum() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void tagCDGameScence::set_has_nplaynum() {
  _has_bits_[0] |= 0x00400000u;
}
inline void tagCDGameScence::clear_has_nplaynum() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void tagCDGameScence::clear_nplaynum() {
  nplaynum_ = 0;
  clear_has_nplaynum();
}
inline ::google::protobuf::int32 tagCDGameScence::nplaynum() const {
  return nplaynum_;
}
inline void tagCDGameScence::set_nplaynum(::google::protobuf::int32 value) {
  set_has_nplaynum();
  nplaynum_ = value;
}

// optional int32 nPaiZhangShu = 24;
inline bool tagCDGameScence::has_npaizhangshu() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void tagCDGameScence::set_has_npaizhangshu() {
  _has_bits_[0] |= 0x00800000u;
}
inline void tagCDGameScence::clear_has_npaizhangshu() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void tagCDGameScence::clear_npaizhangshu() {
  npaizhangshu_ = 0;
  clear_has_npaizhangshu();
}
inline ::google::protobuf::int32 tagCDGameScence::npaizhangshu() const {
  return npaizhangshu_;
}
inline void tagCDGameScence::set_npaizhangshu(::google::protobuf::int32 value) {
  set_has_npaizhangshu();
  npaizhangshu_ = value;
}

// optional int32 nTianHuFan = 25;
inline bool tagCDGameScence::has_ntianhufan() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void tagCDGameScence::set_has_ntianhufan() {
  _has_bits_[0] |= 0x01000000u;
}
inline void tagCDGameScence::clear_has_ntianhufan() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void tagCDGameScence::clear_ntianhufan() {
  ntianhufan_ = 0;
  clear_has_ntianhufan();
}
inline ::google::protobuf::int32 tagCDGameScence::ntianhufan() const {
  return ntianhufan_;
}
inline void tagCDGameScence::set_ntianhufan(::google::protobuf::int32 value) {
  set_has_ntianhufan();
  ntianhufan_ = value;
}

// optional int32 nDiHuFan = 26;
inline bool tagCDGameScence::has_ndihufan() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void tagCDGameScence::set_has_ndihufan() {
  _has_bits_[0] |= 0x02000000u;
}
inline void tagCDGameScence::clear_has_ndihufan() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void tagCDGameScence::clear_ndihufan() {
  ndihufan_ = 0;
  clear_has_ndihufan();
}
inline ::google::protobuf::int32 tagCDGameScence::ndihufan() const {
  return ndihufan_;
}
inline void tagCDGameScence::set_ndihufan(::google::protobuf::int32 value) {
  set_has_ndihufan();
  ndihufan_ = value;
}

// optional int32 nDuiDuiHuFan = 27;
inline bool tagCDGameScence::has_nduiduihufan() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void tagCDGameScence::set_has_nduiduihufan() {
  _has_bits_[0] |= 0x04000000u;
}
inline void tagCDGameScence::clear_has_nduiduihufan() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void tagCDGameScence::clear_nduiduihufan() {
  nduiduihufan_ = 0;
  clear_has_nduiduihufan();
}
inline ::google::protobuf::int32 tagCDGameScence::nduiduihufan() const {
  return nduiduihufan_;
}
inline void tagCDGameScence::set_nduiduihufan(::google::protobuf::int32 value) {
  set_has_nduiduihufan();
  nduiduihufan_ = value;
}

// repeated int32 nHuType = 28;
inline int tagCDGameScence::nhutype_size() const {
  return nhutype_.size();
}
inline void tagCDGameScence::clear_nhutype() {
  nhutype_.Clear();
}
inline ::google::protobuf::int32 tagCDGameScence::nhutype(int index) const {
  return nhutype_.Get(index);
}
inline void tagCDGameScence::set_nhutype(int index, ::google::protobuf::int32 value) {
  nhutype_.Set(index, value);
}
inline void tagCDGameScence::add_nhutype(::google::protobuf::int32 value) {
  nhutype_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagCDGameScence::nhutype() const {
  return nhutype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagCDGameScence::mutable_nhutype() {
  return &nhutype_;
}

// repeated int32 nZiMoHuCard = 29;
inline int tagCDGameScence::nzimohucard_size() const {
  return nzimohucard_.size();
}
inline void tagCDGameScence::clear_nzimohucard() {
  nzimohucard_.Clear();
}
inline ::google::protobuf::int32 tagCDGameScence::nzimohucard(int index) const {
  return nzimohucard_.Get(index);
}
inline void tagCDGameScence::set_nzimohucard(int index, ::google::protobuf::int32 value) {
  nzimohucard_.Set(index, value);
}
inline void tagCDGameScence::add_nzimohucard(::google::protobuf::int32 value) {
  nzimohucard_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagCDGameScence::nzimohucard() const {
  return nzimohucard_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagCDGameScence::mutable_nzimohucard() {
  return &nzimohucard_;
}

// optional int32 bJiaXinWu = 30;
inline bool tagCDGameScence::has_bjiaxinwu() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void tagCDGameScence::set_has_bjiaxinwu() {
  _has_bits_[0] |= 0x20000000u;
}
inline void tagCDGameScence::clear_has_bjiaxinwu() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void tagCDGameScence::clear_bjiaxinwu() {
  bjiaxinwu_ = 0;
  clear_has_bjiaxinwu();
}
inline ::google::protobuf::int32 tagCDGameScence::bjiaxinwu() const {
  return bjiaxinwu_;
}
inline void tagCDGameScence::set_bjiaxinwu(::google::protobuf::int32 value) {
  set_has_bjiaxinwu();
  bjiaxinwu_ = value;
}

// repeated .proto.game.chengdumj.DianPaoInfo stdianpaoinfo = 31;
inline int tagCDGameScence::stdianpaoinfo_size() const {
  return stdianpaoinfo_.size();
}
inline void tagCDGameScence::clear_stdianpaoinfo() {
  stdianpaoinfo_.Clear();
}
inline const ::proto::game::chengdumj::DianPaoInfo& tagCDGameScence::stdianpaoinfo(int index) const {
  return stdianpaoinfo_.Get(index);
}
inline ::proto::game::chengdumj::DianPaoInfo* tagCDGameScence::mutable_stdianpaoinfo(int index) {
  return stdianpaoinfo_.Mutable(index);
}
inline ::proto::game::chengdumj::DianPaoInfo* tagCDGameScence::add_stdianpaoinfo() {
  return stdianpaoinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::DianPaoInfo >&
tagCDGameScence::stdianpaoinfo() const {
  return stdianpaoinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::DianPaoInfo >*
tagCDGameScence::mutable_stdianpaoinfo() {
  return &stdianpaoinfo_;
}

// repeated int32 nDianPaoHuCard = 32;
inline int tagCDGameScence::ndianpaohucard_size() const {
  return ndianpaohucard_.size();
}
inline void tagCDGameScence::clear_ndianpaohucard() {
  ndianpaohucard_.Clear();
}
inline ::google::protobuf::int32 tagCDGameScence::ndianpaohucard(int index) const {
  return ndianpaohucard_.Get(index);
}
inline void tagCDGameScence::set_ndianpaohucard(int index, ::google::protobuf::int32 value) {
  ndianpaohucard_.Set(index, value);
}
inline void tagCDGameScence::add_ndianpaohucard(::google::protobuf::int32 value) {
  ndianpaohucard_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagCDGameScence::ndianpaohucard() const {
  return ndianpaohucard_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagCDGameScence::mutable_ndianpaohucard() {
  return &ndianpaohucard_;
}

// optional int32 bHaiDiHuaJiaFan = 33;
inline bool tagCDGameScence::has_bhaidihuajiafan() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void tagCDGameScence::set_has_bhaidihuajiafan() {
  _has_bits_[1] |= 0x00000001u;
}
inline void tagCDGameScence::clear_has_bhaidihuajiafan() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void tagCDGameScence::clear_bhaidihuajiafan() {
  bhaidihuajiafan_ = 0;
  clear_has_bhaidihuajiafan();
}
inline ::google::protobuf::int32 tagCDGameScence::bhaidihuajiafan() const {
  return bhaidihuajiafan_;
}
inline void tagCDGameScence::set_bhaidihuajiafan(::google::protobuf::int32 value) {
  set_has_bhaidihuajiafan();
  bhaidihuajiafan_ = value;
}

// optional int32 bHaiDiPaoJiaFan = 34;
inline bool tagCDGameScence::has_bhaidipaojiafan() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void tagCDGameScence::set_has_bhaidipaojiafan() {
  _has_bits_[1] |= 0x00000002u;
}
inline void tagCDGameScence::clear_has_bhaidipaojiafan() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void tagCDGameScence::clear_bhaidipaojiafan() {
  bhaidipaojiafan_ = 0;
  clear_has_bhaidipaojiafan();
}
inline ::google::protobuf::int32 tagCDGameScence::bhaidipaojiafan() const {
  return bhaidipaojiafan_;
}
inline void tagCDGameScence::set_bhaidipaojiafan(::google::protobuf::int32 value) {
  set_has_bhaidipaojiafan();
  bhaidipaojiafan_ = value;
}

// optional int32 bDiFen = 35;
inline bool tagCDGameScence::has_bdifen() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void tagCDGameScence::set_has_bdifen() {
  _has_bits_[1] |= 0x00000004u;
}
inline void tagCDGameScence::clear_has_bdifen() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void tagCDGameScence::clear_bdifen() {
  bdifen_ = 0;
  clear_has_bdifen();
}
inline ::google::protobuf::int32 tagCDGameScence::bdifen() const {
  return bdifen_;
}
inline void tagCDGameScence::set_bdifen(::google::protobuf::int32 value) {
  set_has_bdifen();
  bdifen_ = value;
}

// -------------------------------------------------------------------

// DianPaoInfo

// optional int32 seatid = 1;
inline bool DianPaoInfo::has_seatid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DianPaoInfo::set_has_seatid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DianPaoInfo::clear_has_seatid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DianPaoInfo::clear_seatid() {
  seatid_ = 0;
  clear_has_seatid();
}
inline ::google::protobuf::int32 DianPaoInfo::seatid() const {
  return seatid_;
}
inline void DianPaoInfo::set_seatid(::google::protobuf::int32 value) {
  set_has_seatid();
  seatid_ = value;
}

// optional int32 nDianPaoCardShunXu = 2;
inline bool DianPaoInfo::has_ndianpaocardshunxu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DianPaoInfo::set_has_ndianpaocardshunxu() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DianPaoInfo::clear_has_ndianpaocardshunxu() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DianPaoInfo::clear_ndianpaocardshunxu() {
  ndianpaocardshunxu_ = 0;
  clear_has_ndianpaocardshunxu();
}
inline ::google::protobuf::int32 DianPaoInfo::ndianpaocardshunxu() const {
  return ndianpaocardshunxu_;
}
inline void DianPaoInfo::set_ndianpaocardshunxu(::google::protobuf::int32 value) {
  set_has_ndianpaocardshunxu();
  ndianpaocardshunxu_ = value;
}

// optional int32 nDianPaoCard = 3;
inline bool DianPaoInfo::has_ndianpaocard() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DianPaoInfo::set_has_ndianpaocard() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DianPaoInfo::clear_has_ndianpaocard() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DianPaoInfo::clear_ndianpaocard() {
  ndianpaocard_ = 0;
  clear_has_ndianpaocard();
}
inline ::google::protobuf::int32 DianPaoInfo::ndianpaocard() const {
  return ndianpaocard_;
}
inline void DianPaoInfo::set_ndianpaocard(::google::protobuf::int32 value) {
  set_has_ndianpaocard();
  ndianpaocard_ = value;
}

// -------------------------------------------------------------------

// AckCDGameEnd

// optional .proto.game.AckGameEnd_Chengdu gameend = 1;
inline bool AckCDGameEnd::has_gameend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckCDGameEnd::set_has_gameend() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckCDGameEnd::clear_has_gameend() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckCDGameEnd::clear_gameend() {
  if (gameend_ != NULL) gameend_->::proto::game::AckGameEnd_Chengdu::Clear();
  clear_has_gameend();
}
inline const ::proto::game::AckGameEnd_Chengdu& AckCDGameEnd::gameend() const {
  return gameend_ != NULL ? *gameend_ : *default_instance_->gameend_;
}
inline ::proto::game::AckGameEnd_Chengdu* AckCDGameEnd::mutable_gameend() {
  set_has_gameend();
  if (gameend_ == NULL) gameend_ = new ::proto::game::AckGameEnd_Chengdu;
  return gameend_;
}
inline ::proto::game::AckGameEnd_Chengdu* AckCDGameEnd::release_gameend() {
  clear_has_gameend();
  ::proto::game::AckGameEnd_Chengdu* temp = gameend_;
  gameend_ = NULL;
  return temp;
}
inline void AckCDGameEnd::set_allocated_gameend(::proto::game::AckGameEnd_Chengdu* gameend) {
  delete gameend_;
  gameend_ = gameend;
  if (gameend) {
    set_has_gameend();
  } else {
    clear_has_gameend();
  }
}

// repeated int32 husocore = 2;
inline int AckCDGameEnd::husocore_size() const {
  return husocore_.size();
}
inline void AckCDGameEnd::clear_husocore() {
  husocore_.Clear();
}
inline ::google::protobuf::int32 AckCDGameEnd::husocore(int index) const {
  return husocore_.Get(index);
}
inline void AckCDGameEnd::set_husocore(int index, ::google::protobuf::int32 value) {
  husocore_.Set(index, value);
}
inline void AckCDGameEnd::add_husocore(::google::protobuf::int32 value) {
  husocore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckCDGameEnd::husocore() const {
  return husocore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckCDGameEnd::mutable_husocore() {
  return &husocore_;
}

// repeated .proto.game.chengdumj.HuPaiInfo hupaiinfo = 3;
inline int AckCDGameEnd::hupaiinfo_size() const {
  return hupaiinfo_.size();
}
inline void AckCDGameEnd::clear_hupaiinfo() {
  hupaiinfo_.Clear();
}
inline const ::proto::game::chengdumj::HuPaiInfo& AckCDGameEnd::hupaiinfo(int index) const {
  return hupaiinfo_.Get(index);
}
inline ::proto::game::chengdumj::HuPaiInfo* AckCDGameEnd::mutable_hupaiinfo(int index) {
  return hupaiinfo_.Mutable(index);
}
inline ::proto::game::chengdumj::HuPaiInfo* AckCDGameEnd::add_hupaiinfo() {
  return hupaiinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::HuPaiInfo >&
AckCDGameEnd::hupaiinfo() const {
  return hupaiinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::HuPaiInfo >*
AckCDGameEnd::mutable_hupaiinfo() {
  return &hupaiinfo_;
}

// repeated .proto.game.chengdumj.DaJiaoInfo dajiaoinfo = 4;
inline int AckCDGameEnd::dajiaoinfo_size() const {
  return dajiaoinfo_.size();
}
inline void AckCDGameEnd::clear_dajiaoinfo() {
  dajiaoinfo_.Clear();
}
inline const ::proto::game::chengdumj::DaJiaoInfo& AckCDGameEnd::dajiaoinfo(int index) const {
  return dajiaoinfo_.Get(index);
}
inline ::proto::game::chengdumj::DaJiaoInfo* AckCDGameEnd::mutable_dajiaoinfo(int index) {
  return dajiaoinfo_.Mutable(index);
}
inline ::proto::game::chengdumj::DaJiaoInfo* AckCDGameEnd::add_dajiaoinfo() {
  return dajiaoinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::DaJiaoInfo >&
AckCDGameEnd::dajiaoinfo() const {
  return dajiaoinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::DaJiaoInfo >*
AckCDGameEnd::mutable_dajiaoinfo() {
  return &dajiaoinfo_;
}

// -------------------------------------------------------------------

// DaJiaoInfo

// optional int32 seatid = 1;
inline bool DaJiaoInfo::has_seatid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DaJiaoInfo::set_has_seatid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DaJiaoInfo::clear_has_seatid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DaJiaoInfo::clear_seatid() {
  seatid_ = 0;
  clear_has_seatid();
}
inline ::google::protobuf::int32 DaJiaoInfo::seatid() const {
  return seatid_;
}
inline void DaJiaoInfo::set_seatid(::google::protobuf::int32 value) {
  set_has_seatid();
  seatid_ = value;
}

// optional int32 dajiaotype = 2;
inline bool DaJiaoInfo::has_dajiaotype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DaJiaoInfo::set_has_dajiaotype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DaJiaoInfo::clear_has_dajiaotype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DaJiaoInfo::clear_dajiaotype() {
  dajiaotype_ = 0;
  clear_has_dajiaotype();
}
inline ::google::protobuf::int32 DaJiaoInfo::dajiaotype() const {
  return dajiaotype_;
}
inline void DaJiaoInfo::set_dajiaotype(::google::protobuf::int32 value) {
  set_has_dajiaotype();
  dajiaotype_ = value;
}

// optional int32 dajiaofenshu = 3;
inline bool DaJiaoInfo::has_dajiaofenshu() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DaJiaoInfo::set_has_dajiaofenshu() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DaJiaoInfo::clear_has_dajiaofenshu() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DaJiaoInfo::clear_dajiaofenshu() {
  dajiaofenshu_ = 0;
  clear_has_dajiaofenshu();
}
inline ::google::protobuf::int32 DaJiaoInfo::dajiaofenshu() const {
  return dajiaofenshu_;
}
inline void DaJiaoInfo::set_dajiaofenshu(::google::protobuf::int32 value) {
  set_has_dajiaofenshu();
  dajiaofenshu_ = value;
}

// optional int32 dajiaopai = 4;
inline bool DaJiaoInfo::has_dajiaopai() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DaJiaoInfo::set_has_dajiaopai() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DaJiaoInfo::clear_has_dajiaopai() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DaJiaoInfo::clear_dajiaopai() {
  dajiaopai_ = 0;
  clear_has_dajiaopai();
}
inline ::google::protobuf::int32 DaJiaoInfo::dajiaopai() const {
  return dajiaopai_;
}
inline void DaJiaoInfo::set_dajiaopai(::google::protobuf::int32 value) {
  set_has_dajiaopai();
  dajiaopai_ = value;
}

// optional int32 dajiaofan = 5;
inline bool DaJiaoInfo::has_dajiaofan() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DaJiaoInfo::set_has_dajiaofan() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DaJiaoInfo::clear_has_dajiaofan() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DaJiaoInfo::clear_dajiaofan() {
  dajiaofan_ = 0;
  clear_has_dajiaofan();
}
inline ::google::protobuf::int32 DaJiaoInfo::dajiaofan() const {
  return dajiaofan_;
}
inline void DaJiaoInfo::set_dajiaofan(::google::protobuf::int32 value) {
  set_has_dajiaofan();
  dajiaofan_ = value;
}

// repeated int32 dajiaoleixing = 6;
inline int DaJiaoInfo::dajiaoleixing_size() const {
  return dajiaoleixing_.size();
}
inline void DaJiaoInfo::clear_dajiaoleixing() {
  dajiaoleixing_.Clear();
}
inline ::google::protobuf::int32 DaJiaoInfo::dajiaoleixing(int index) const {
  return dajiaoleixing_.Get(index);
}
inline void DaJiaoInfo::set_dajiaoleixing(int index, ::google::protobuf::int32 value) {
  dajiaoleixing_.Set(index, value);
}
inline void DaJiaoInfo::add_dajiaoleixing(::google::protobuf::int32 value) {
  dajiaoleixing_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DaJiaoInfo::dajiaoleixing() const {
  return dajiaoleixing_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DaJiaoInfo::mutable_dajiaoleixing() {
  return &dajiaoleixing_;
}

// repeated int32 dajiaoleixingfan = 7;
inline int DaJiaoInfo::dajiaoleixingfan_size() const {
  return dajiaoleixingfan_.size();
}
inline void DaJiaoInfo::clear_dajiaoleixingfan() {
  dajiaoleixingfan_.Clear();
}
inline ::google::protobuf::int32 DaJiaoInfo::dajiaoleixingfan(int index) const {
  return dajiaoleixingfan_.Get(index);
}
inline void DaJiaoInfo::set_dajiaoleixingfan(int index, ::google::protobuf::int32 value) {
  dajiaoleixingfan_.Set(index, value);
}
inline void DaJiaoInfo::add_dajiaoleixingfan(::google::protobuf::int32 value) {
  dajiaoleixingfan_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DaJiaoInfo::dajiaoleixingfan() const {
  return dajiaoleixingfan_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DaJiaoInfo::mutable_dajiaoleixingfan() {
  return &dajiaoleixingfan_;
}

// -------------------------------------------------------------------

// GangFenInfo

// optional int32 seatid = 1;
inline bool GangFenInfo::has_seatid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GangFenInfo::set_has_seatid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GangFenInfo::clear_has_seatid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GangFenInfo::clear_seatid() {
  seatid_ = 0;
  clear_has_seatid();
}
inline ::google::protobuf::int32 GangFenInfo::seatid() const {
  return seatid_;
}
inline void GangFenInfo::set_seatid(::google::protobuf::int32 value) {
  set_has_seatid();
  seatid_ = value;
}

// optional int32 gangfen = 2;
inline bool GangFenInfo::has_gangfen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GangFenInfo::set_has_gangfen() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GangFenInfo::clear_has_gangfen() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GangFenInfo::clear_gangfen() {
  gangfen_ = 0;
  clear_has_gangfen();
}
inline ::google::protobuf::int32 GangFenInfo::gangfen() const {
  return gangfen_;
}
inline void GangFenInfo::set_gangfen(::google::protobuf::int32 value) {
  set_has_gangfen();
  gangfen_ = value;
}

// -------------------------------------------------------------------

// GangInfo

// optional int32 gangpai = 1;
inline bool GangInfo::has_gangpai() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GangInfo::set_has_gangpai() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GangInfo::clear_has_gangpai() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GangInfo::clear_gangpai() {
  gangpai_ = 0;
  clear_has_gangpai();
}
inline ::google::protobuf::int32 GangInfo::gangpai() const {
  return gangpai_;
}
inline void GangInfo::set_gangpai(::google::protobuf::int32 value) {
  set_has_gangpai();
  gangpai_ = value;
}

// optional int32 gangtype = 2;
inline bool GangInfo::has_gangtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GangInfo::set_has_gangtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GangInfo::clear_has_gangtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GangInfo::clear_gangtype() {
  gangtype_ = 0;
  clear_has_gangtype();
}
inline ::google::protobuf::int32 GangInfo::gangtype() const {
  return gangtype_;
}
inline void GangInfo::set_gangtype(::google::protobuf::int32 value) {
  set_has_gangtype();
  gangtype_ = value;
}

// optional int32 gangyingfen = 3;
inline bool GangInfo::has_gangyingfen() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GangInfo::set_has_gangyingfen() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GangInfo::clear_has_gangyingfen() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GangInfo::clear_gangyingfen() {
  gangyingfen_ = 0;
  clear_has_gangyingfen();
}
inline ::google::protobuf::int32 GangInfo::gangyingfen() const {
  return gangyingfen_;
}
inline void GangInfo::set_gangyingfen(::google::protobuf::int32 value) {
  set_has_gangyingfen();
  gangyingfen_ = value;
}

// optional int32 diangangid = 4;
inline bool GangInfo::has_diangangid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GangInfo::set_has_diangangid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GangInfo::clear_has_diangangid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GangInfo::clear_diangangid() {
  diangangid_ = 0;
  clear_has_diangangid();
}
inline ::google::protobuf::int32 GangInfo::diangangid() const {
  return diangangid_;
}
inline void GangInfo::set_diangangid(::google::protobuf::int32 value) {
  set_has_diangangid();
  diangangid_ = value;
}

// repeated .proto.game.chengdumj.GangFenInfo gangfeninfo = 5;
inline int GangInfo::gangfeninfo_size() const {
  return gangfeninfo_.size();
}
inline void GangInfo::clear_gangfeninfo() {
  gangfeninfo_.Clear();
}
inline const ::proto::game::chengdumj::GangFenInfo& GangInfo::gangfeninfo(int index) const {
  return gangfeninfo_.Get(index);
}
inline ::proto::game::chengdumj::GangFenInfo* GangInfo::mutable_gangfeninfo(int index) {
  return gangfeninfo_.Mutable(index);
}
inline ::proto::game::chengdumj::GangFenInfo* GangInfo::add_gangfeninfo() {
  return gangfeninfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::GangFenInfo >&
GangInfo::gangfeninfo() const {
  return gangfeninfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::GangFenInfo >*
GangInfo::mutable_gangfeninfo() {
  return &gangfeninfo_;
}

// -------------------------------------------------------------------

// HuPaiInfo

// optional int32 seatid = 1;
inline bool HuPaiInfo::has_seatid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HuPaiInfo::set_has_seatid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HuPaiInfo::clear_has_seatid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HuPaiInfo::clear_seatid() {
  seatid_ = 0;
  clear_has_seatid();
}
inline ::google::protobuf::int32 HuPaiInfo::seatid() const {
  return seatid_;
}
inline void HuPaiInfo::set_seatid(::google::protobuf::int32 value) {
  set_has_seatid();
  seatid_ = value;
}

// optional int32 totalhufan = 2;
inline bool HuPaiInfo::has_totalhufan() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HuPaiInfo::set_has_totalhufan() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HuPaiInfo::clear_has_totalhufan() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HuPaiInfo::clear_totalhufan() {
  totalhufan_ = 0;
  clear_has_totalhufan();
}
inline ::google::protobuf::int32 HuPaiInfo::totalhufan() const {
  return totalhufan_;
}
inline void HuPaiInfo::set_totalhufan(::google::protobuf::int32 value) {
  set_has_totalhufan();
  totalhufan_ = value;
}

// optional int32 hutype = 3;
inline bool HuPaiInfo::has_hutype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HuPaiInfo::set_has_hutype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HuPaiInfo::clear_has_hutype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HuPaiInfo::clear_hutype() {
  hutype_ = 0;
  clear_has_hutype();
}
inline ::google::protobuf::int32 HuPaiInfo::hutype() const {
  return hutype_;
}
inline void HuPaiInfo::set_hutype(::google::protobuf::int32 value) {
  set_has_hutype();
  hutype_ = value;
}

// optional int32 hushunxu = 4;
inline bool HuPaiInfo::has_hushunxu() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HuPaiInfo::set_has_hushunxu() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HuPaiInfo::clear_has_hushunxu() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HuPaiInfo::clear_hushunxu() {
  hushunxu_ = 0;
  clear_has_hushunxu();
}
inline ::google::protobuf::int32 HuPaiInfo::hushunxu() const {
  return hushunxu_;
}
inline void HuPaiInfo::set_hushunxu(::google::protobuf::int32 value) {
  set_has_hushunxu();
  hushunxu_ = value;
}

// optional int32 hucard = 5;
inline bool HuPaiInfo::has_hucard() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HuPaiInfo::set_has_hucard() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HuPaiInfo::clear_has_hucard() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HuPaiInfo::clear_hucard() {
  hucard_ = 0;
  clear_has_hucard();
}
inline ::google::protobuf::int32 HuPaiInfo::hucard() const {
  return hucard_;
}
inline void HuPaiInfo::set_hucard(::google::protobuf::int32 value) {
  set_has_hucard();
  hucard_ = value;
}

// optional int32 dianpaoseatid = 6;
inline bool HuPaiInfo::has_dianpaoseatid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HuPaiInfo::set_has_dianpaoseatid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HuPaiInfo::clear_has_dianpaoseatid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HuPaiInfo::clear_dianpaoseatid() {
  dianpaoseatid_ = 0;
  clear_has_dianpaoseatid();
}
inline ::google::protobuf::int32 HuPaiInfo::dianpaoseatid() const {
  return dianpaoseatid_;
}
inline void HuPaiInfo::set_dianpaoseatid(::google::protobuf::int32 value) {
  set_has_dianpaoseatid();
  dianpaoseatid_ = value;
}

// optional int32 totalgangfen = 7;
inline bool HuPaiInfo::has_totalgangfen() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HuPaiInfo::set_has_totalgangfen() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HuPaiInfo::clear_has_totalgangfen() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HuPaiInfo::clear_totalgangfen() {
  totalgangfen_ = 0;
  clear_has_totalgangfen();
}
inline ::google::protobuf::int32 HuPaiInfo::totalgangfen() const {
  return totalgangfen_;
}
inline void HuPaiInfo::set_totalgangfen(::google::protobuf::int32 value) {
  set_has_totalgangfen();
  totalgangfen_ = value;
}

// optional int32 totalzhuanyufen = 8;
inline bool HuPaiInfo::has_totalzhuanyufen() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HuPaiInfo::set_has_totalzhuanyufen() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HuPaiInfo::clear_has_totalzhuanyufen() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HuPaiInfo::clear_totalzhuanyufen() {
  totalzhuanyufen_ = 0;
  clear_has_totalzhuanyufen();
}
inline ::google::protobuf::int32 HuPaiInfo::totalzhuanyufen() const {
  return totalzhuanyufen_;
}
inline void HuPaiInfo::set_totalzhuanyufen(::google::protobuf::int32 value) {
  set_has_totalzhuanyufen();
  totalzhuanyufen_ = value;
}

// repeated int32 hufanleixing = 9;
inline int HuPaiInfo::hufanleixing_size() const {
  return hufanleixing_.size();
}
inline void HuPaiInfo::clear_hufanleixing() {
  hufanleixing_.Clear();
}
inline ::google::protobuf::int32 HuPaiInfo::hufanleixing(int index) const {
  return hufanleixing_.Get(index);
}
inline void HuPaiInfo::set_hufanleixing(int index, ::google::protobuf::int32 value) {
  hufanleixing_.Set(index, value);
}
inline void HuPaiInfo::add_hufanleixing(::google::protobuf::int32 value) {
  hufanleixing_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HuPaiInfo::hufanleixing() const {
  return hufanleixing_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HuPaiInfo::mutable_hufanleixing() {
  return &hufanleixing_;
}

// repeated int32 hufan = 10;
inline int HuPaiInfo::hufan_size() const {
  return hufan_.size();
}
inline void HuPaiInfo::clear_hufan() {
  hufan_.Clear();
}
inline ::google::protobuf::int32 HuPaiInfo::hufan(int index) const {
  return hufan_.Get(index);
}
inline void HuPaiInfo::set_hufan(int index, ::google::protobuf::int32 value) {
  hufan_.Set(index, value);
}
inline void HuPaiInfo::add_hufan(::google::protobuf::int32 value) {
  hufan_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HuPaiInfo::hufan() const {
  return hufan_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HuPaiInfo::mutable_hufan() {
  return &hufan_;
}

// repeated .proto.game.chengdumj.GangInfo ganginfo = 11;
inline int HuPaiInfo::ganginfo_size() const {
  return ganginfo_.size();
}
inline void HuPaiInfo::clear_ganginfo() {
  ganginfo_.Clear();
}
inline const ::proto::game::chengdumj::GangInfo& HuPaiInfo::ganginfo(int index) const {
  return ganginfo_.Get(index);
}
inline ::proto::game::chengdumj::GangInfo* HuPaiInfo::mutable_ganginfo(int index) {
  return ganginfo_.Mutable(index);
}
inline ::proto::game::chengdumj::GangInfo* HuPaiInfo::add_ganginfo() {
  return ganginfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::GangInfo >&
HuPaiInfo::ganginfo() const {
  return ganginfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::chengdumj::GangInfo >*
HuPaiInfo::mutable_ganginfo() {
  return &ganginfo_;
}

// repeated int32 beihuseatid = 12;
inline int HuPaiInfo::beihuseatid_size() const {
  return beihuseatid_.size();
}
inline void HuPaiInfo::clear_beihuseatid() {
  beihuseatid_.Clear();
}
inline ::google::protobuf::int32 HuPaiInfo::beihuseatid(int index) const {
  return beihuseatid_.Get(index);
}
inline void HuPaiInfo::set_beihuseatid(int index, ::google::protobuf::int32 value) {
  beihuseatid_.Set(index, value);
}
inline void HuPaiInfo::add_beihuseatid(::google::protobuf::int32 value) {
  beihuseatid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HuPaiInfo::beihuseatid() const {
  return beihuseatid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HuPaiInfo::mutable_beihuseatid() {
  return &beihuseatid_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace chengdumj
}  // namespace game
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_chengdugameproto_2eproto__INCLUDED
