// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jiujiang.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "jiujiang.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace game {
namespace jiujiangmj {

namespace {

const ::google::protobuf::Descriptor* JiuJiangJiaMai_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JiuJiangJiaMai_reflection_ = NULL;
const ::google::protobuf::Descriptor* JiuJiangJiaMaiAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JiuJiangJiaMaiAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* JiuJiangGameSence_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JiuJiangGameSence_reflection_ = NULL;
const ::google::protobuf::Descriptor* JiuJiangGameEnd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JiuJiangGameEnd_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_jiujiang_2eproto() {
  protobuf_AddDesc_jiujiang_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "jiujiang.proto");
  GOOGLE_CHECK(file != NULL);
  JiuJiangJiaMai_descriptor_ = file->message_type(0);
  static const int JiuJiangJiaMai_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuJiangJiaMai, jia_),
  };
  JiuJiangJiaMai_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JiuJiangJiaMai_descriptor_,
      JiuJiangJiaMai::default_instance_,
      JiuJiangJiaMai_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuJiangJiaMai, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuJiangJiaMai, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JiuJiangJiaMai));
  JiuJiangJiaMaiAck_descriptor_ = file->message_type(1);
  static const int JiuJiangJiaMaiAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuJiangJiaMaiAck, jia_),
  };
  JiuJiangJiaMaiAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JiuJiangJiaMaiAck_descriptor_,
      JiuJiangJiaMaiAck::default_instance_,
      JiuJiangJiaMaiAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuJiangJiaMaiAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuJiangJiaMaiAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JiuJiangJiaMaiAck));
  JiuJiangGameSence_descriptor_ = file->message_type(2);
  static const int JiuJiangGameSence_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuJiangGameSence, jia_),
  };
  JiuJiangGameSence_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JiuJiangGameSence_descriptor_,
      JiuJiangGameSence::default_instance_,
      JiuJiangGameSence_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuJiangGameSence, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuJiangGameSence, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JiuJiangGameSence));
  JiuJiangGameEnd_descriptor_ = file->message_type(3);
  static const int JiuJiangGameEnd_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuJiangGameEnd, facai_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuJiangGameEnd, hongzhong_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuJiangGameEnd, gang_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuJiangGameEnd, jiamai_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuJiangGameEnd, baoting_score_),
  };
  JiuJiangGameEnd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JiuJiangGameEnd_descriptor_,
      JiuJiangGameEnd::default_instance_,
      JiuJiangGameEnd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuJiangGameEnd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuJiangGameEnd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JiuJiangGameEnd));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_jiujiang_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JiuJiangJiaMai_descriptor_, &JiuJiangJiaMai::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JiuJiangJiaMaiAck_descriptor_, &JiuJiangJiaMaiAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JiuJiangGameSence_descriptor_, &JiuJiangGameSence::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JiuJiangGameEnd_descriptor_, &JiuJiangGameEnd::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_jiujiang_2eproto() {
  delete JiuJiangJiaMai::default_instance_;
  delete JiuJiangJiaMai_reflection_;
  delete JiuJiangJiaMaiAck::default_instance_;
  delete JiuJiangJiaMaiAck_reflection_;
  delete JiuJiangGameSence::default_instance_;
  delete JiuJiangGameSence_reflection_;
  delete JiuJiangGameEnd::default_instance_;
  delete JiuJiangGameEnd_reflection_;
}

void protobuf_AddDesc_jiujiang_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016jiujiang.proto\022\025proto.game.jiujiangmj\""
    "\035\n\016JiuJiangJiaMai\022\013\n\003jia\030\001 \003(\005\" \n\021JiuJia"
    "ngJiaMaiAck\022\013\n\003jia\030\001 \002(\005\" \n\021JiuJiangGame"
    "Sence\022\013\n\003jia\030\001 \003(\005\"\200\001\n\017JiuJiangGameEnd\022\023"
    "\n\013facai_score\030\001 \003(\005\022\027\n\017hongzhong_score\030\002"
    " \003(\005\022\022\n\ngang_score\030\003 \003(\005\022\024\n\014jiamai_score"
    "\030\004 \003(\005\022\025\n\rbaoting_score\030\005 \003(\005", 269);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "jiujiang.proto", &protobuf_RegisterTypes);
  JiuJiangJiaMai::default_instance_ = new JiuJiangJiaMai();
  JiuJiangJiaMaiAck::default_instance_ = new JiuJiangJiaMaiAck();
  JiuJiangGameSence::default_instance_ = new JiuJiangGameSence();
  JiuJiangGameEnd::default_instance_ = new JiuJiangGameEnd();
  JiuJiangJiaMai::default_instance_->InitAsDefaultInstance();
  JiuJiangJiaMaiAck::default_instance_->InitAsDefaultInstance();
  JiuJiangGameSence::default_instance_->InitAsDefaultInstance();
  JiuJiangGameEnd::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_jiujiang_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_jiujiang_2eproto {
  StaticDescriptorInitializer_jiujiang_2eproto() {
    protobuf_AddDesc_jiujiang_2eproto();
  }
} static_descriptor_initializer_jiujiang_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int JiuJiangJiaMai::kJiaFieldNumber;
#endif  // !_MSC_VER

JiuJiangJiaMai::JiuJiangJiaMai()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void JiuJiangJiaMai::InitAsDefaultInstance() {
}

JiuJiangJiaMai::JiuJiangJiaMai(const JiuJiangJiaMai& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void JiuJiangJiaMai::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JiuJiangJiaMai::~JiuJiangJiaMai() {
  SharedDtor();
}

void JiuJiangJiaMai::SharedDtor() {
  if (this != default_instance_) {
  }
}

void JiuJiangJiaMai::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JiuJiangJiaMai::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JiuJiangJiaMai_descriptor_;
}

const JiuJiangJiaMai& JiuJiangJiaMai::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_jiujiang_2eproto();
  return *default_instance_;
}

JiuJiangJiaMai* JiuJiangJiaMai::default_instance_ = NULL;

JiuJiangJiaMai* JiuJiangJiaMai::New() const {
  return new JiuJiangJiaMai;
}

void JiuJiangJiaMai::Clear() {
  jia_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JiuJiangJiaMai::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 jia = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jia:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_jia())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_jia())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_jia;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void JiuJiangJiaMai::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 jia = 1;
  for (int i = 0; i < this->jia_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->jia(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* JiuJiangJiaMai::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 jia = 1;
  for (int i = 0; i < this->jia_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->jia(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int JiuJiangJiaMai::ByteSize() const {
  int total_size = 0;

  // repeated int32 jia = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->jia_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->jia(i));
    }
    total_size += 1 * this->jia_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JiuJiangJiaMai::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JiuJiangJiaMai* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JiuJiangJiaMai*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JiuJiangJiaMai::MergeFrom(const JiuJiangJiaMai& from) {
  GOOGLE_CHECK_NE(&from, this);
  jia_.MergeFrom(from.jia_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JiuJiangJiaMai::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JiuJiangJiaMai::CopyFrom(const JiuJiangJiaMai& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JiuJiangJiaMai::IsInitialized() const {

  return true;
}

void JiuJiangJiaMai::Swap(JiuJiangJiaMai* other) {
  if (other != this) {
    jia_.Swap(&other->jia_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JiuJiangJiaMai::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JiuJiangJiaMai_descriptor_;
  metadata.reflection = JiuJiangJiaMai_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int JiuJiangJiaMaiAck::kJiaFieldNumber;
#endif  // !_MSC_VER

JiuJiangJiaMaiAck::JiuJiangJiaMaiAck()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void JiuJiangJiaMaiAck::InitAsDefaultInstance() {
}

JiuJiangJiaMaiAck::JiuJiangJiaMaiAck(const JiuJiangJiaMaiAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void JiuJiangJiaMaiAck::SharedCtor() {
  _cached_size_ = 0;
  jia_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JiuJiangJiaMaiAck::~JiuJiangJiaMaiAck() {
  SharedDtor();
}

void JiuJiangJiaMaiAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void JiuJiangJiaMaiAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JiuJiangJiaMaiAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JiuJiangJiaMaiAck_descriptor_;
}

const JiuJiangJiaMaiAck& JiuJiangJiaMaiAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_jiujiang_2eproto();
  return *default_instance_;
}

JiuJiangJiaMaiAck* JiuJiangJiaMaiAck::default_instance_ = NULL;

JiuJiangJiaMaiAck* JiuJiangJiaMaiAck::New() const {
  return new JiuJiangJiaMaiAck;
}

void JiuJiangJiaMaiAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    jia_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JiuJiangJiaMaiAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 jia = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jia_)));
          set_has_jia();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void JiuJiangJiaMaiAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 jia = 1;
  if (has_jia()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->jia(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* JiuJiangJiaMaiAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 jia = 1;
  if (has_jia()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->jia(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int JiuJiangJiaMaiAck::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 jia = 1;
    if (has_jia()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jia());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JiuJiangJiaMaiAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JiuJiangJiaMaiAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JiuJiangJiaMaiAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JiuJiangJiaMaiAck::MergeFrom(const JiuJiangJiaMaiAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_jia()) {
      set_jia(from.jia());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JiuJiangJiaMaiAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JiuJiangJiaMaiAck::CopyFrom(const JiuJiangJiaMaiAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JiuJiangJiaMaiAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void JiuJiangJiaMaiAck::Swap(JiuJiangJiaMaiAck* other) {
  if (other != this) {
    std::swap(jia_, other->jia_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JiuJiangJiaMaiAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JiuJiangJiaMaiAck_descriptor_;
  metadata.reflection = JiuJiangJiaMaiAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int JiuJiangGameSence::kJiaFieldNumber;
#endif  // !_MSC_VER

JiuJiangGameSence::JiuJiangGameSence()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void JiuJiangGameSence::InitAsDefaultInstance() {
}

JiuJiangGameSence::JiuJiangGameSence(const JiuJiangGameSence& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void JiuJiangGameSence::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JiuJiangGameSence::~JiuJiangGameSence() {
  SharedDtor();
}

void JiuJiangGameSence::SharedDtor() {
  if (this != default_instance_) {
  }
}

void JiuJiangGameSence::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JiuJiangGameSence::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JiuJiangGameSence_descriptor_;
}

const JiuJiangGameSence& JiuJiangGameSence::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_jiujiang_2eproto();
  return *default_instance_;
}

JiuJiangGameSence* JiuJiangGameSence::default_instance_ = NULL;

JiuJiangGameSence* JiuJiangGameSence::New() const {
  return new JiuJiangGameSence;
}

void JiuJiangGameSence::Clear() {
  jia_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JiuJiangGameSence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 jia = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jia:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_jia())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_jia())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_jia;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void JiuJiangGameSence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 jia = 1;
  for (int i = 0; i < this->jia_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->jia(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* JiuJiangGameSence::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 jia = 1;
  for (int i = 0; i < this->jia_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->jia(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int JiuJiangGameSence::ByteSize() const {
  int total_size = 0;

  // repeated int32 jia = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->jia_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->jia(i));
    }
    total_size += 1 * this->jia_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JiuJiangGameSence::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JiuJiangGameSence* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JiuJiangGameSence*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JiuJiangGameSence::MergeFrom(const JiuJiangGameSence& from) {
  GOOGLE_CHECK_NE(&from, this);
  jia_.MergeFrom(from.jia_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JiuJiangGameSence::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JiuJiangGameSence::CopyFrom(const JiuJiangGameSence& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JiuJiangGameSence::IsInitialized() const {

  return true;
}

void JiuJiangGameSence::Swap(JiuJiangGameSence* other) {
  if (other != this) {
    jia_.Swap(&other->jia_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JiuJiangGameSence::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JiuJiangGameSence_descriptor_;
  metadata.reflection = JiuJiangGameSence_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int JiuJiangGameEnd::kFacaiScoreFieldNumber;
const int JiuJiangGameEnd::kHongzhongScoreFieldNumber;
const int JiuJiangGameEnd::kGangScoreFieldNumber;
const int JiuJiangGameEnd::kJiamaiScoreFieldNumber;
const int JiuJiangGameEnd::kBaotingScoreFieldNumber;
#endif  // !_MSC_VER

JiuJiangGameEnd::JiuJiangGameEnd()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void JiuJiangGameEnd::InitAsDefaultInstance() {
}

JiuJiangGameEnd::JiuJiangGameEnd(const JiuJiangGameEnd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void JiuJiangGameEnd::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JiuJiangGameEnd::~JiuJiangGameEnd() {
  SharedDtor();
}

void JiuJiangGameEnd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void JiuJiangGameEnd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JiuJiangGameEnd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JiuJiangGameEnd_descriptor_;
}

const JiuJiangGameEnd& JiuJiangGameEnd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_jiujiang_2eproto();
  return *default_instance_;
}

JiuJiangGameEnd* JiuJiangGameEnd::default_instance_ = NULL;

JiuJiangGameEnd* JiuJiangGameEnd::New() const {
  return new JiuJiangGameEnd;
}

void JiuJiangGameEnd::Clear() {
  facai_score_.Clear();
  hongzhong_score_.Clear();
  gang_score_.Clear();
  jiamai_score_.Clear();
  baoting_score_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JiuJiangGameEnd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 facai_score = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_facai_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_facai_score())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_facai_score())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_facai_score;
        if (input->ExpectTag(16)) goto parse_hongzhong_score;
        break;
      }

      // repeated int32 hongzhong_score = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hongzhong_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_hongzhong_score())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_hongzhong_score())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_hongzhong_score;
        if (input->ExpectTag(24)) goto parse_gang_score;
        break;
      }

      // repeated int32 gang_score = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gang_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_gang_score())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_gang_score())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_gang_score;
        if (input->ExpectTag(32)) goto parse_jiamai_score;
        break;
      }

      // repeated int32 jiamai_score = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jiamai_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_jiamai_score())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_jiamai_score())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_jiamai_score;
        if (input->ExpectTag(40)) goto parse_baoting_score;
        break;
      }

      // repeated int32 baoting_score = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_baoting_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_baoting_score())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_baoting_score())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_baoting_score;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void JiuJiangGameEnd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 facai_score = 1;
  for (int i = 0; i < this->facai_score_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->facai_score(i), output);
  }

  // repeated int32 hongzhong_score = 2;
  for (int i = 0; i < this->hongzhong_score_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->hongzhong_score(i), output);
  }

  // repeated int32 gang_score = 3;
  for (int i = 0; i < this->gang_score_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->gang_score(i), output);
  }

  // repeated int32 jiamai_score = 4;
  for (int i = 0; i < this->jiamai_score_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->jiamai_score(i), output);
  }

  // repeated int32 baoting_score = 5;
  for (int i = 0; i < this->baoting_score_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->baoting_score(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* JiuJiangGameEnd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 facai_score = 1;
  for (int i = 0; i < this->facai_score_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->facai_score(i), target);
  }

  // repeated int32 hongzhong_score = 2;
  for (int i = 0; i < this->hongzhong_score_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->hongzhong_score(i), target);
  }

  // repeated int32 gang_score = 3;
  for (int i = 0; i < this->gang_score_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->gang_score(i), target);
  }

  // repeated int32 jiamai_score = 4;
  for (int i = 0; i < this->jiamai_score_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->jiamai_score(i), target);
  }

  // repeated int32 baoting_score = 5;
  for (int i = 0; i < this->baoting_score_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->baoting_score(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int JiuJiangGameEnd::ByteSize() const {
  int total_size = 0;

  // repeated int32 facai_score = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->facai_score_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->facai_score(i));
    }
    total_size += 1 * this->facai_score_size() + data_size;
  }

  // repeated int32 hongzhong_score = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->hongzhong_score_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->hongzhong_score(i));
    }
    total_size += 1 * this->hongzhong_score_size() + data_size;
  }

  // repeated int32 gang_score = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->gang_score_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->gang_score(i));
    }
    total_size += 1 * this->gang_score_size() + data_size;
  }

  // repeated int32 jiamai_score = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->jiamai_score_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->jiamai_score(i));
    }
    total_size += 1 * this->jiamai_score_size() + data_size;
  }

  // repeated int32 baoting_score = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->baoting_score_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->baoting_score(i));
    }
    total_size += 1 * this->baoting_score_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JiuJiangGameEnd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JiuJiangGameEnd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JiuJiangGameEnd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JiuJiangGameEnd::MergeFrom(const JiuJiangGameEnd& from) {
  GOOGLE_CHECK_NE(&from, this);
  facai_score_.MergeFrom(from.facai_score_);
  hongzhong_score_.MergeFrom(from.hongzhong_score_);
  gang_score_.MergeFrom(from.gang_score_);
  jiamai_score_.MergeFrom(from.jiamai_score_);
  baoting_score_.MergeFrom(from.baoting_score_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JiuJiangGameEnd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JiuJiangGameEnd::CopyFrom(const JiuJiangGameEnd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JiuJiangGameEnd::IsInitialized() const {

  return true;
}

void JiuJiangGameEnd::Swap(JiuJiangGameEnd* other) {
  if (other != this) {
    facai_score_.Swap(&other->facai_score_);
    hongzhong_score_.Swap(&other->hongzhong_score_);
    gang_score_.Swap(&other->gang_score_);
    jiamai_score_.Swap(&other->jiamai_score_);
    baoting_score_.Swap(&other->baoting_score_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JiuJiangGameEnd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JiuJiangGameEnd_descriptor_;
  metadata.reflection = JiuJiangGameEnd_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace jiujiangmj
}  // namespace game
}  // namespace proto

// @@protoc_insertion_point(global_scope)
