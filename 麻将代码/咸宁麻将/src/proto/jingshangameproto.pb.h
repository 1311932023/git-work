// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jingshangameproto.proto

#ifndef PROTOBUF_jingshangameproto_2eproto__INCLUDED
#define PROTOBUF_jingshangameproto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace game {
namespace jingshanmj {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_jingshangameproto_2eproto();
void protobuf_AssignDesc_jingshangameproto_2eproto();
void protobuf_ShutdownFile_jingshangameproto_2eproto();

class AckLaiziCard;
class AckStartPiao;
class ReqChoosePiao;
class AckBroadPiao;
class tagJSGameScence;
class ReordInfo;
class GameEndRecord;

// ===================================================================

class AckLaiziCard : public ::google::protobuf::Message {
 public:
  AckLaiziCard();
  virtual ~AckLaiziCard();

  AckLaiziCard(const AckLaiziCard& from);

  inline AckLaiziCard& operator=(const AckLaiziCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckLaiziCard& default_instance();

  void Swap(AckLaiziCard* other);

  // implements Message ----------------------------------------------

  AckLaiziCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckLaiziCard& from);
  void MergeFrom(const AckLaiziCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 card = 1;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 1;
  inline ::google::protobuf::int32 card() const;
  inline void set_card(::google::protobuf::int32 value);

  // optional int32 laizicard = 2;
  inline bool has_laizicard() const;
  inline void clear_laizicard();
  static const int kLaizicardFieldNumber = 2;
  inline ::google::protobuf::int32 laizicard() const;
  inline void set_laizicard(::google::protobuf::int32 value);

  // optional int32 laizipicard = 3;
  inline bool has_laizipicard() const;
  inline void clear_laizipicard();
  static const int kLaizipicardFieldNumber = 3;
  inline ::google::protobuf::int32 laizipicard() const;
  inline void set_laizipicard(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.jingshanmj.AckLaiziCard)
 private:
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_laizicard();
  inline void clear_has_laizicard();
  inline void set_has_laizipicard();
  inline void clear_has_laizipicard();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 card_;
  ::google::protobuf::int32 laizicard_;
  ::google::protobuf::int32 laizipicard_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jingshangameproto_2eproto();
  friend void protobuf_AssignDesc_jingshangameproto_2eproto();
  friend void protobuf_ShutdownFile_jingshangameproto_2eproto();

  void InitAsDefaultInstance();
  static AckLaiziCard* default_instance_;
};
// -------------------------------------------------------------------

class AckStartPiao : public ::google::protobuf::Message {
 public:
  AckStartPiao();
  virtual ~AckStartPiao();

  AckStartPiao(const AckStartPiao& from);

  inline AckStartPiao& operator=(const AckStartPiao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckStartPiao& default_instance();

  void Swap(AckStartPiao* other);

  // implements Message ----------------------------------------------

  AckStartPiao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckStartPiao& from);
  void MergeFrom(const AckStartPiao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 piaoNum = 1;
  inline int piaonum_size() const;
  inline void clear_piaonum();
  static const int kPiaoNumFieldNumber = 1;
  inline ::google::protobuf::int32 piaonum(int index) const;
  inline void set_piaonum(int index, ::google::protobuf::int32 value);
  inline void add_piaonum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      piaonum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_piaonum();

  // @@protoc_insertion_point(class_scope:proto.game.jingshanmj.AckStartPiao)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > piaonum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jingshangameproto_2eproto();
  friend void protobuf_AssignDesc_jingshangameproto_2eproto();
  friend void protobuf_ShutdownFile_jingshangameproto_2eproto();

  void InitAsDefaultInstance();
  static AckStartPiao* default_instance_;
};
// -------------------------------------------------------------------

class ReqChoosePiao : public ::google::protobuf::Message {
 public:
  ReqChoosePiao();
  virtual ~ReqChoosePiao();

  ReqChoosePiao(const ReqChoosePiao& from);

  inline ReqChoosePiao& operator=(const ReqChoosePiao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqChoosePiao& default_instance();

  void Swap(ReqChoosePiao* other);

  // implements Message ----------------------------------------------

  ReqChoosePiao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqChoosePiao& from);
  void MergeFrom(const ReqChoosePiao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 PiaoNum = 1;
  inline bool has_piaonum() const;
  inline void clear_piaonum();
  static const int kPiaoNumFieldNumber = 1;
  inline ::google::protobuf::int32 piaonum() const;
  inline void set_piaonum(::google::protobuf::int32 value);

  // optional bool IsGouxuan = 2;
  inline bool has_isgouxuan() const;
  inline void clear_isgouxuan();
  static const int kIsGouxuanFieldNumber = 2;
  inline bool isgouxuan() const;
  inline void set_isgouxuan(bool value);

  // @@protoc_insertion_point(class_scope:proto.game.jingshanmj.ReqChoosePiao)
 private:
  inline void set_has_piaonum();
  inline void clear_has_piaonum();
  inline void set_has_isgouxuan();
  inline void clear_has_isgouxuan();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 piaonum_;
  bool isgouxuan_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jingshangameproto_2eproto();
  friend void protobuf_AssignDesc_jingshangameproto_2eproto();
  friend void protobuf_ShutdownFile_jingshangameproto_2eproto();

  void InitAsDefaultInstance();
  static ReqChoosePiao* default_instance_;
};
// -------------------------------------------------------------------

class AckBroadPiao : public ::google::protobuf::Message {
 public:
  AckBroadPiao();
  virtual ~AckBroadPiao();

  AckBroadPiao(const AckBroadPiao& from);

  inline AckBroadPiao& operator=(const AckBroadPiao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckBroadPiao& default_instance();

  void Swap(AckBroadPiao* other);

  // implements Message ----------------------------------------------

  AckBroadPiao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckBroadPiao& from);
  void MergeFrom(const AckBroadPiao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chairid = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairidFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // optional int32 UserPiao = 2;
  inline bool has_userpiao() const;
  inline void clear_userpiao();
  static const int kUserPiaoFieldNumber = 2;
  inline ::google::protobuf::int32 userpiao() const;
  inline void set_userpiao(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.jingshanmj.AckBroadPiao)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_userpiao();
  inline void clear_has_userpiao();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chairid_;
  ::google::protobuf::int32 userpiao_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jingshangameproto_2eproto();
  friend void protobuf_AssignDesc_jingshangameproto_2eproto();
  friend void protobuf_ShutdownFile_jingshangameproto_2eproto();

  void InitAsDefaultInstance();
  static AckBroadPiao* default_instance_;
};
// -------------------------------------------------------------------

class tagJSGameScence : public ::google::protobuf::Message {
 public:
  tagJSGameScence();
  virtual ~tagJSGameScence();

  tagJSGameScence(const tagJSGameScence& from);

  inline tagJSGameScence& operator=(const tagJSGameScence& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagJSGameScence& default_instance();

  void Swap(tagJSGameScence* other);

  // implements Message ----------------------------------------------

  tagJSGameScence* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagJSGameScence& from);
  void MergeFrom(const tagJSGameScence& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool piaoing = 1;
  inline bool has_piaoing() const;
  inline void clear_piaoing();
  static const int kPiaoingFieldNumber = 1;
  inline bool piaoing() const;
  inline void set_piaoing(bool value);

  // optional int32 piao_type = 2;
  inline bool has_piao_type() const;
  inline void clear_piao_type();
  static const int kPiaoTypeFieldNumber = 2;
  inline ::google::protobuf::int32 piao_type() const;
  inline void set_piao_type(::google::protobuf::int32 value);

  // optional int32 remain_time = 3;
  inline bool has_remain_time() const;
  inline void clear_remain_time();
  static const int kRemainTimeFieldNumber = 3;
  inline ::google::protobuf::int32 remain_time() const;
  inline void set_remain_time(::google::protobuf::int32 value);

  // repeated int32 piao_num = 4;
  inline int piao_num_size() const;
  inline void clear_piao_num();
  static const int kPiaoNumFieldNumber = 4;
  inline ::google::protobuf::int32 piao_num(int index) const;
  inline void set_piao_num(int index, ::google::protobuf::int32 value);
  inline void add_piao_num(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      piao_num() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_piao_num();

  // optional int32 laizicard = 5;
  inline bool has_laizicard() const;
  inline void clear_laizicard();
  static const int kLaizicardFieldNumber = 5;
  inline ::google::protobuf::int32 laizicard() const;
  inline void set_laizicard(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.jingshanmj.tagJSGameScence)
 private:
  inline void set_has_piaoing();
  inline void clear_has_piaoing();
  inline void set_has_piao_type();
  inline void clear_has_piao_type();
  inline void set_has_remain_time();
  inline void clear_has_remain_time();
  inline void set_has_laizicard();
  inline void clear_has_laizicard();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool piaoing_;
  ::google::protobuf::int32 piao_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > piao_num_;
  ::google::protobuf::int32 remain_time_;
  ::google::protobuf::int32 laizicard_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_jingshangameproto_2eproto();
  friend void protobuf_AssignDesc_jingshangameproto_2eproto();
  friend void protobuf_ShutdownFile_jingshangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagJSGameScence* default_instance_;
};
// -------------------------------------------------------------------

class ReordInfo : public ::google::protobuf::Message {
 public:
  ReordInfo();
  virtual ~ReordInfo();

  ReordInfo(const ReordInfo& from);

  inline ReordInfo& operator=(const ReordInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReordInfo& default_instance();

  void Swap(ReordInfo* other);

  // implements Message ----------------------------------------------

  ReordInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReordInfo& from);
  void MergeFrom(const ReordInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 banker_num = 1;
  inline bool has_banker_num() const;
  inline void clear_banker_num();
  static const int kBankerNumFieldNumber = 1;
  inline ::google::protobuf::int32 banker_num() const;
  inline void set_banker_num(::google::protobuf::int32 value);

  // optional int32 hu_num = 2;
  inline bool has_hu_num() const;
  inline void clear_hu_num();
  static const int kHuNumFieldNumber = 2;
  inline ::google::protobuf::int32 hu_num() const;
  inline void set_hu_num(::google::protobuf::int32 value);

  // optional int32 piaolaizi_num = 3;
  inline bool has_piaolaizi_num() const;
  inline void clear_piaolaizi_num();
  static const int kPiaolaiziNumFieldNumber = 3;
  inline ::google::protobuf::int32 piaolaizi_num() const;
  inline void set_piaolaizi_num(::google::protobuf::int32 value);

  // optional int32 outtime_num = 4;
  inline bool has_outtime_num() const;
  inline void clear_outtime_num();
  static const int kOuttimeNumFieldNumber = 4;
  inline ::google::protobuf::int32 outtime_num() const;
  inline void set_outtime_num(::google::protobuf::int32 value);

  // optional int32 totalscore = 5;
  inline bool has_totalscore() const;
  inline void clear_totalscore();
  static const int kTotalscoreFieldNumber = 5;
  inline ::google::protobuf::int32 totalscore() const;
  inline void set_totalscore(::google::protobuf::int32 value);

  // optional int32 WinCounts = 6;
  inline bool has_wincounts() const;
  inline void clear_wincounts();
  static const int kWinCountsFieldNumber = 6;
  inline ::google::protobuf::int32 wincounts() const;
  inline void set_wincounts(::google::protobuf::int32 value);

  // optional int32 GangTimes = 7;
  inline bool has_gangtimes() const;
  inline void clear_gangtimes();
  static const int kGangTimesFieldNumber = 7;
  inline ::google::protobuf::int32 gangtimes() const;
  inline void set_gangtimes(::google::protobuf::int32 value);

  // optional int32 DianGangTimes = 8;
  inline bool has_diangangtimes() const;
  inline void clear_diangangtimes();
  static const int kDianGangTimesFieldNumber = 8;
  inline ::google::protobuf::int32 diangangtimes() const;
  inline void set_diangangtimes(::google::protobuf::int32 value);

  // optional int32 Ex1 = 9;
  inline bool has_ex1() const;
  inline void clear_ex1();
  static const int kEx1FieldNumber = 9;
  inline ::google::protobuf::int32 ex1() const;
  inline void set_ex1(::google::protobuf::int32 value);

  // optional int32 Ex2 = 10;
  inline bool has_ex2() const;
  inline void clear_ex2();
  static const int kEx2FieldNumber = 10;
  inline ::google::protobuf::int32 ex2() const;
  inline void set_ex2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.jingshanmj.ReordInfo)
 private:
  inline void set_has_banker_num();
  inline void clear_has_banker_num();
  inline void set_has_hu_num();
  inline void clear_has_hu_num();
  inline void set_has_piaolaizi_num();
  inline void clear_has_piaolaizi_num();
  inline void set_has_outtime_num();
  inline void clear_has_outtime_num();
  inline void set_has_totalscore();
  inline void clear_has_totalscore();
  inline void set_has_wincounts();
  inline void clear_has_wincounts();
  inline void set_has_gangtimes();
  inline void clear_has_gangtimes();
  inline void set_has_diangangtimes();
  inline void clear_has_diangangtimes();
  inline void set_has_ex1();
  inline void clear_has_ex1();
  inline void set_has_ex2();
  inline void clear_has_ex2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 banker_num_;
  ::google::protobuf::int32 hu_num_;
  ::google::protobuf::int32 piaolaizi_num_;
  ::google::protobuf::int32 outtime_num_;
  ::google::protobuf::int32 totalscore_;
  ::google::protobuf::int32 wincounts_;
  ::google::protobuf::int32 gangtimes_;
  ::google::protobuf::int32 diangangtimes_;
  ::google::protobuf::int32 ex1_;
  ::google::protobuf::int32 ex2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_jingshangameproto_2eproto();
  friend void protobuf_AssignDesc_jingshangameproto_2eproto();
  friend void protobuf_ShutdownFile_jingshangameproto_2eproto();

  void InitAsDefaultInstance();
  static ReordInfo* default_instance_;
};
// -------------------------------------------------------------------

class GameEndRecord : public ::google::protobuf::Message {
 public:
  GameEndRecord();
  virtual ~GameEndRecord();

  GameEndRecord(const GameEndRecord& from);

  inline GameEndRecord& operator=(const GameEndRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameEndRecord& default_instance();

  void Swap(GameEndRecord* other);

  // implements Message ----------------------------------------------

  GameEndRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameEndRecord& from);
  void MergeFrom(const GameEndRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.game.jingshanmj.ReordInfo UserRecoreInfo = 1;
  inline int userrecoreinfo_size() const;
  inline void clear_userrecoreinfo();
  static const int kUserRecoreInfoFieldNumber = 1;
  inline const ::proto::game::jingshanmj::ReordInfo& userrecoreinfo(int index) const;
  inline ::proto::game::jingshanmj::ReordInfo* mutable_userrecoreinfo(int index);
  inline ::proto::game::jingshanmj::ReordInfo* add_userrecoreinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::jingshanmj::ReordInfo >&
      userrecoreinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::jingshanmj::ReordInfo >*
      mutable_userrecoreinfo();

  // repeated int32 MostDianPaoUser = 2;
  inline int mostdianpaouser_size() const;
  inline void clear_mostdianpaouser();
  static const int kMostDianPaoUserFieldNumber = 2;
  inline ::google::protobuf::int32 mostdianpaouser(int index) const;
  inline void set_mostdianpaouser(int index, ::google::protobuf::int32 value);
  inline void add_mostdianpaouser(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mostdianpaouser() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mostdianpaouser();

  // repeated int32 MostWinScoreUser = 3;
  inline int mostwinscoreuser_size() const;
  inline void clear_mostwinscoreuser();
  static const int kMostWinScoreUserFieldNumber = 3;
  inline ::google::protobuf::int32 mostwinscoreuser(int index) const;
  inline void set_mostwinscoreuser(int index, ::google::protobuf::int32 value);
  inline void add_mostwinscoreuser(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mostwinscoreuser() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mostwinscoreuser();

  // optional int32 DataTime = 4;
  inline bool has_datatime() const;
  inline void clear_datatime();
  static const int kDataTimeFieldNumber = 4;
  inline ::google::protobuf::int32 datatime() const;
  inline void set_datatime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.jingshanmj.GameEndRecord)
 private:
  inline void set_has_datatime();
  inline void clear_has_datatime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::game::jingshanmj::ReordInfo > userrecoreinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mostdianpaouser_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mostwinscoreuser_;
  ::google::protobuf::int32 datatime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_jingshangameproto_2eproto();
  friend void protobuf_AssignDesc_jingshangameproto_2eproto();
  friend void protobuf_ShutdownFile_jingshangameproto_2eproto();

  void InitAsDefaultInstance();
  static GameEndRecord* default_instance_;
};
// ===================================================================


// ===================================================================

// AckLaiziCard

// optional int32 card = 1;
inline bool AckLaiziCard::has_card() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckLaiziCard::set_has_card() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckLaiziCard::clear_has_card() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckLaiziCard::clear_card() {
  card_ = 0;
  clear_has_card();
}
inline ::google::protobuf::int32 AckLaiziCard::card() const {
  return card_;
}
inline void AckLaiziCard::set_card(::google::protobuf::int32 value) {
  set_has_card();
  card_ = value;
}

// optional int32 laizicard = 2;
inline bool AckLaiziCard::has_laizicard() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckLaiziCard::set_has_laizicard() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckLaiziCard::clear_has_laizicard() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckLaiziCard::clear_laizicard() {
  laizicard_ = 0;
  clear_has_laizicard();
}
inline ::google::protobuf::int32 AckLaiziCard::laizicard() const {
  return laizicard_;
}
inline void AckLaiziCard::set_laizicard(::google::protobuf::int32 value) {
  set_has_laizicard();
  laizicard_ = value;
}

// optional int32 laizipicard = 3;
inline bool AckLaiziCard::has_laizipicard() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AckLaiziCard::set_has_laizipicard() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AckLaiziCard::clear_has_laizipicard() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AckLaiziCard::clear_laizipicard() {
  laizipicard_ = 0;
  clear_has_laizipicard();
}
inline ::google::protobuf::int32 AckLaiziCard::laizipicard() const {
  return laizipicard_;
}
inline void AckLaiziCard::set_laizipicard(::google::protobuf::int32 value) {
  set_has_laizipicard();
  laizipicard_ = value;
}

// -------------------------------------------------------------------

// AckStartPiao

// repeated int32 piaoNum = 1;
inline int AckStartPiao::piaonum_size() const {
  return piaonum_.size();
}
inline void AckStartPiao::clear_piaonum() {
  piaonum_.Clear();
}
inline ::google::protobuf::int32 AckStartPiao::piaonum(int index) const {
  return piaonum_.Get(index);
}
inline void AckStartPiao::set_piaonum(int index, ::google::protobuf::int32 value) {
  piaonum_.Set(index, value);
}
inline void AckStartPiao::add_piaonum(::google::protobuf::int32 value) {
  piaonum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckStartPiao::piaonum() const {
  return piaonum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckStartPiao::mutable_piaonum() {
  return &piaonum_;
}

// -------------------------------------------------------------------

// ReqChoosePiao

// optional int32 PiaoNum = 1;
inline bool ReqChoosePiao::has_piaonum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqChoosePiao::set_has_piaonum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqChoosePiao::clear_has_piaonum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqChoosePiao::clear_piaonum() {
  piaonum_ = 0;
  clear_has_piaonum();
}
inline ::google::protobuf::int32 ReqChoosePiao::piaonum() const {
  return piaonum_;
}
inline void ReqChoosePiao::set_piaonum(::google::protobuf::int32 value) {
  set_has_piaonum();
  piaonum_ = value;
}

// optional bool IsGouxuan = 2;
inline bool ReqChoosePiao::has_isgouxuan() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqChoosePiao::set_has_isgouxuan() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqChoosePiao::clear_has_isgouxuan() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqChoosePiao::clear_isgouxuan() {
  isgouxuan_ = false;
  clear_has_isgouxuan();
}
inline bool ReqChoosePiao::isgouxuan() const {
  return isgouxuan_;
}
inline void ReqChoosePiao::set_isgouxuan(bool value) {
  set_has_isgouxuan();
  isgouxuan_ = value;
}

// -------------------------------------------------------------------

// AckBroadPiao

// optional int32 chairid = 1;
inline bool AckBroadPiao::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckBroadPiao::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckBroadPiao::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckBroadPiao::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 AckBroadPiao::chairid() const {
  return chairid_;
}
inline void AckBroadPiao::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// optional int32 UserPiao = 2;
inline bool AckBroadPiao::has_userpiao() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckBroadPiao::set_has_userpiao() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckBroadPiao::clear_has_userpiao() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckBroadPiao::clear_userpiao() {
  userpiao_ = 0;
  clear_has_userpiao();
}
inline ::google::protobuf::int32 AckBroadPiao::userpiao() const {
  return userpiao_;
}
inline void AckBroadPiao::set_userpiao(::google::protobuf::int32 value) {
  set_has_userpiao();
  userpiao_ = value;
}

// -------------------------------------------------------------------

// tagJSGameScence

// optional bool piaoing = 1;
inline bool tagJSGameScence::has_piaoing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagJSGameScence::set_has_piaoing() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagJSGameScence::clear_has_piaoing() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagJSGameScence::clear_piaoing() {
  piaoing_ = false;
  clear_has_piaoing();
}
inline bool tagJSGameScence::piaoing() const {
  return piaoing_;
}
inline void tagJSGameScence::set_piaoing(bool value) {
  set_has_piaoing();
  piaoing_ = value;
}

// optional int32 piao_type = 2;
inline bool tagJSGameScence::has_piao_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagJSGameScence::set_has_piao_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagJSGameScence::clear_has_piao_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagJSGameScence::clear_piao_type() {
  piao_type_ = 0;
  clear_has_piao_type();
}
inline ::google::protobuf::int32 tagJSGameScence::piao_type() const {
  return piao_type_;
}
inline void tagJSGameScence::set_piao_type(::google::protobuf::int32 value) {
  set_has_piao_type();
  piao_type_ = value;
}

// optional int32 remain_time = 3;
inline bool tagJSGameScence::has_remain_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tagJSGameScence::set_has_remain_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tagJSGameScence::clear_has_remain_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tagJSGameScence::clear_remain_time() {
  remain_time_ = 0;
  clear_has_remain_time();
}
inline ::google::protobuf::int32 tagJSGameScence::remain_time() const {
  return remain_time_;
}
inline void tagJSGameScence::set_remain_time(::google::protobuf::int32 value) {
  set_has_remain_time();
  remain_time_ = value;
}

// repeated int32 piao_num = 4;
inline int tagJSGameScence::piao_num_size() const {
  return piao_num_.size();
}
inline void tagJSGameScence::clear_piao_num() {
  piao_num_.Clear();
}
inline ::google::protobuf::int32 tagJSGameScence::piao_num(int index) const {
  return piao_num_.Get(index);
}
inline void tagJSGameScence::set_piao_num(int index, ::google::protobuf::int32 value) {
  piao_num_.Set(index, value);
}
inline void tagJSGameScence::add_piao_num(::google::protobuf::int32 value) {
  piao_num_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagJSGameScence::piao_num() const {
  return piao_num_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagJSGameScence::mutable_piao_num() {
  return &piao_num_;
}

// optional int32 laizicard = 5;
inline bool tagJSGameScence::has_laizicard() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void tagJSGameScence::set_has_laizicard() {
  _has_bits_[0] |= 0x00000010u;
}
inline void tagJSGameScence::clear_has_laizicard() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void tagJSGameScence::clear_laizicard() {
  laizicard_ = 0;
  clear_has_laizicard();
}
inline ::google::protobuf::int32 tagJSGameScence::laizicard() const {
  return laizicard_;
}
inline void tagJSGameScence::set_laizicard(::google::protobuf::int32 value) {
  set_has_laizicard();
  laizicard_ = value;
}

// -------------------------------------------------------------------

// ReordInfo

// optional int32 banker_num = 1;
inline bool ReordInfo::has_banker_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReordInfo::set_has_banker_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReordInfo::clear_has_banker_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReordInfo::clear_banker_num() {
  banker_num_ = 0;
  clear_has_banker_num();
}
inline ::google::protobuf::int32 ReordInfo::banker_num() const {
  return banker_num_;
}
inline void ReordInfo::set_banker_num(::google::protobuf::int32 value) {
  set_has_banker_num();
  banker_num_ = value;
}

// optional int32 hu_num = 2;
inline bool ReordInfo::has_hu_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReordInfo::set_has_hu_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReordInfo::clear_has_hu_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReordInfo::clear_hu_num() {
  hu_num_ = 0;
  clear_has_hu_num();
}
inline ::google::protobuf::int32 ReordInfo::hu_num() const {
  return hu_num_;
}
inline void ReordInfo::set_hu_num(::google::protobuf::int32 value) {
  set_has_hu_num();
  hu_num_ = value;
}

// optional int32 piaolaizi_num = 3;
inline bool ReordInfo::has_piaolaizi_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReordInfo::set_has_piaolaizi_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReordInfo::clear_has_piaolaizi_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReordInfo::clear_piaolaizi_num() {
  piaolaizi_num_ = 0;
  clear_has_piaolaizi_num();
}
inline ::google::protobuf::int32 ReordInfo::piaolaizi_num() const {
  return piaolaizi_num_;
}
inline void ReordInfo::set_piaolaizi_num(::google::protobuf::int32 value) {
  set_has_piaolaizi_num();
  piaolaizi_num_ = value;
}

// optional int32 outtime_num = 4;
inline bool ReordInfo::has_outtime_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReordInfo::set_has_outtime_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReordInfo::clear_has_outtime_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReordInfo::clear_outtime_num() {
  outtime_num_ = 0;
  clear_has_outtime_num();
}
inline ::google::protobuf::int32 ReordInfo::outtime_num() const {
  return outtime_num_;
}
inline void ReordInfo::set_outtime_num(::google::protobuf::int32 value) {
  set_has_outtime_num();
  outtime_num_ = value;
}

// optional int32 totalscore = 5;
inline bool ReordInfo::has_totalscore() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReordInfo::set_has_totalscore() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReordInfo::clear_has_totalscore() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReordInfo::clear_totalscore() {
  totalscore_ = 0;
  clear_has_totalscore();
}
inline ::google::protobuf::int32 ReordInfo::totalscore() const {
  return totalscore_;
}
inline void ReordInfo::set_totalscore(::google::protobuf::int32 value) {
  set_has_totalscore();
  totalscore_ = value;
}

// optional int32 WinCounts = 6;
inline bool ReordInfo::has_wincounts() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReordInfo::set_has_wincounts() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReordInfo::clear_has_wincounts() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReordInfo::clear_wincounts() {
  wincounts_ = 0;
  clear_has_wincounts();
}
inline ::google::protobuf::int32 ReordInfo::wincounts() const {
  return wincounts_;
}
inline void ReordInfo::set_wincounts(::google::protobuf::int32 value) {
  set_has_wincounts();
  wincounts_ = value;
}

// optional int32 GangTimes = 7;
inline bool ReordInfo::has_gangtimes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ReordInfo::set_has_gangtimes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ReordInfo::clear_has_gangtimes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ReordInfo::clear_gangtimes() {
  gangtimes_ = 0;
  clear_has_gangtimes();
}
inline ::google::protobuf::int32 ReordInfo::gangtimes() const {
  return gangtimes_;
}
inline void ReordInfo::set_gangtimes(::google::protobuf::int32 value) {
  set_has_gangtimes();
  gangtimes_ = value;
}

// optional int32 DianGangTimes = 8;
inline bool ReordInfo::has_diangangtimes() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ReordInfo::set_has_diangangtimes() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ReordInfo::clear_has_diangangtimes() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ReordInfo::clear_diangangtimes() {
  diangangtimes_ = 0;
  clear_has_diangangtimes();
}
inline ::google::protobuf::int32 ReordInfo::diangangtimes() const {
  return diangangtimes_;
}
inline void ReordInfo::set_diangangtimes(::google::protobuf::int32 value) {
  set_has_diangangtimes();
  diangangtimes_ = value;
}

// optional int32 Ex1 = 9;
inline bool ReordInfo::has_ex1() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ReordInfo::set_has_ex1() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ReordInfo::clear_has_ex1() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ReordInfo::clear_ex1() {
  ex1_ = 0;
  clear_has_ex1();
}
inline ::google::protobuf::int32 ReordInfo::ex1() const {
  return ex1_;
}
inline void ReordInfo::set_ex1(::google::protobuf::int32 value) {
  set_has_ex1();
  ex1_ = value;
}

// optional int32 Ex2 = 10;
inline bool ReordInfo::has_ex2() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ReordInfo::set_has_ex2() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ReordInfo::clear_has_ex2() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ReordInfo::clear_ex2() {
  ex2_ = 0;
  clear_has_ex2();
}
inline ::google::protobuf::int32 ReordInfo::ex2() const {
  return ex2_;
}
inline void ReordInfo::set_ex2(::google::protobuf::int32 value) {
  set_has_ex2();
  ex2_ = value;
}

// -------------------------------------------------------------------

// GameEndRecord

// repeated .proto.game.jingshanmj.ReordInfo UserRecoreInfo = 1;
inline int GameEndRecord::userrecoreinfo_size() const {
  return userrecoreinfo_.size();
}
inline void GameEndRecord::clear_userrecoreinfo() {
  userrecoreinfo_.Clear();
}
inline const ::proto::game::jingshanmj::ReordInfo& GameEndRecord::userrecoreinfo(int index) const {
  return userrecoreinfo_.Get(index);
}
inline ::proto::game::jingshanmj::ReordInfo* GameEndRecord::mutable_userrecoreinfo(int index) {
  return userrecoreinfo_.Mutable(index);
}
inline ::proto::game::jingshanmj::ReordInfo* GameEndRecord::add_userrecoreinfo() {
  return userrecoreinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::jingshanmj::ReordInfo >&
GameEndRecord::userrecoreinfo() const {
  return userrecoreinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::jingshanmj::ReordInfo >*
GameEndRecord::mutable_userrecoreinfo() {
  return &userrecoreinfo_;
}

// repeated int32 MostDianPaoUser = 2;
inline int GameEndRecord::mostdianpaouser_size() const {
  return mostdianpaouser_.size();
}
inline void GameEndRecord::clear_mostdianpaouser() {
  mostdianpaouser_.Clear();
}
inline ::google::protobuf::int32 GameEndRecord::mostdianpaouser(int index) const {
  return mostdianpaouser_.Get(index);
}
inline void GameEndRecord::set_mostdianpaouser(int index, ::google::protobuf::int32 value) {
  mostdianpaouser_.Set(index, value);
}
inline void GameEndRecord::add_mostdianpaouser(::google::protobuf::int32 value) {
  mostdianpaouser_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameEndRecord::mostdianpaouser() const {
  return mostdianpaouser_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameEndRecord::mutable_mostdianpaouser() {
  return &mostdianpaouser_;
}

// repeated int32 MostWinScoreUser = 3;
inline int GameEndRecord::mostwinscoreuser_size() const {
  return mostwinscoreuser_.size();
}
inline void GameEndRecord::clear_mostwinscoreuser() {
  mostwinscoreuser_.Clear();
}
inline ::google::protobuf::int32 GameEndRecord::mostwinscoreuser(int index) const {
  return mostwinscoreuser_.Get(index);
}
inline void GameEndRecord::set_mostwinscoreuser(int index, ::google::protobuf::int32 value) {
  mostwinscoreuser_.Set(index, value);
}
inline void GameEndRecord::add_mostwinscoreuser(::google::protobuf::int32 value) {
  mostwinscoreuser_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameEndRecord::mostwinscoreuser() const {
  return mostwinscoreuser_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameEndRecord::mutable_mostwinscoreuser() {
  return &mostwinscoreuser_;
}

// optional int32 DataTime = 4;
inline bool GameEndRecord::has_datatime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameEndRecord::set_has_datatime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameEndRecord::clear_has_datatime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameEndRecord::clear_datatime() {
  datatime_ = 0;
  clear_has_datatime();
}
inline ::google::protobuf::int32 GameEndRecord::datatime() const {
  return datatime_;
}
inline void GameEndRecord::set_datatime(::google::protobuf::int32 value) {
  set_has_datatime();
  datatime_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace jingshanmj
}  // namespace game
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_jingshangameproto_2eproto__INCLUDED
