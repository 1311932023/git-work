// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shanxigameproto.proto

#ifndef PROTOBUF_shanxigameproto_2eproto__INCLUDED
#define PROTOBUF_shanxigameproto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace game {
namespace sxmahjonggame {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_shanxigameproto_2eproto();
void protobuf_AssignDesc_shanxigameproto_2eproto();
void protobuf_ShutdownFile_shanxigameproto_2eproto();

class sxgamescene;
class ReqChoosePiao;
class AckGameStart;
class AckStartPiao;
class AckBroadPiao;
class FanInfo;
class sxmjGameEndInfo;
class ReordInfo;
class GameEndRecord;

// ===================================================================

class sxgamescene : public ::google::protobuf::Message {
 public:
  sxgamescene();
  virtual ~sxgamescene();

  sxgamescene(const sxgamescene& from);

  inline sxgamescene& operator=(const sxgamescene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sxgamescene& default_instance();

  void Swap(sxgamescene* other);

  // implements Message ----------------------------------------------

  sxgamescene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sxgamescene& from);
  void MergeFrom(const sxgamescene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 roomType = 1;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomTypeFieldNumber = 1;
  inline ::google::protobuf::int32 roomtype() const;
  inline void set_roomtype(::google::protobuf::int32 value);

  // optional int32 isHavePiao = 2;
  inline bool has_ishavepiao() const;
  inline void clear_ishavepiao();
  static const int kIsHavePiaoFieldNumber = 2;
  inline ::google::protobuf::int32 ishavepiao() const;
  inline void set_ishavepiao(::google::protobuf::int32 value);

  // optional int32 piaoTime = 3;
  inline bool has_piaotime() const;
  inline void clear_piaotime();
  static const int kPiaoTimeFieldNumber = 3;
  inline ::google::protobuf::int32 piaotime() const;
  inline void set_piaotime(::google::protobuf::int32 value);

  // repeated int32 UserPiao = 4;
  inline int userpiao_size() const;
  inline void clear_userpiao();
  static const int kUserPiaoFieldNumber = 4;
  inline ::google::protobuf::int32 userpiao(int index) const;
  inline void set_userpiao(int index, ::google::protobuf::int32 value);
  inline void add_userpiao(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      userpiao() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_userpiao();

  // optional int32 IsPiaoyet = 5;
  inline bool has_ispiaoyet() const;
  inline void clear_ispiaoyet();
  static const int kIsPiaoyetFieldNumber = 5;
  inline ::google::protobuf::int32 ispiaoyet() const;
  inline void set_ispiaoyet(::google::protobuf::int32 value);

  // repeated int32 piaoNum = 6;
  inline int piaonum_size() const;
  inline void clear_piaonum();
  static const int kPiaoNumFieldNumber = 6;
  inline ::google::protobuf::int32 piaonum(int index) const;
  inline void set_piaonum(int index, ::google::protobuf::int32 value);
  inline void add_piaonum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      piaonum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_piaonum();

  // @@protoc_insertion_point(class_scope:proto.game.sxmahjonggame.sxgamescene)
 private:
  inline void set_has_roomtype();
  inline void clear_has_roomtype();
  inline void set_has_ishavepiao();
  inline void clear_has_ishavepiao();
  inline void set_has_piaotime();
  inline void clear_has_piaotime();
  inline void set_has_ispiaoyet();
  inline void clear_has_ispiaoyet();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roomtype_;
  ::google::protobuf::int32 ishavepiao_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > userpiao_;
  ::google::protobuf::int32 piaotime_;
  ::google::protobuf::int32 ispiaoyet_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > piaonum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_shanxigameproto_2eproto();
  friend void protobuf_AssignDesc_shanxigameproto_2eproto();
  friend void protobuf_ShutdownFile_shanxigameproto_2eproto();

  void InitAsDefaultInstance();
  static sxgamescene* default_instance_;
};
// -------------------------------------------------------------------

class ReqChoosePiao : public ::google::protobuf::Message {
 public:
  ReqChoosePiao();
  virtual ~ReqChoosePiao();

  ReqChoosePiao(const ReqChoosePiao& from);

  inline ReqChoosePiao& operator=(const ReqChoosePiao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqChoosePiao& default_instance();

  void Swap(ReqChoosePiao* other);

  // implements Message ----------------------------------------------

  ReqChoosePiao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqChoosePiao& from);
  void MergeFrom(const ReqChoosePiao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 PiaoNum = 1;
  inline bool has_piaonum() const;
  inline void clear_piaonum();
  static const int kPiaoNumFieldNumber = 1;
  inline ::google::protobuf::int32 piaonum() const;
  inline void set_piaonum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.sxmahjonggame.ReqChoosePiao)
 private:
  inline void set_has_piaonum();
  inline void clear_has_piaonum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 piaonum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_shanxigameproto_2eproto();
  friend void protobuf_AssignDesc_shanxigameproto_2eproto();
  friend void protobuf_ShutdownFile_shanxigameproto_2eproto();

  void InitAsDefaultInstance();
  static ReqChoosePiao* default_instance_;
};
// -------------------------------------------------------------------

class AckGameStart : public ::google::protobuf::Message {
 public:
  AckGameStart();
  virtual ~AckGameStart();

  AckGameStart(const AckGameStart& from);

  inline AckGameStart& operator=(const AckGameStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckGameStart& default_instance();

  void Swap(AckGameStart* other);

  // implements Message ----------------------------------------------

  AckGameStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckGameStart& from);
  void MergeFrom(const AckGameStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 bankerid = 1;
  inline bool has_bankerid() const;
  inline void clear_bankerid();
  static const int kBankeridFieldNumber = 1;
  inline ::google::protobuf::int32 bankerid() const;
  inline void set_bankerid(::google::protobuf::int32 value);

  // optional int32 quanfeng = 2;
  inline bool has_quanfeng() const;
  inline void clear_quanfeng();
  static const int kQuanfengFieldNumber = 2;
  inline ::google::protobuf::int32 quanfeng() const;
  inline void set_quanfeng(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.sxmahjonggame.AckGameStart)
 private:
  inline void set_has_bankerid();
  inline void clear_has_bankerid();
  inline void set_has_quanfeng();
  inline void clear_has_quanfeng();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bankerid_;
  ::google::protobuf::int32 quanfeng_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_shanxigameproto_2eproto();
  friend void protobuf_AssignDesc_shanxigameproto_2eproto();
  friend void protobuf_ShutdownFile_shanxigameproto_2eproto();

  void InitAsDefaultInstance();
  static AckGameStart* default_instance_;
};
// -------------------------------------------------------------------

class AckStartPiao : public ::google::protobuf::Message {
 public:
  AckStartPiao();
  virtual ~AckStartPiao();

  AckStartPiao(const AckStartPiao& from);

  inline AckStartPiao& operator=(const AckStartPiao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckStartPiao& default_instance();

  void Swap(AckStartPiao* other);

  // implements Message ----------------------------------------------

  AckStartPiao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckStartPiao& from);
  void MergeFrom(const AckStartPiao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 piaoNum = 1;
  inline int piaonum_size() const;
  inline void clear_piaonum();
  static const int kPiaoNumFieldNumber = 1;
  inline ::google::protobuf::int32 piaonum(int index) const;
  inline void set_piaonum(int index, ::google::protobuf::int32 value);
  inline void add_piaonum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      piaonum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_piaonum();

  // @@protoc_insertion_point(class_scope:proto.game.sxmahjonggame.AckStartPiao)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > piaonum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_shanxigameproto_2eproto();
  friend void protobuf_AssignDesc_shanxigameproto_2eproto();
  friend void protobuf_ShutdownFile_shanxigameproto_2eproto();

  void InitAsDefaultInstance();
  static AckStartPiao* default_instance_;
};
// -------------------------------------------------------------------

class AckBroadPiao : public ::google::protobuf::Message {
 public:
  AckBroadPiao();
  virtual ~AckBroadPiao();

  AckBroadPiao(const AckBroadPiao& from);

  inline AckBroadPiao& operator=(const AckBroadPiao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckBroadPiao& default_instance();

  void Swap(AckBroadPiao* other);

  // implements Message ----------------------------------------------

  AckBroadPiao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckBroadPiao& from);
  void MergeFrom(const AckBroadPiao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chariid = 1;
  inline bool has_chariid() const;
  inline void clear_chariid();
  static const int kChariidFieldNumber = 1;
  inline ::google::protobuf::int32 chariid() const;
  inline void set_chariid(::google::protobuf::int32 value);

  // optional int32 UserPiao = 2;
  inline bool has_userpiao() const;
  inline void clear_userpiao();
  static const int kUserPiaoFieldNumber = 2;
  inline ::google::protobuf::int32 userpiao() const;
  inline void set_userpiao(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.sxmahjonggame.AckBroadPiao)
 private:
  inline void set_has_chariid();
  inline void clear_has_chariid();
  inline void set_has_userpiao();
  inline void clear_has_userpiao();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chariid_;
  ::google::protobuf::int32 userpiao_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_shanxigameproto_2eproto();
  friend void protobuf_AssignDesc_shanxigameproto_2eproto();
  friend void protobuf_ShutdownFile_shanxigameproto_2eproto();

  void InitAsDefaultInstance();
  static AckBroadPiao* default_instance_;
};
// -------------------------------------------------------------------

class FanInfo : public ::google::protobuf::Message {
 public:
  FanInfo();
  virtual ~FanInfo();

  FanInfo(const FanInfo& from);

  inline FanInfo& operator=(const FanInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FanInfo& default_instance();

  void Swap(FanInfo* other);

  // implements Message ----------------------------------------------

  FanInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FanInfo& from);
  void MergeFrom(const FanInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chairID = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairIDFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // optional int32 EndType = 2;
  inline bool has_endtype() const;
  inline void clear_endtype();
  static const int kEndTypeFieldNumber = 2;
  inline ::google::protobuf::int32 endtype() const;
  inline void set_endtype(::google::protobuf::int32 value);

  // optional int32 SpecialType = 3;
  inline bool has_specialtype() const;
  inline void clear_specialtype();
  static const int kSpecialTypeFieldNumber = 3;
  inline ::google::protobuf::int32 specialtype() const;
  inline void set_specialtype(::google::protobuf::int32 value);

  // optional int32 FanType = 4;
  inline bool has_fantype() const;
  inline void clear_fantype();
  static const int kFanTypeFieldNumber = 4;
  inline ::google::protobuf::int32 fantype() const;
  inline void set_fantype(::google::protobuf::int32 value);

  // optional int32 FanNum = 5;
  inline bool has_fannum() const;
  inline void clear_fannum();
  static const int kFanNumFieldNumber = 5;
  inline ::google::protobuf::int32 fannum() const;
  inline void set_fannum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.sxmahjonggame.FanInfo)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_endtype();
  inline void clear_has_endtype();
  inline void set_has_specialtype();
  inline void clear_has_specialtype();
  inline void set_has_fantype();
  inline void clear_has_fantype();
  inline void set_has_fannum();
  inline void clear_has_fannum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chairid_;
  ::google::protobuf::int32 endtype_;
  ::google::protobuf::int32 specialtype_;
  ::google::protobuf::int32 fantype_;
  ::google::protobuf::int32 fannum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_shanxigameproto_2eproto();
  friend void protobuf_AssignDesc_shanxigameproto_2eproto();
  friend void protobuf_ShutdownFile_shanxigameproto_2eproto();

  void InitAsDefaultInstance();
  static FanInfo* default_instance_;
};
// -------------------------------------------------------------------

class sxmjGameEndInfo : public ::google::protobuf::Message {
 public:
  sxmjGameEndInfo();
  virtual ~sxmjGameEndInfo();

  sxmjGameEndInfo(const sxmjGameEndInfo& from);

  inline sxmjGameEndInfo& operator=(const sxmjGameEndInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sxmjGameEndInfo& default_instance();

  void Swap(sxmjGameEndInfo* other);

  // implements Message ----------------------------------------------

  sxmjGameEndInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sxmjGameEndInfo& from);
  void MergeFrom(const sxmjGameEndInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.game.sxmahjonggame.FanInfo faninfo = 1;
  inline int faninfo_size() const;
  inline void clear_faninfo();
  static const int kFaninfoFieldNumber = 1;
  inline const ::proto::game::sxmahjonggame::FanInfo& faninfo(int index) const;
  inline ::proto::game::sxmahjonggame::FanInfo* mutable_faninfo(int index);
  inline ::proto::game::sxmahjonggame::FanInfo* add_faninfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::sxmahjonggame::FanInfo >&
      faninfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::sxmahjonggame::FanInfo >*
      mutable_faninfo();

  // repeated int32 HuScore = 2;
  inline int huscore_size() const;
  inline void clear_huscore();
  static const int kHuScoreFieldNumber = 2;
  inline ::google::protobuf::int32 huscore(int index) const;
  inline void set_huscore(int index, ::google::protobuf::int32 value);
  inline void add_huscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      huscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_huscore();

  // repeated int32 piaoNum = 3;
  inline int piaonum_size() const;
  inline void clear_piaonum();
  static const int kPiaoNumFieldNumber = 3;
  inline ::google::protobuf::int32 piaonum(int index) const;
  inline void set_piaonum(int index, ::google::protobuf::int32 value);
  inline void add_piaonum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      piaonum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_piaonum();

  // @@protoc_insertion_point(class_scope:proto.game.sxmahjonggame.sxmjGameEndInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::game::sxmahjonggame::FanInfo > faninfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > huscore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > piaonum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_shanxigameproto_2eproto();
  friend void protobuf_AssignDesc_shanxigameproto_2eproto();
  friend void protobuf_ShutdownFile_shanxigameproto_2eproto();

  void InitAsDefaultInstance();
  static sxmjGameEndInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReordInfo : public ::google::protobuf::Message {
 public:
  ReordInfo();
  virtual ~ReordInfo();

  ReordInfo(const ReordInfo& from);

  inline ReordInfo& operator=(const ReordInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReordInfo& default_instance();

  void Swap(ReordInfo* other);

  // implements Message ----------------------------------------------

  ReordInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReordInfo& from);
  void MergeFrom(const ReordInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 minggang_num = 1;
  inline bool has_minggang_num() const;
  inline void clear_minggang_num();
  static const int kMinggangNumFieldNumber = 1;
  inline ::google::protobuf::int32 minggang_num() const;
  inline void set_minggang_num(::google::protobuf::int32 value);

  // optional int32 angang_num = 2;
  inline bool has_angang_num() const;
  inline void clear_angang_num();
  static const int kAngangNumFieldNumber = 2;
  inline ::google::protobuf::int32 angang_num() const;
  inline void set_angang_num(::google::protobuf::int32 value);

  // optional int32 dianpao_num = 3;
  inline bool has_dianpao_num() const;
  inline void clear_dianpao_num();
  static const int kDianpaoNumFieldNumber = 3;
  inline ::google::protobuf::int32 dianpao_num() const;
  inline void set_dianpao_num(::google::protobuf::int32 value);

  // optional int32 jiepao_num = 4;
  inline bool has_jiepao_num() const;
  inline void clear_jiepao_num();
  static const int kJiepaoNumFieldNumber = 4;
  inline ::google::protobuf::int32 jiepao_num() const;
  inline void set_jiepao_num(::google::protobuf::int32 value);

  // optional int32 zimo_num = 5;
  inline bool has_zimo_num() const;
  inline void clear_zimo_num();
  static const int kZimoNumFieldNumber = 5;
  inline ::google::protobuf::int32 zimo_num() const;
  inline void set_zimo_num(::google::protobuf::int32 value);

  // optional int32 totalscore = 6;
  inline bool has_totalscore() const;
  inline void clear_totalscore();
  static const int kTotalscoreFieldNumber = 6;
  inline ::google::protobuf::int32 totalscore() const;
  inline void set_totalscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.sxmahjonggame.ReordInfo)
 private:
  inline void set_has_minggang_num();
  inline void clear_has_minggang_num();
  inline void set_has_angang_num();
  inline void clear_has_angang_num();
  inline void set_has_dianpao_num();
  inline void clear_has_dianpao_num();
  inline void set_has_jiepao_num();
  inline void clear_has_jiepao_num();
  inline void set_has_zimo_num();
  inline void clear_has_zimo_num();
  inline void set_has_totalscore();
  inline void clear_has_totalscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 minggang_num_;
  ::google::protobuf::int32 angang_num_;
  ::google::protobuf::int32 dianpao_num_;
  ::google::protobuf::int32 jiepao_num_;
  ::google::protobuf::int32 zimo_num_;
  ::google::protobuf::int32 totalscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_shanxigameproto_2eproto();
  friend void protobuf_AssignDesc_shanxigameproto_2eproto();
  friend void protobuf_ShutdownFile_shanxigameproto_2eproto();

  void InitAsDefaultInstance();
  static ReordInfo* default_instance_;
};
// -------------------------------------------------------------------

class GameEndRecord : public ::google::protobuf::Message {
 public:
  GameEndRecord();
  virtual ~GameEndRecord();

  GameEndRecord(const GameEndRecord& from);

  inline GameEndRecord& operator=(const GameEndRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameEndRecord& default_instance();

  void Swap(GameEndRecord* other);

  // implements Message ----------------------------------------------

  GameEndRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameEndRecord& from);
  void MergeFrom(const GameEndRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.game.sxmahjonggame.ReordInfo UserRecoreInfo = 1;
  inline int userrecoreinfo_size() const;
  inline void clear_userrecoreinfo();
  static const int kUserRecoreInfoFieldNumber = 1;
  inline const ::proto::game::sxmahjonggame::ReordInfo& userrecoreinfo(int index) const;
  inline ::proto::game::sxmahjonggame::ReordInfo* mutable_userrecoreinfo(int index);
  inline ::proto::game::sxmahjonggame::ReordInfo* add_userrecoreinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::sxmahjonggame::ReordInfo >&
      userrecoreinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::sxmahjonggame::ReordInfo >*
      mutable_userrecoreinfo();

  // repeated int32 MostDianPaoUser = 2;
  inline int mostdianpaouser_size() const;
  inline void clear_mostdianpaouser();
  static const int kMostDianPaoUserFieldNumber = 2;
  inline ::google::protobuf::int32 mostdianpaouser(int index) const;
  inline void set_mostdianpaouser(int index, ::google::protobuf::int32 value);
  inline void add_mostdianpaouser(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mostdianpaouser() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mostdianpaouser();

  // repeated int32 MostWinScoreUser = 3;
  inline int mostwinscoreuser_size() const;
  inline void clear_mostwinscoreuser();
  static const int kMostWinScoreUserFieldNumber = 3;
  inline ::google::protobuf::int32 mostwinscoreuser(int index) const;
  inline void set_mostwinscoreuser(int index, ::google::protobuf::int32 value);
  inline void add_mostwinscoreuser(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mostwinscoreuser() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mostwinscoreuser();

  // optional int32 DataTime = 4;
  inline bool has_datatime() const;
  inline void clear_datatime();
  static const int kDataTimeFieldNumber = 4;
  inline ::google::protobuf::int32 datatime() const;
  inline void set_datatime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.sxmahjonggame.GameEndRecord)
 private:
  inline void set_has_datatime();
  inline void clear_has_datatime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::game::sxmahjonggame::ReordInfo > userrecoreinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mostdianpaouser_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mostwinscoreuser_;
  ::google::protobuf::int32 datatime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_shanxigameproto_2eproto();
  friend void protobuf_AssignDesc_shanxigameproto_2eproto();
  friend void protobuf_ShutdownFile_shanxigameproto_2eproto();

  void InitAsDefaultInstance();
  static GameEndRecord* default_instance_;
};
// ===================================================================


// ===================================================================

// sxgamescene

// optional int32 roomType = 1;
inline bool sxgamescene::has_roomtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sxgamescene::set_has_roomtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sxgamescene::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sxgamescene::clear_roomtype() {
  roomtype_ = 0;
  clear_has_roomtype();
}
inline ::google::protobuf::int32 sxgamescene::roomtype() const {
  return roomtype_;
}
inline void sxgamescene::set_roomtype(::google::protobuf::int32 value) {
  set_has_roomtype();
  roomtype_ = value;
}

// optional int32 isHavePiao = 2;
inline bool sxgamescene::has_ishavepiao() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void sxgamescene::set_has_ishavepiao() {
  _has_bits_[0] |= 0x00000002u;
}
inline void sxgamescene::clear_has_ishavepiao() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void sxgamescene::clear_ishavepiao() {
  ishavepiao_ = 0;
  clear_has_ishavepiao();
}
inline ::google::protobuf::int32 sxgamescene::ishavepiao() const {
  return ishavepiao_;
}
inline void sxgamescene::set_ishavepiao(::google::protobuf::int32 value) {
  set_has_ishavepiao();
  ishavepiao_ = value;
}

// optional int32 piaoTime = 3;
inline bool sxgamescene::has_piaotime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void sxgamescene::set_has_piaotime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void sxgamescene::clear_has_piaotime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void sxgamescene::clear_piaotime() {
  piaotime_ = 0;
  clear_has_piaotime();
}
inline ::google::protobuf::int32 sxgamescene::piaotime() const {
  return piaotime_;
}
inline void sxgamescene::set_piaotime(::google::protobuf::int32 value) {
  set_has_piaotime();
  piaotime_ = value;
}

// repeated int32 UserPiao = 4;
inline int sxgamescene::userpiao_size() const {
  return userpiao_.size();
}
inline void sxgamescene::clear_userpiao() {
  userpiao_.Clear();
}
inline ::google::protobuf::int32 sxgamescene::userpiao(int index) const {
  return userpiao_.Get(index);
}
inline void sxgamescene::set_userpiao(int index, ::google::protobuf::int32 value) {
  userpiao_.Set(index, value);
}
inline void sxgamescene::add_userpiao(::google::protobuf::int32 value) {
  userpiao_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
sxgamescene::userpiao() const {
  return userpiao_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
sxgamescene::mutable_userpiao() {
  return &userpiao_;
}

// optional int32 IsPiaoyet = 5;
inline bool sxgamescene::has_ispiaoyet() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void sxgamescene::set_has_ispiaoyet() {
  _has_bits_[0] |= 0x00000010u;
}
inline void sxgamescene::clear_has_ispiaoyet() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void sxgamescene::clear_ispiaoyet() {
  ispiaoyet_ = 0;
  clear_has_ispiaoyet();
}
inline ::google::protobuf::int32 sxgamescene::ispiaoyet() const {
  return ispiaoyet_;
}
inline void sxgamescene::set_ispiaoyet(::google::protobuf::int32 value) {
  set_has_ispiaoyet();
  ispiaoyet_ = value;
}

// repeated int32 piaoNum = 6;
inline int sxgamescene::piaonum_size() const {
  return piaonum_.size();
}
inline void sxgamescene::clear_piaonum() {
  piaonum_.Clear();
}
inline ::google::protobuf::int32 sxgamescene::piaonum(int index) const {
  return piaonum_.Get(index);
}
inline void sxgamescene::set_piaonum(int index, ::google::protobuf::int32 value) {
  piaonum_.Set(index, value);
}
inline void sxgamescene::add_piaonum(::google::protobuf::int32 value) {
  piaonum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
sxgamescene::piaonum() const {
  return piaonum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
sxgamescene::mutable_piaonum() {
  return &piaonum_;
}

// -------------------------------------------------------------------

// ReqChoosePiao

// optional int32 PiaoNum = 1;
inline bool ReqChoosePiao::has_piaonum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqChoosePiao::set_has_piaonum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqChoosePiao::clear_has_piaonum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqChoosePiao::clear_piaonum() {
  piaonum_ = 0;
  clear_has_piaonum();
}
inline ::google::protobuf::int32 ReqChoosePiao::piaonum() const {
  return piaonum_;
}
inline void ReqChoosePiao::set_piaonum(::google::protobuf::int32 value) {
  set_has_piaonum();
  piaonum_ = value;
}

// -------------------------------------------------------------------

// AckGameStart

// required int32 bankerid = 1;
inline bool AckGameStart::has_bankerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckGameStart::set_has_bankerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckGameStart::clear_has_bankerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckGameStart::clear_bankerid() {
  bankerid_ = 0;
  clear_has_bankerid();
}
inline ::google::protobuf::int32 AckGameStart::bankerid() const {
  return bankerid_;
}
inline void AckGameStart::set_bankerid(::google::protobuf::int32 value) {
  set_has_bankerid();
  bankerid_ = value;
}

// optional int32 quanfeng = 2;
inline bool AckGameStart::has_quanfeng() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckGameStart::set_has_quanfeng() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckGameStart::clear_has_quanfeng() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckGameStart::clear_quanfeng() {
  quanfeng_ = 0;
  clear_has_quanfeng();
}
inline ::google::protobuf::int32 AckGameStart::quanfeng() const {
  return quanfeng_;
}
inline void AckGameStart::set_quanfeng(::google::protobuf::int32 value) {
  set_has_quanfeng();
  quanfeng_ = value;
}

// -------------------------------------------------------------------

// AckStartPiao

// repeated int32 piaoNum = 1;
inline int AckStartPiao::piaonum_size() const {
  return piaonum_.size();
}
inline void AckStartPiao::clear_piaonum() {
  piaonum_.Clear();
}
inline ::google::protobuf::int32 AckStartPiao::piaonum(int index) const {
  return piaonum_.Get(index);
}
inline void AckStartPiao::set_piaonum(int index, ::google::protobuf::int32 value) {
  piaonum_.Set(index, value);
}
inline void AckStartPiao::add_piaonum(::google::protobuf::int32 value) {
  piaonum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckStartPiao::piaonum() const {
  return piaonum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckStartPiao::mutable_piaonum() {
  return &piaonum_;
}

// -------------------------------------------------------------------

// AckBroadPiao

// optional int32 chariid = 1;
inline bool AckBroadPiao::has_chariid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckBroadPiao::set_has_chariid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckBroadPiao::clear_has_chariid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckBroadPiao::clear_chariid() {
  chariid_ = 0;
  clear_has_chariid();
}
inline ::google::protobuf::int32 AckBroadPiao::chariid() const {
  return chariid_;
}
inline void AckBroadPiao::set_chariid(::google::protobuf::int32 value) {
  set_has_chariid();
  chariid_ = value;
}

// optional int32 UserPiao = 2;
inline bool AckBroadPiao::has_userpiao() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckBroadPiao::set_has_userpiao() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckBroadPiao::clear_has_userpiao() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckBroadPiao::clear_userpiao() {
  userpiao_ = 0;
  clear_has_userpiao();
}
inline ::google::protobuf::int32 AckBroadPiao::userpiao() const {
  return userpiao_;
}
inline void AckBroadPiao::set_userpiao(::google::protobuf::int32 value) {
  set_has_userpiao();
  userpiao_ = value;
}

// -------------------------------------------------------------------

// FanInfo

// optional int32 chairID = 1;
inline bool FanInfo::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FanInfo::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FanInfo::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FanInfo::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 FanInfo::chairid() const {
  return chairid_;
}
inline void FanInfo::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// optional int32 EndType = 2;
inline bool FanInfo::has_endtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FanInfo::set_has_endtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FanInfo::clear_has_endtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FanInfo::clear_endtype() {
  endtype_ = 0;
  clear_has_endtype();
}
inline ::google::protobuf::int32 FanInfo::endtype() const {
  return endtype_;
}
inline void FanInfo::set_endtype(::google::protobuf::int32 value) {
  set_has_endtype();
  endtype_ = value;
}

// optional int32 SpecialType = 3;
inline bool FanInfo::has_specialtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FanInfo::set_has_specialtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FanInfo::clear_has_specialtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FanInfo::clear_specialtype() {
  specialtype_ = 0;
  clear_has_specialtype();
}
inline ::google::protobuf::int32 FanInfo::specialtype() const {
  return specialtype_;
}
inline void FanInfo::set_specialtype(::google::protobuf::int32 value) {
  set_has_specialtype();
  specialtype_ = value;
}

// optional int32 FanType = 4;
inline bool FanInfo::has_fantype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FanInfo::set_has_fantype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FanInfo::clear_has_fantype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FanInfo::clear_fantype() {
  fantype_ = 0;
  clear_has_fantype();
}
inline ::google::protobuf::int32 FanInfo::fantype() const {
  return fantype_;
}
inline void FanInfo::set_fantype(::google::protobuf::int32 value) {
  set_has_fantype();
  fantype_ = value;
}

// optional int32 FanNum = 5;
inline bool FanInfo::has_fannum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FanInfo::set_has_fannum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FanInfo::clear_has_fannum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FanInfo::clear_fannum() {
  fannum_ = 0;
  clear_has_fannum();
}
inline ::google::protobuf::int32 FanInfo::fannum() const {
  return fannum_;
}
inline void FanInfo::set_fannum(::google::protobuf::int32 value) {
  set_has_fannum();
  fannum_ = value;
}

// -------------------------------------------------------------------

// sxmjGameEndInfo

// repeated .proto.game.sxmahjonggame.FanInfo faninfo = 1;
inline int sxmjGameEndInfo::faninfo_size() const {
  return faninfo_.size();
}
inline void sxmjGameEndInfo::clear_faninfo() {
  faninfo_.Clear();
}
inline const ::proto::game::sxmahjonggame::FanInfo& sxmjGameEndInfo::faninfo(int index) const {
  return faninfo_.Get(index);
}
inline ::proto::game::sxmahjonggame::FanInfo* sxmjGameEndInfo::mutable_faninfo(int index) {
  return faninfo_.Mutable(index);
}
inline ::proto::game::sxmahjonggame::FanInfo* sxmjGameEndInfo::add_faninfo() {
  return faninfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::sxmahjonggame::FanInfo >&
sxmjGameEndInfo::faninfo() const {
  return faninfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::sxmahjonggame::FanInfo >*
sxmjGameEndInfo::mutable_faninfo() {
  return &faninfo_;
}

// repeated int32 HuScore = 2;
inline int sxmjGameEndInfo::huscore_size() const {
  return huscore_.size();
}
inline void sxmjGameEndInfo::clear_huscore() {
  huscore_.Clear();
}
inline ::google::protobuf::int32 sxmjGameEndInfo::huscore(int index) const {
  return huscore_.Get(index);
}
inline void sxmjGameEndInfo::set_huscore(int index, ::google::protobuf::int32 value) {
  huscore_.Set(index, value);
}
inline void sxmjGameEndInfo::add_huscore(::google::protobuf::int32 value) {
  huscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
sxmjGameEndInfo::huscore() const {
  return huscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
sxmjGameEndInfo::mutable_huscore() {
  return &huscore_;
}

// repeated int32 piaoNum = 3;
inline int sxmjGameEndInfo::piaonum_size() const {
  return piaonum_.size();
}
inline void sxmjGameEndInfo::clear_piaonum() {
  piaonum_.Clear();
}
inline ::google::protobuf::int32 sxmjGameEndInfo::piaonum(int index) const {
  return piaonum_.Get(index);
}
inline void sxmjGameEndInfo::set_piaonum(int index, ::google::protobuf::int32 value) {
  piaonum_.Set(index, value);
}
inline void sxmjGameEndInfo::add_piaonum(::google::protobuf::int32 value) {
  piaonum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
sxmjGameEndInfo::piaonum() const {
  return piaonum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
sxmjGameEndInfo::mutable_piaonum() {
  return &piaonum_;
}

// -------------------------------------------------------------------

// ReordInfo

// optional int32 minggang_num = 1;
inline bool ReordInfo::has_minggang_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReordInfo::set_has_minggang_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReordInfo::clear_has_minggang_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReordInfo::clear_minggang_num() {
  minggang_num_ = 0;
  clear_has_minggang_num();
}
inline ::google::protobuf::int32 ReordInfo::minggang_num() const {
  return minggang_num_;
}
inline void ReordInfo::set_minggang_num(::google::protobuf::int32 value) {
  set_has_minggang_num();
  minggang_num_ = value;
}

// optional int32 angang_num = 2;
inline bool ReordInfo::has_angang_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReordInfo::set_has_angang_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReordInfo::clear_has_angang_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReordInfo::clear_angang_num() {
  angang_num_ = 0;
  clear_has_angang_num();
}
inline ::google::protobuf::int32 ReordInfo::angang_num() const {
  return angang_num_;
}
inline void ReordInfo::set_angang_num(::google::protobuf::int32 value) {
  set_has_angang_num();
  angang_num_ = value;
}

// optional int32 dianpao_num = 3;
inline bool ReordInfo::has_dianpao_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReordInfo::set_has_dianpao_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReordInfo::clear_has_dianpao_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReordInfo::clear_dianpao_num() {
  dianpao_num_ = 0;
  clear_has_dianpao_num();
}
inline ::google::protobuf::int32 ReordInfo::dianpao_num() const {
  return dianpao_num_;
}
inline void ReordInfo::set_dianpao_num(::google::protobuf::int32 value) {
  set_has_dianpao_num();
  dianpao_num_ = value;
}

// optional int32 jiepao_num = 4;
inline bool ReordInfo::has_jiepao_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReordInfo::set_has_jiepao_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReordInfo::clear_has_jiepao_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReordInfo::clear_jiepao_num() {
  jiepao_num_ = 0;
  clear_has_jiepao_num();
}
inline ::google::protobuf::int32 ReordInfo::jiepao_num() const {
  return jiepao_num_;
}
inline void ReordInfo::set_jiepao_num(::google::protobuf::int32 value) {
  set_has_jiepao_num();
  jiepao_num_ = value;
}

// optional int32 zimo_num = 5;
inline bool ReordInfo::has_zimo_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReordInfo::set_has_zimo_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReordInfo::clear_has_zimo_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReordInfo::clear_zimo_num() {
  zimo_num_ = 0;
  clear_has_zimo_num();
}
inline ::google::protobuf::int32 ReordInfo::zimo_num() const {
  return zimo_num_;
}
inline void ReordInfo::set_zimo_num(::google::protobuf::int32 value) {
  set_has_zimo_num();
  zimo_num_ = value;
}

// optional int32 totalscore = 6;
inline bool ReordInfo::has_totalscore() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReordInfo::set_has_totalscore() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReordInfo::clear_has_totalscore() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReordInfo::clear_totalscore() {
  totalscore_ = 0;
  clear_has_totalscore();
}
inline ::google::protobuf::int32 ReordInfo::totalscore() const {
  return totalscore_;
}
inline void ReordInfo::set_totalscore(::google::protobuf::int32 value) {
  set_has_totalscore();
  totalscore_ = value;
}

// -------------------------------------------------------------------

// GameEndRecord

// repeated .proto.game.sxmahjonggame.ReordInfo UserRecoreInfo = 1;
inline int GameEndRecord::userrecoreinfo_size() const {
  return userrecoreinfo_.size();
}
inline void GameEndRecord::clear_userrecoreinfo() {
  userrecoreinfo_.Clear();
}
inline const ::proto::game::sxmahjonggame::ReordInfo& GameEndRecord::userrecoreinfo(int index) const {
  return userrecoreinfo_.Get(index);
}
inline ::proto::game::sxmahjonggame::ReordInfo* GameEndRecord::mutable_userrecoreinfo(int index) {
  return userrecoreinfo_.Mutable(index);
}
inline ::proto::game::sxmahjonggame::ReordInfo* GameEndRecord::add_userrecoreinfo() {
  return userrecoreinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::sxmahjonggame::ReordInfo >&
GameEndRecord::userrecoreinfo() const {
  return userrecoreinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::sxmahjonggame::ReordInfo >*
GameEndRecord::mutable_userrecoreinfo() {
  return &userrecoreinfo_;
}

// repeated int32 MostDianPaoUser = 2;
inline int GameEndRecord::mostdianpaouser_size() const {
  return mostdianpaouser_.size();
}
inline void GameEndRecord::clear_mostdianpaouser() {
  mostdianpaouser_.Clear();
}
inline ::google::protobuf::int32 GameEndRecord::mostdianpaouser(int index) const {
  return mostdianpaouser_.Get(index);
}
inline void GameEndRecord::set_mostdianpaouser(int index, ::google::protobuf::int32 value) {
  mostdianpaouser_.Set(index, value);
}
inline void GameEndRecord::add_mostdianpaouser(::google::protobuf::int32 value) {
  mostdianpaouser_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameEndRecord::mostdianpaouser() const {
  return mostdianpaouser_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameEndRecord::mutable_mostdianpaouser() {
  return &mostdianpaouser_;
}

// repeated int32 MostWinScoreUser = 3;
inline int GameEndRecord::mostwinscoreuser_size() const {
  return mostwinscoreuser_.size();
}
inline void GameEndRecord::clear_mostwinscoreuser() {
  mostwinscoreuser_.Clear();
}
inline ::google::protobuf::int32 GameEndRecord::mostwinscoreuser(int index) const {
  return mostwinscoreuser_.Get(index);
}
inline void GameEndRecord::set_mostwinscoreuser(int index, ::google::protobuf::int32 value) {
  mostwinscoreuser_.Set(index, value);
}
inline void GameEndRecord::add_mostwinscoreuser(::google::protobuf::int32 value) {
  mostwinscoreuser_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameEndRecord::mostwinscoreuser() const {
  return mostwinscoreuser_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameEndRecord::mutable_mostwinscoreuser() {
  return &mostwinscoreuser_;
}

// optional int32 DataTime = 4;
inline bool GameEndRecord::has_datatime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameEndRecord::set_has_datatime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameEndRecord::clear_has_datatime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameEndRecord::clear_datatime() {
  datatime_ = 0;
  clear_has_datatime();
}
inline ::google::protobuf::int32 GameEndRecord::datatime() const {
  return datatime_;
}
inline void GameEndRecord::set_datatime(::google::protobuf::int32 value) {
  set_has_datatime();
  datatime_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sxmahjonggame
}  // namespace game
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_shanxigameproto_2eproto__INCLUDED
