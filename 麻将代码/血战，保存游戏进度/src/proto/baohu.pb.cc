// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: baohu.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "baohu.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace game {
namespace baohu {

namespace {

const ::google::protobuf::Descriptor* GangScore_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GangScore_reflection_ = NULL;
const ::google::protobuf::Descriptor* GangInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GangInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* BaoHuGameEnd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BaoHuGameEnd_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_baohu_2eproto() {
  protobuf_AddDesc_baohu_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "baohu.proto");
  GOOGLE_CHECK(file != NULL);
  GangScore_descriptor_ = file->message_type(0);
  static const int GangScore_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GangScore, gangtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GangScore, gangcard_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GangScore, gang_score_),
  };
  GangScore_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GangScore_descriptor_,
      GangScore::default_instance_,
      GangScore_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GangScore, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GangScore, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GangScore));
  GangInfo_descriptor_ = file->message_type(1);
  static const int GangInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GangInfo, scoreinfo_),
  };
  GangInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GangInfo_descriptor_,
      GangInfo::default_instance_,
      GangInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GangInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GangInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GangInfo));
  BaoHuGameEnd_descriptor_ = file->message_type(2);
  static const int BaoHuGameEnd_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaoHuGameEnd, hufen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaoHuGameEnd, gangfen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaoHuGameEnd, niaofen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaoHuGameEnd, lianzhuangfen_),
  };
  BaoHuGameEnd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BaoHuGameEnd_descriptor_,
      BaoHuGameEnd::default_instance_,
      BaoHuGameEnd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaoHuGameEnd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaoHuGameEnd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BaoHuGameEnd));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_baohu_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GangScore_descriptor_, &GangScore::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GangInfo_descriptor_, &GangInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BaoHuGameEnd_descriptor_, &BaoHuGameEnd::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_baohu_2eproto() {
  delete GangScore::default_instance_;
  delete GangScore_reflection_;
  delete GangInfo::default_instance_;
  delete GangInfo_reflection_;
  delete BaoHuGameEnd::default_instance_;
  delete BaoHuGameEnd_reflection_;
}

void protobuf_AddDesc_baohu_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013baohu.proto\022\020proto.game.baohu\"C\n\tGangS"
    "core\022\020\n\010GangType\030\001 \002(\005\022\020\n\010GangCard\030\002 \003(\005"
    "\022\022\n\ngang_score\030\003 \002(\005\":\n\010GangInfo\022.\n\tscor"
    "einfo\030\001 \003(\0132\033.proto.game.baohu.GangScore"
    "\"r\n\014BaoHuGameEnd\022\r\n\005hufen\030\001 \003(\005\022+\n\007gangf"
    "en\030\002 \003(\0132\032.proto.game.baohu.GangInfo\022\017\n\007"
    "niaofen\030\003 \003(\005\022\025\n\rlianzhuangfen\030\004 \003(\005", 276);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "baohu.proto", &protobuf_RegisterTypes);
  GangScore::default_instance_ = new GangScore();
  GangInfo::default_instance_ = new GangInfo();
  BaoHuGameEnd::default_instance_ = new BaoHuGameEnd();
  GangScore::default_instance_->InitAsDefaultInstance();
  GangInfo::default_instance_->InitAsDefaultInstance();
  BaoHuGameEnd::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_baohu_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_baohu_2eproto {
  StaticDescriptorInitializer_baohu_2eproto() {
    protobuf_AddDesc_baohu_2eproto();
  }
} static_descriptor_initializer_baohu_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int GangScore::kGangTypeFieldNumber;
const int GangScore::kGangCardFieldNumber;
const int GangScore::kGangScoreFieldNumber;
#endif  // !_MSC_VER

GangScore::GangScore()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GangScore::InitAsDefaultInstance() {
}

GangScore::GangScore(const GangScore& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GangScore::SharedCtor() {
  _cached_size_ = 0;
  gangtype_ = 0;
  gang_score_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GangScore::~GangScore() {
  SharedDtor();
}

void GangScore::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GangScore::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GangScore::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GangScore_descriptor_;
}

const GangScore& GangScore::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_baohu_2eproto();
  return *default_instance_;
}

GangScore* GangScore::default_instance_ = NULL;

GangScore* GangScore::New() const {
  return new GangScore;
}

void GangScore::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gangtype_ = 0;
    gang_score_ = 0;
  }
  gangcard_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GangScore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 GangType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gangtype_)));
          set_has_gangtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_GangCard;
        break;
      }

      // repeated int32 GangCard = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_GangCard:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_gangcard())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_gangcard())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_GangCard;
        if (input->ExpectTag(24)) goto parse_gang_score;
        break;
      }

      // required int32 gang_score = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gang_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gang_score_)));
          set_has_gang_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GangScore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 GangType = 1;
  if (has_gangtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gangtype(), output);
  }

  // repeated int32 GangCard = 2;
  for (int i = 0; i < this->gangcard_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->gangcard(i), output);
  }

  // required int32 gang_score = 3;
  if (has_gang_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gang_score(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GangScore::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 GangType = 1;
  if (has_gangtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->gangtype(), target);
  }

  // repeated int32 GangCard = 2;
  for (int i = 0; i < this->gangcard_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->gangcard(i), target);
  }

  // required int32 gang_score = 3;
  if (has_gang_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gang_score(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GangScore::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 GangType = 1;
    if (has_gangtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gangtype());
    }

    // required int32 gang_score = 3;
    if (has_gang_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gang_score());
    }

  }
  // repeated int32 GangCard = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->gangcard_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->gangcard(i));
    }
    total_size += 1 * this->gangcard_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GangScore::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GangScore* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GangScore*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GangScore::MergeFrom(const GangScore& from) {
  GOOGLE_CHECK_NE(&from, this);
  gangcard_.MergeFrom(from.gangcard_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gangtype()) {
      set_gangtype(from.gangtype());
    }
    if (from.has_gang_score()) {
      set_gang_score(from.gang_score());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GangScore::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GangScore::CopyFrom(const GangScore& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GangScore::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  return true;
}

void GangScore::Swap(GangScore* other) {
  if (other != this) {
    std::swap(gangtype_, other->gangtype_);
    gangcard_.Swap(&other->gangcard_);
    std::swap(gang_score_, other->gang_score_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GangScore::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GangScore_descriptor_;
  metadata.reflection = GangScore_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GangInfo::kScoreinfoFieldNumber;
#endif  // !_MSC_VER

GangInfo::GangInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GangInfo::InitAsDefaultInstance() {
}

GangInfo::GangInfo(const GangInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GangInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GangInfo::~GangInfo() {
  SharedDtor();
}

void GangInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GangInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GangInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GangInfo_descriptor_;
}

const GangInfo& GangInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_baohu_2eproto();
  return *default_instance_;
}

GangInfo* GangInfo::default_instance_ = NULL;

GangInfo* GangInfo::New() const {
  return new GangInfo;
}

void GangInfo::Clear() {
  scoreinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GangInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.game.baohu.GangScore scoreinfo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_scoreinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_scoreinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_scoreinfo;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GangInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto.game.baohu.GangScore scoreinfo = 1;
  for (int i = 0; i < this->scoreinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->scoreinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GangInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto.game.baohu.GangScore scoreinfo = 1;
  for (int i = 0; i < this->scoreinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->scoreinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GangInfo::ByteSize() const {
  int total_size = 0;

  // repeated .proto.game.baohu.GangScore scoreinfo = 1;
  total_size += 1 * this->scoreinfo_size();
  for (int i = 0; i < this->scoreinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->scoreinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GangInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GangInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GangInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GangInfo::MergeFrom(const GangInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  scoreinfo_.MergeFrom(from.scoreinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GangInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GangInfo::CopyFrom(const GangInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GangInfo::IsInitialized() const {

  for (int i = 0; i < scoreinfo_size(); i++) {
    if (!this->scoreinfo(i).IsInitialized()) return false;
  }
  return true;
}

void GangInfo::Swap(GangInfo* other) {
  if (other != this) {
    scoreinfo_.Swap(&other->scoreinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GangInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GangInfo_descriptor_;
  metadata.reflection = GangInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BaoHuGameEnd::kHufenFieldNumber;
const int BaoHuGameEnd::kGangfenFieldNumber;
const int BaoHuGameEnd::kNiaofenFieldNumber;
const int BaoHuGameEnd::kLianzhuangfenFieldNumber;
#endif  // !_MSC_VER

BaoHuGameEnd::BaoHuGameEnd()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BaoHuGameEnd::InitAsDefaultInstance() {
}

BaoHuGameEnd::BaoHuGameEnd(const BaoHuGameEnd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BaoHuGameEnd::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BaoHuGameEnd::~BaoHuGameEnd() {
  SharedDtor();
}

void BaoHuGameEnd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BaoHuGameEnd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaoHuGameEnd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BaoHuGameEnd_descriptor_;
}

const BaoHuGameEnd& BaoHuGameEnd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_baohu_2eproto();
  return *default_instance_;
}

BaoHuGameEnd* BaoHuGameEnd::default_instance_ = NULL;

BaoHuGameEnd* BaoHuGameEnd::New() const {
  return new BaoHuGameEnd;
}

void BaoHuGameEnd::Clear() {
  hufen_.Clear();
  gangfen_.Clear();
  niaofen_.Clear();
  lianzhuangfen_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BaoHuGameEnd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 hufen = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hufen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_hufen())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_hufen())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_hufen;
        if (input->ExpectTag(18)) goto parse_gangfen;
        break;
      }

      // repeated .proto.game.baohu.GangInfo gangfen = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_gangfen:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gangfen()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_gangfen;
        if (input->ExpectTag(24)) goto parse_niaofen;
        break;
      }

      // repeated int32 niaofen = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_niaofen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_niaofen())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_niaofen())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_niaofen;
        if (input->ExpectTag(32)) goto parse_lianzhuangfen;
        break;
      }

      // repeated int32 lianzhuangfen = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lianzhuangfen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_lianzhuangfen())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_lianzhuangfen())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_lianzhuangfen;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BaoHuGameEnd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 hufen = 1;
  for (int i = 0; i < this->hufen_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->hufen(i), output);
  }

  // repeated .proto.game.baohu.GangInfo gangfen = 2;
  for (int i = 0; i < this->gangfen_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->gangfen(i), output);
  }

  // repeated int32 niaofen = 3;
  for (int i = 0; i < this->niaofen_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->niaofen(i), output);
  }

  // repeated int32 lianzhuangfen = 4;
  for (int i = 0; i < this->lianzhuangfen_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->lianzhuangfen(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BaoHuGameEnd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 hufen = 1;
  for (int i = 0; i < this->hufen_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->hufen(i), target);
  }

  // repeated .proto.game.baohu.GangInfo gangfen = 2;
  for (int i = 0; i < this->gangfen_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->gangfen(i), target);
  }

  // repeated int32 niaofen = 3;
  for (int i = 0; i < this->niaofen_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->niaofen(i), target);
  }

  // repeated int32 lianzhuangfen = 4;
  for (int i = 0; i < this->lianzhuangfen_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->lianzhuangfen(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BaoHuGameEnd::ByteSize() const {
  int total_size = 0;

  // repeated int32 hufen = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->hufen_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->hufen(i));
    }
    total_size += 1 * this->hufen_size() + data_size;
  }

  // repeated .proto.game.baohu.GangInfo gangfen = 2;
  total_size += 1 * this->gangfen_size();
  for (int i = 0; i < this->gangfen_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gangfen(i));
  }

  // repeated int32 niaofen = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->niaofen_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->niaofen(i));
    }
    total_size += 1 * this->niaofen_size() + data_size;
  }

  // repeated int32 lianzhuangfen = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->lianzhuangfen_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->lianzhuangfen(i));
    }
    total_size += 1 * this->lianzhuangfen_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaoHuGameEnd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BaoHuGameEnd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BaoHuGameEnd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BaoHuGameEnd::MergeFrom(const BaoHuGameEnd& from) {
  GOOGLE_CHECK_NE(&from, this);
  hufen_.MergeFrom(from.hufen_);
  gangfen_.MergeFrom(from.gangfen_);
  niaofen_.MergeFrom(from.niaofen_);
  lianzhuangfen_.MergeFrom(from.lianzhuangfen_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BaoHuGameEnd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaoHuGameEnd::CopyFrom(const BaoHuGameEnd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaoHuGameEnd::IsInitialized() const {

  for (int i = 0; i < gangfen_size(); i++) {
    if (!this->gangfen(i).IsInitialized()) return false;
  }
  return true;
}

void BaoHuGameEnd::Swap(BaoHuGameEnd* other) {
  if (other != this) {
    hufen_.Swap(&other->hufen_);
    gangfen_.Swap(&other->gangfen_);
    niaofen_.Swap(&other->niaofen_);
    lianzhuangfen_.Swap(&other->lianzhuangfen_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BaoHuGameEnd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BaoHuGameEnd_descriptor_;
  metadata.reflection = BaoHuGameEnd_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace baohu
}  // namespace game
}  // namespace proto

// @@protoc_insertion_point(global_scope)
