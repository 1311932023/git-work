// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jinhuagameproto.proto

#ifndef PROTOBUF_jinhuagameproto_2eproto__INCLUDED
#define PROTOBUF_jinhuagameproto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace game {
namespace jhmahjonggame {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_jinhuagameproto_2eproto();
void protobuf_AssignDesc_jinhuagameproto_2eproto();
void protobuf_ShutdownFile_jinhuagameproto_2eproto();

class jhgamescene;
class ReqChoosePiao;
class AckGameStart;
class AckStartPiao;
class AckBroadPiao;
class Fan;
class FanInfo;
class jhmjGameEndInfo;
class ReordInfo;
class GameEndRecord;

// ===================================================================

class jhgamescene : public ::google::protobuf::Message {
 public:
  jhgamescene();
  virtual ~jhgamescene();

  jhgamescene(const jhgamescene& from);

  inline jhgamescene& operator=(const jhgamescene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const jhgamescene& default_instance();

  void Swap(jhgamescene* other);

  // implements Message ----------------------------------------------

  jhgamescene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const jhgamescene& from);
  void MergeFrom(const jhgamescene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 roomType = 1;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomTypeFieldNumber = 1;
  inline ::google::protobuf::int32 roomtype() const;
  inline void set_roomtype(::google::protobuf::int32 value);

  // optional int32 CurJoker = 2;
  inline bool has_curjoker() const;
  inline void clear_curjoker();
  static const int kCurJokerFieldNumber = 2;
  inline ::google::protobuf::int32 curjoker() const;
  inline void set_curjoker(::google::protobuf::int32 value);

  // optional int32 basescore = 3;
  inline bool has_basescore() const;
  inline void clear_basescore();
  static const int kBasescoreFieldNumber = 3;
  inline ::google::protobuf::int32 basescore() const;
  inline void set_basescore(::google::protobuf::int32 value);

  // optional int32 OpType2 = 4;
  inline bool has_optype2() const;
  inline void clear_optype2();
  static const int kOpType2FieldNumber = 4;
  inline ::google::protobuf::int32 optype2() const;
  inline void set_optype2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.jhmahjonggame.jhgamescene)
 private:
  inline void set_has_roomtype();
  inline void clear_has_roomtype();
  inline void set_has_curjoker();
  inline void clear_has_curjoker();
  inline void set_has_basescore();
  inline void clear_has_basescore();
  inline void set_has_optype2();
  inline void clear_has_optype2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roomtype_;
  ::google::protobuf::int32 curjoker_;
  ::google::protobuf::int32 basescore_;
  ::google::protobuf::int32 optype2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_jinhuagameproto_2eproto();
  friend void protobuf_AssignDesc_jinhuagameproto_2eproto();
  friend void protobuf_ShutdownFile_jinhuagameproto_2eproto();

  void InitAsDefaultInstance();
  static jhgamescene* default_instance_;
};
// -------------------------------------------------------------------

class ReqChoosePiao : public ::google::protobuf::Message {
 public:
  ReqChoosePiao();
  virtual ~ReqChoosePiao();

  ReqChoosePiao(const ReqChoosePiao& from);

  inline ReqChoosePiao& operator=(const ReqChoosePiao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqChoosePiao& default_instance();

  void Swap(ReqChoosePiao* other);

  // implements Message ----------------------------------------------

  ReqChoosePiao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqChoosePiao& from);
  void MergeFrom(const ReqChoosePiao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 PiaoNum = 1;
  inline bool has_piaonum() const;
  inline void clear_piaonum();
  static const int kPiaoNumFieldNumber = 1;
  inline ::google::protobuf::int32 piaonum() const;
  inline void set_piaonum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.jhmahjonggame.ReqChoosePiao)
 private:
  inline void set_has_piaonum();
  inline void clear_has_piaonum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 piaonum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jinhuagameproto_2eproto();
  friend void protobuf_AssignDesc_jinhuagameproto_2eproto();
  friend void protobuf_ShutdownFile_jinhuagameproto_2eproto();

  void InitAsDefaultInstance();
  static ReqChoosePiao* default_instance_;
};
// -------------------------------------------------------------------

class AckGameStart : public ::google::protobuf::Message {
 public:
  AckGameStart();
  virtual ~AckGameStart();

  AckGameStart(const AckGameStart& from);

  inline AckGameStart& operator=(const AckGameStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckGameStart& default_instance();

  void Swap(AckGameStart* other);

  // implements Message ----------------------------------------------

  AckGameStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckGameStart& from);
  void MergeFrom(const AckGameStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 bankerid = 1;
  inline bool has_bankerid() const;
  inline void clear_bankerid();
  static const int kBankeridFieldNumber = 1;
  inline ::google::protobuf::int32 bankerid() const;
  inline void set_bankerid(::google::protobuf::int32 value);

  // optional int32 basescore = 2;
  inline bool has_basescore() const;
  inline void clear_basescore();
  static const int kBasescoreFieldNumber = 2;
  inline ::google::protobuf::int32 basescore() const;
  inline void set_basescore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.jhmahjonggame.AckGameStart)
 private:
  inline void set_has_bankerid();
  inline void clear_has_bankerid();
  inline void set_has_basescore();
  inline void clear_has_basescore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bankerid_;
  ::google::protobuf::int32 basescore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jinhuagameproto_2eproto();
  friend void protobuf_AssignDesc_jinhuagameproto_2eproto();
  friend void protobuf_ShutdownFile_jinhuagameproto_2eproto();

  void InitAsDefaultInstance();
  static AckGameStart* default_instance_;
};
// -------------------------------------------------------------------

class AckStartPiao : public ::google::protobuf::Message {
 public:
  AckStartPiao();
  virtual ~AckStartPiao();

  AckStartPiao(const AckStartPiao& from);

  inline AckStartPiao& operator=(const AckStartPiao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckStartPiao& default_instance();

  void Swap(AckStartPiao* other);

  // implements Message ----------------------------------------------

  AckStartPiao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckStartPiao& from);
  void MergeFrom(const AckStartPiao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 piaoNum = 1;
  inline int piaonum_size() const;
  inline void clear_piaonum();
  static const int kPiaoNumFieldNumber = 1;
  inline ::google::protobuf::int32 piaonum(int index) const;
  inline void set_piaonum(int index, ::google::protobuf::int32 value);
  inline void add_piaonum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      piaonum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_piaonum();

  // @@protoc_insertion_point(class_scope:proto.game.jhmahjonggame.AckStartPiao)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > piaonum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jinhuagameproto_2eproto();
  friend void protobuf_AssignDesc_jinhuagameproto_2eproto();
  friend void protobuf_ShutdownFile_jinhuagameproto_2eproto();

  void InitAsDefaultInstance();
  static AckStartPiao* default_instance_;
};
// -------------------------------------------------------------------

class AckBroadPiao : public ::google::protobuf::Message {
 public:
  AckBroadPiao();
  virtual ~AckBroadPiao();

  AckBroadPiao(const AckBroadPiao& from);

  inline AckBroadPiao& operator=(const AckBroadPiao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckBroadPiao& default_instance();

  void Swap(AckBroadPiao* other);

  // implements Message ----------------------------------------------

  AckBroadPiao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckBroadPiao& from);
  void MergeFrom(const AckBroadPiao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chariid = 1;
  inline bool has_chariid() const;
  inline void clear_chariid();
  static const int kChariidFieldNumber = 1;
  inline ::google::protobuf::int32 chariid() const;
  inline void set_chariid(::google::protobuf::int32 value);

  // optional int32 UserPiao = 2;
  inline bool has_userpiao() const;
  inline void clear_userpiao();
  static const int kUserPiaoFieldNumber = 2;
  inline ::google::protobuf::int32 userpiao() const;
  inline void set_userpiao(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.jhmahjonggame.AckBroadPiao)
 private:
  inline void set_has_chariid();
  inline void clear_has_chariid();
  inline void set_has_userpiao();
  inline void clear_has_userpiao();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chariid_;
  ::google::protobuf::int32 userpiao_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jinhuagameproto_2eproto();
  friend void protobuf_AssignDesc_jinhuagameproto_2eproto();
  friend void protobuf_ShutdownFile_jinhuagameproto_2eproto();

  void InitAsDefaultInstance();
  static AckBroadPiao* default_instance_;
};
// -------------------------------------------------------------------

class Fan : public ::google::protobuf::Message {
 public:
  Fan();
  virtual ~Fan();

  Fan(const Fan& from);

  inline Fan& operator=(const Fan& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Fan& default_instance();

  void Swap(Fan* other);

  // implements Message ----------------------------------------------

  Fan* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Fan& from);
  void MergeFrom(const Fan& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 FanType = 1;
  inline bool has_fantype() const;
  inline void clear_fantype();
  static const int kFanTypeFieldNumber = 1;
  inline ::google::protobuf::int32 fantype() const;
  inline void set_fantype(::google::protobuf::int32 value);

  // optional int32 FanNum = 2;
  inline bool has_fannum() const;
  inline void clear_fannum();
  static const int kFanNumFieldNumber = 2;
  inline ::google::protobuf::int32 fannum() const;
  inline void set_fannum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.jhmahjonggame.Fan)
 private:
  inline void set_has_fantype();
  inline void clear_has_fantype();
  inline void set_has_fannum();
  inline void clear_has_fannum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 fantype_;
  ::google::protobuf::int32 fannum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jinhuagameproto_2eproto();
  friend void protobuf_AssignDesc_jinhuagameproto_2eproto();
  friend void protobuf_ShutdownFile_jinhuagameproto_2eproto();

  void InitAsDefaultInstance();
  static Fan* default_instance_;
};
// -------------------------------------------------------------------

class FanInfo : public ::google::protobuf::Message {
 public:
  FanInfo();
  virtual ~FanInfo();

  FanInfo(const FanInfo& from);

  inline FanInfo& operator=(const FanInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FanInfo& default_instance();

  void Swap(FanInfo* other);

  // implements Message ----------------------------------------------

  FanInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FanInfo& from);
  void MergeFrom(const FanInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chairID = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairIDFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // optional int32 remainBanker = 2;
  inline bool has_remainbanker() const;
  inline void clear_remainbanker();
  static const int kRemainBankerFieldNumber = 2;
  inline ::google::protobuf::int32 remainbanker() const;
  inline void set_remainbanker(::google::protobuf::int32 value);

  // optional int32 CurBaseScore = 3;
  inline bool has_curbasescore() const;
  inline void clear_curbasescore();
  static const int kCurBaseScoreFieldNumber = 3;
  inline ::google::protobuf::int32 curbasescore() const;
  inline void set_curbasescore(::google::protobuf::int32 value);

  // optional int32 EndType = 4;
  inline bool has_endtype() const;
  inline void clear_endtype();
  static const int kEndTypeFieldNumber = 4;
  inline ::google::protobuf::int32 endtype() const;
  inline void set_endtype(::google::protobuf::int32 value);

  // optional int32 SpecialType = 5;
  inline bool has_specialtype() const;
  inline void clear_specialtype();
  static const int kSpecialTypeFieldNumber = 5;
  inline ::google::protobuf::int32 specialtype() const;
  inline void set_specialtype(::google::protobuf::int32 value);

  // repeated .proto.game.jhmahjonggame.Fan DetalFan = 6;
  inline int detalfan_size() const;
  inline void clear_detalfan();
  static const int kDetalFanFieldNumber = 6;
  inline const ::proto::game::jhmahjonggame::Fan& detalfan(int index) const;
  inline ::proto::game::jhmahjonggame::Fan* mutable_detalfan(int index);
  inline ::proto::game::jhmahjonggame::Fan* add_detalfan();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::jhmahjonggame::Fan >&
      detalfan() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::jhmahjonggame::Fan >*
      mutable_detalfan();

  // @@protoc_insertion_point(class_scope:proto.game.jhmahjonggame.FanInfo)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_remainbanker();
  inline void clear_has_remainbanker();
  inline void set_has_curbasescore();
  inline void clear_has_curbasescore();
  inline void set_has_endtype();
  inline void clear_has_endtype();
  inline void set_has_specialtype();
  inline void clear_has_specialtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chairid_;
  ::google::protobuf::int32 remainbanker_;
  ::google::protobuf::int32 curbasescore_;
  ::google::protobuf::int32 endtype_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::jhmahjonggame::Fan > detalfan_;
  ::google::protobuf::int32 specialtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_jinhuagameproto_2eproto();
  friend void protobuf_AssignDesc_jinhuagameproto_2eproto();
  friend void protobuf_ShutdownFile_jinhuagameproto_2eproto();

  void InitAsDefaultInstance();
  static FanInfo* default_instance_;
};
// -------------------------------------------------------------------

class jhmjGameEndInfo : public ::google::protobuf::Message {
 public:
  jhmjGameEndInfo();
  virtual ~jhmjGameEndInfo();

  jhmjGameEndInfo(const jhmjGameEndInfo& from);

  inline jhmjGameEndInfo& operator=(const jhmjGameEndInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const jhmjGameEndInfo& default_instance();

  void Swap(jhmjGameEndInfo* other);

  // implements Message ----------------------------------------------

  jhmjGameEndInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const jhmjGameEndInfo& from);
  void MergeFrom(const jhmjGameEndInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.game.jhmahjonggame.FanInfo faninfo = 1;
  inline int faninfo_size() const;
  inline void clear_faninfo();
  static const int kFaninfoFieldNumber = 1;
  inline const ::proto::game::jhmahjonggame::FanInfo& faninfo(int index) const;
  inline ::proto::game::jhmahjonggame::FanInfo* mutable_faninfo(int index);
  inline ::proto::game::jhmahjonggame::FanInfo* add_faninfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::jhmahjonggame::FanInfo >&
      faninfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::jhmahjonggame::FanInfo >*
      mutable_faninfo();

  // repeated int32 HuScore = 2;
  inline int huscore_size() const;
  inline void clear_huscore();
  static const int kHuScoreFieldNumber = 2;
  inline ::google::protobuf::int32 huscore(int index) const;
  inline void set_huscore(int index, ::google::protobuf::int32 value);
  inline void add_huscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      huscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_huscore();

  // @@protoc_insertion_point(class_scope:proto.game.jhmahjonggame.jhmjGameEndInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::game::jhmahjonggame::FanInfo > faninfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > huscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jinhuagameproto_2eproto();
  friend void protobuf_AssignDesc_jinhuagameproto_2eproto();
  friend void protobuf_ShutdownFile_jinhuagameproto_2eproto();

  void InitAsDefaultInstance();
  static jhmjGameEndInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReordInfo : public ::google::protobuf::Message {
 public:
  ReordInfo();
  virtual ~ReordInfo();

  ReordInfo(const ReordInfo& from);

  inline ReordInfo& operator=(const ReordInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReordInfo& default_instance();

  void Swap(ReordInfo* other);

  // implements Message ----------------------------------------------

  ReordInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReordInfo& from);
  void MergeFrom(const ReordInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 paohu_num = 1;
  inline bool has_paohu_num() const;
  inline void clear_paohu_num();
  static const int kPaohuNumFieldNumber = 1;
  inline ::google::protobuf::int32 paohu_num() const;
  inline void set_paohu_num(::google::protobuf::int32 value);

  // optional int32 zimo_num = 2;
  inline bool has_zimo_num() const;
  inline void clear_zimo_num();
  static const int kZimoNumFieldNumber = 2;
  inline ::google::protobuf::int32 zimo_num() const;
  inline void set_zimo_num(::google::protobuf::int32 value);

  // optional int32 dianpao_num = 3;
  inline bool has_dianpao_num() const;
  inline void clear_dianpao_num();
  static const int kDianpaoNumFieldNumber = 3;
  inline ::google::protobuf::int32 dianpao_num() const;
  inline void set_dianpao_num(::google::protobuf::int32 value);

  // optional int32 zhuang_num = 4;
  inline bool has_zhuang_num() const;
  inline void clear_zhuang_num();
  static const int kZhuangNumFieldNumber = 4;
  inline ::google::protobuf::int32 zhuang_num() const;
  inline void set_zhuang_num(::google::protobuf::int32 value);

  // optional int32 totalscore = 5;
  inline bool has_totalscore() const;
  inline void clear_totalscore();
  static const int kTotalscoreFieldNumber = 5;
  inline ::google::protobuf::int32 totalscore() const;
  inline void set_totalscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.jhmahjonggame.ReordInfo)
 private:
  inline void set_has_paohu_num();
  inline void clear_has_paohu_num();
  inline void set_has_zimo_num();
  inline void clear_has_zimo_num();
  inline void set_has_dianpao_num();
  inline void clear_has_dianpao_num();
  inline void set_has_zhuang_num();
  inline void clear_has_zhuang_num();
  inline void set_has_totalscore();
  inline void clear_has_totalscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 paohu_num_;
  ::google::protobuf::int32 zimo_num_;
  ::google::protobuf::int32 dianpao_num_;
  ::google::protobuf::int32 zhuang_num_;
  ::google::protobuf::int32 totalscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_jinhuagameproto_2eproto();
  friend void protobuf_AssignDesc_jinhuagameproto_2eproto();
  friend void protobuf_ShutdownFile_jinhuagameproto_2eproto();

  void InitAsDefaultInstance();
  static ReordInfo* default_instance_;
};
// -------------------------------------------------------------------

class GameEndRecord : public ::google::protobuf::Message {
 public:
  GameEndRecord();
  virtual ~GameEndRecord();

  GameEndRecord(const GameEndRecord& from);

  inline GameEndRecord& operator=(const GameEndRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameEndRecord& default_instance();

  void Swap(GameEndRecord* other);

  // implements Message ----------------------------------------------

  GameEndRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameEndRecord& from);
  void MergeFrom(const GameEndRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.game.jhmahjonggame.ReordInfo UserRecoreInfo = 1;
  inline int userrecoreinfo_size() const;
  inline void clear_userrecoreinfo();
  static const int kUserRecoreInfoFieldNumber = 1;
  inline const ::proto::game::jhmahjonggame::ReordInfo& userrecoreinfo(int index) const;
  inline ::proto::game::jhmahjonggame::ReordInfo* mutable_userrecoreinfo(int index);
  inline ::proto::game::jhmahjonggame::ReordInfo* add_userrecoreinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::jhmahjonggame::ReordInfo >&
      userrecoreinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::jhmahjonggame::ReordInfo >*
      mutable_userrecoreinfo();

  // optional int32 DataTime = 2;
  inline bool has_datatime() const;
  inline void clear_datatime();
  static const int kDataTimeFieldNumber = 2;
  inline ::google::protobuf::int32 datatime() const;
  inline void set_datatime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.jhmahjonggame.GameEndRecord)
 private:
  inline void set_has_datatime();
  inline void clear_has_datatime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::game::jhmahjonggame::ReordInfo > userrecoreinfo_;
  ::google::protobuf::int32 datatime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jinhuagameproto_2eproto();
  friend void protobuf_AssignDesc_jinhuagameproto_2eproto();
  friend void protobuf_ShutdownFile_jinhuagameproto_2eproto();

  void InitAsDefaultInstance();
  static GameEndRecord* default_instance_;
};
// ===================================================================


// ===================================================================

// jhgamescene

// optional int32 roomType = 1;
inline bool jhgamescene::has_roomtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void jhgamescene::set_has_roomtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void jhgamescene::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void jhgamescene::clear_roomtype() {
  roomtype_ = 0;
  clear_has_roomtype();
}
inline ::google::protobuf::int32 jhgamescene::roomtype() const {
  return roomtype_;
}
inline void jhgamescene::set_roomtype(::google::protobuf::int32 value) {
  set_has_roomtype();
  roomtype_ = value;
}

// optional int32 CurJoker = 2;
inline bool jhgamescene::has_curjoker() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void jhgamescene::set_has_curjoker() {
  _has_bits_[0] |= 0x00000002u;
}
inline void jhgamescene::clear_has_curjoker() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void jhgamescene::clear_curjoker() {
  curjoker_ = 0;
  clear_has_curjoker();
}
inline ::google::protobuf::int32 jhgamescene::curjoker() const {
  return curjoker_;
}
inline void jhgamescene::set_curjoker(::google::protobuf::int32 value) {
  set_has_curjoker();
  curjoker_ = value;
}

// optional int32 basescore = 3;
inline bool jhgamescene::has_basescore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void jhgamescene::set_has_basescore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void jhgamescene::clear_has_basescore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void jhgamescene::clear_basescore() {
  basescore_ = 0;
  clear_has_basescore();
}
inline ::google::protobuf::int32 jhgamescene::basescore() const {
  return basescore_;
}
inline void jhgamescene::set_basescore(::google::protobuf::int32 value) {
  set_has_basescore();
  basescore_ = value;
}

// optional int32 OpType2 = 4;
inline bool jhgamescene::has_optype2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void jhgamescene::set_has_optype2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void jhgamescene::clear_has_optype2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void jhgamescene::clear_optype2() {
  optype2_ = 0;
  clear_has_optype2();
}
inline ::google::protobuf::int32 jhgamescene::optype2() const {
  return optype2_;
}
inline void jhgamescene::set_optype2(::google::protobuf::int32 value) {
  set_has_optype2();
  optype2_ = value;
}

// -------------------------------------------------------------------

// ReqChoosePiao

// optional int32 PiaoNum = 1;
inline bool ReqChoosePiao::has_piaonum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqChoosePiao::set_has_piaonum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqChoosePiao::clear_has_piaonum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqChoosePiao::clear_piaonum() {
  piaonum_ = 0;
  clear_has_piaonum();
}
inline ::google::protobuf::int32 ReqChoosePiao::piaonum() const {
  return piaonum_;
}
inline void ReqChoosePiao::set_piaonum(::google::protobuf::int32 value) {
  set_has_piaonum();
  piaonum_ = value;
}

// -------------------------------------------------------------------

// AckGameStart

// required int32 bankerid = 1;
inline bool AckGameStart::has_bankerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckGameStart::set_has_bankerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckGameStart::clear_has_bankerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckGameStart::clear_bankerid() {
  bankerid_ = 0;
  clear_has_bankerid();
}
inline ::google::protobuf::int32 AckGameStart::bankerid() const {
  return bankerid_;
}
inline void AckGameStart::set_bankerid(::google::protobuf::int32 value) {
  set_has_bankerid();
  bankerid_ = value;
}

// optional int32 basescore = 2;
inline bool AckGameStart::has_basescore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckGameStart::set_has_basescore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckGameStart::clear_has_basescore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckGameStart::clear_basescore() {
  basescore_ = 0;
  clear_has_basescore();
}
inline ::google::protobuf::int32 AckGameStart::basescore() const {
  return basescore_;
}
inline void AckGameStart::set_basescore(::google::protobuf::int32 value) {
  set_has_basescore();
  basescore_ = value;
}

// -------------------------------------------------------------------

// AckStartPiao

// repeated int32 piaoNum = 1;
inline int AckStartPiao::piaonum_size() const {
  return piaonum_.size();
}
inline void AckStartPiao::clear_piaonum() {
  piaonum_.Clear();
}
inline ::google::protobuf::int32 AckStartPiao::piaonum(int index) const {
  return piaonum_.Get(index);
}
inline void AckStartPiao::set_piaonum(int index, ::google::protobuf::int32 value) {
  piaonum_.Set(index, value);
}
inline void AckStartPiao::add_piaonum(::google::protobuf::int32 value) {
  piaonum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckStartPiao::piaonum() const {
  return piaonum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckStartPiao::mutable_piaonum() {
  return &piaonum_;
}

// -------------------------------------------------------------------

// AckBroadPiao

// optional int32 chariid = 1;
inline bool AckBroadPiao::has_chariid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckBroadPiao::set_has_chariid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckBroadPiao::clear_has_chariid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckBroadPiao::clear_chariid() {
  chariid_ = 0;
  clear_has_chariid();
}
inline ::google::protobuf::int32 AckBroadPiao::chariid() const {
  return chariid_;
}
inline void AckBroadPiao::set_chariid(::google::protobuf::int32 value) {
  set_has_chariid();
  chariid_ = value;
}

// optional int32 UserPiao = 2;
inline bool AckBroadPiao::has_userpiao() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckBroadPiao::set_has_userpiao() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckBroadPiao::clear_has_userpiao() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckBroadPiao::clear_userpiao() {
  userpiao_ = 0;
  clear_has_userpiao();
}
inline ::google::protobuf::int32 AckBroadPiao::userpiao() const {
  return userpiao_;
}
inline void AckBroadPiao::set_userpiao(::google::protobuf::int32 value) {
  set_has_userpiao();
  userpiao_ = value;
}

// -------------------------------------------------------------------

// Fan

// optional int32 FanType = 1;
inline bool Fan::has_fantype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Fan::set_has_fantype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Fan::clear_has_fantype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Fan::clear_fantype() {
  fantype_ = 0;
  clear_has_fantype();
}
inline ::google::protobuf::int32 Fan::fantype() const {
  return fantype_;
}
inline void Fan::set_fantype(::google::protobuf::int32 value) {
  set_has_fantype();
  fantype_ = value;
}

// optional int32 FanNum = 2;
inline bool Fan::has_fannum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Fan::set_has_fannum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Fan::clear_has_fannum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Fan::clear_fannum() {
  fannum_ = 0;
  clear_has_fannum();
}
inline ::google::protobuf::int32 Fan::fannum() const {
  return fannum_;
}
inline void Fan::set_fannum(::google::protobuf::int32 value) {
  set_has_fannum();
  fannum_ = value;
}

// -------------------------------------------------------------------

// FanInfo

// optional int32 chairID = 1;
inline bool FanInfo::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FanInfo::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FanInfo::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FanInfo::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 FanInfo::chairid() const {
  return chairid_;
}
inline void FanInfo::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// optional int32 remainBanker = 2;
inline bool FanInfo::has_remainbanker() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FanInfo::set_has_remainbanker() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FanInfo::clear_has_remainbanker() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FanInfo::clear_remainbanker() {
  remainbanker_ = 0;
  clear_has_remainbanker();
}
inline ::google::protobuf::int32 FanInfo::remainbanker() const {
  return remainbanker_;
}
inline void FanInfo::set_remainbanker(::google::protobuf::int32 value) {
  set_has_remainbanker();
  remainbanker_ = value;
}

// optional int32 CurBaseScore = 3;
inline bool FanInfo::has_curbasescore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FanInfo::set_has_curbasescore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FanInfo::clear_has_curbasescore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FanInfo::clear_curbasescore() {
  curbasescore_ = 0;
  clear_has_curbasescore();
}
inline ::google::protobuf::int32 FanInfo::curbasescore() const {
  return curbasescore_;
}
inline void FanInfo::set_curbasescore(::google::protobuf::int32 value) {
  set_has_curbasescore();
  curbasescore_ = value;
}

// optional int32 EndType = 4;
inline bool FanInfo::has_endtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FanInfo::set_has_endtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FanInfo::clear_has_endtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FanInfo::clear_endtype() {
  endtype_ = 0;
  clear_has_endtype();
}
inline ::google::protobuf::int32 FanInfo::endtype() const {
  return endtype_;
}
inline void FanInfo::set_endtype(::google::protobuf::int32 value) {
  set_has_endtype();
  endtype_ = value;
}

// optional int32 SpecialType = 5;
inline bool FanInfo::has_specialtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FanInfo::set_has_specialtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FanInfo::clear_has_specialtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FanInfo::clear_specialtype() {
  specialtype_ = 0;
  clear_has_specialtype();
}
inline ::google::protobuf::int32 FanInfo::specialtype() const {
  return specialtype_;
}
inline void FanInfo::set_specialtype(::google::protobuf::int32 value) {
  set_has_specialtype();
  specialtype_ = value;
}

// repeated .proto.game.jhmahjonggame.Fan DetalFan = 6;
inline int FanInfo::detalfan_size() const {
  return detalfan_.size();
}
inline void FanInfo::clear_detalfan() {
  detalfan_.Clear();
}
inline const ::proto::game::jhmahjonggame::Fan& FanInfo::detalfan(int index) const {
  return detalfan_.Get(index);
}
inline ::proto::game::jhmahjonggame::Fan* FanInfo::mutable_detalfan(int index) {
  return detalfan_.Mutable(index);
}
inline ::proto::game::jhmahjonggame::Fan* FanInfo::add_detalfan() {
  return detalfan_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::jhmahjonggame::Fan >&
FanInfo::detalfan() const {
  return detalfan_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::jhmahjonggame::Fan >*
FanInfo::mutable_detalfan() {
  return &detalfan_;
}

// -------------------------------------------------------------------

// jhmjGameEndInfo

// repeated .proto.game.jhmahjonggame.FanInfo faninfo = 1;
inline int jhmjGameEndInfo::faninfo_size() const {
  return faninfo_.size();
}
inline void jhmjGameEndInfo::clear_faninfo() {
  faninfo_.Clear();
}
inline const ::proto::game::jhmahjonggame::FanInfo& jhmjGameEndInfo::faninfo(int index) const {
  return faninfo_.Get(index);
}
inline ::proto::game::jhmahjonggame::FanInfo* jhmjGameEndInfo::mutable_faninfo(int index) {
  return faninfo_.Mutable(index);
}
inline ::proto::game::jhmahjonggame::FanInfo* jhmjGameEndInfo::add_faninfo() {
  return faninfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::jhmahjonggame::FanInfo >&
jhmjGameEndInfo::faninfo() const {
  return faninfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::jhmahjonggame::FanInfo >*
jhmjGameEndInfo::mutable_faninfo() {
  return &faninfo_;
}

// repeated int32 HuScore = 2;
inline int jhmjGameEndInfo::huscore_size() const {
  return huscore_.size();
}
inline void jhmjGameEndInfo::clear_huscore() {
  huscore_.Clear();
}
inline ::google::protobuf::int32 jhmjGameEndInfo::huscore(int index) const {
  return huscore_.Get(index);
}
inline void jhmjGameEndInfo::set_huscore(int index, ::google::protobuf::int32 value) {
  huscore_.Set(index, value);
}
inline void jhmjGameEndInfo::add_huscore(::google::protobuf::int32 value) {
  huscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
jhmjGameEndInfo::huscore() const {
  return huscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
jhmjGameEndInfo::mutable_huscore() {
  return &huscore_;
}

// -------------------------------------------------------------------

// ReordInfo

// optional int32 paohu_num = 1;
inline bool ReordInfo::has_paohu_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReordInfo::set_has_paohu_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReordInfo::clear_has_paohu_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReordInfo::clear_paohu_num() {
  paohu_num_ = 0;
  clear_has_paohu_num();
}
inline ::google::protobuf::int32 ReordInfo::paohu_num() const {
  return paohu_num_;
}
inline void ReordInfo::set_paohu_num(::google::protobuf::int32 value) {
  set_has_paohu_num();
  paohu_num_ = value;
}

// optional int32 zimo_num = 2;
inline bool ReordInfo::has_zimo_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReordInfo::set_has_zimo_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReordInfo::clear_has_zimo_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReordInfo::clear_zimo_num() {
  zimo_num_ = 0;
  clear_has_zimo_num();
}
inline ::google::protobuf::int32 ReordInfo::zimo_num() const {
  return zimo_num_;
}
inline void ReordInfo::set_zimo_num(::google::protobuf::int32 value) {
  set_has_zimo_num();
  zimo_num_ = value;
}

// optional int32 dianpao_num = 3;
inline bool ReordInfo::has_dianpao_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReordInfo::set_has_dianpao_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReordInfo::clear_has_dianpao_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReordInfo::clear_dianpao_num() {
  dianpao_num_ = 0;
  clear_has_dianpao_num();
}
inline ::google::protobuf::int32 ReordInfo::dianpao_num() const {
  return dianpao_num_;
}
inline void ReordInfo::set_dianpao_num(::google::protobuf::int32 value) {
  set_has_dianpao_num();
  dianpao_num_ = value;
}

// optional int32 zhuang_num = 4;
inline bool ReordInfo::has_zhuang_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReordInfo::set_has_zhuang_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReordInfo::clear_has_zhuang_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReordInfo::clear_zhuang_num() {
  zhuang_num_ = 0;
  clear_has_zhuang_num();
}
inline ::google::protobuf::int32 ReordInfo::zhuang_num() const {
  return zhuang_num_;
}
inline void ReordInfo::set_zhuang_num(::google::protobuf::int32 value) {
  set_has_zhuang_num();
  zhuang_num_ = value;
}

// optional int32 totalscore = 5;
inline bool ReordInfo::has_totalscore() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReordInfo::set_has_totalscore() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReordInfo::clear_has_totalscore() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReordInfo::clear_totalscore() {
  totalscore_ = 0;
  clear_has_totalscore();
}
inline ::google::protobuf::int32 ReordInfo::totalscore() const {
  return totalscore_;
}
inline void ReordInfo::set_totalscore(::google::protobuf::int32 value) {
  set_has_totalscore();
  totalscore_ = value;
}

// -------------------------------------------------------------------

// GameEndRecord

// repeated .proto.game.jhmahjonggame.ReordInfo UserRecoreInfo = 1;
inline int GameEndRecord::userrecoreinfo_size() const {
  return userrecoreinfo_.size();
}
inline void GameEndRecord::clear_userrecoreinfo() {
  userrecoreinfo_.Clear();
}
inline const ::proto::game::jhmahjonggame::ReordInfo& GameEndRecord::userrecoreinfo(int index) const {
  return userrecoreinfo_.Get(index);
}
inline ::proto::game::jhmahjonggame::ReordInfo* GameEndRecord::mutable_userrecoreinfo(int index) {
  return userrecoreinfo_.Mutable(index);
}
inline ::proto::game::jhmahjonggame::ReordInfo* GameEndRecord::add_userrecoreinfo() {
  return userrecoreinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::jhmahjonggame::ReordInfo >&
GameEndRecord::userrecoreinfo() const {
  return userrecoreinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::jhmahjonggame::ReordInfo >*
GameEndRecord::mutable_userrecoreinfo() {
  return &userrecoreinfo_;
}

// optional int32 DataTime = 2;
inline bool GameEndRecord::has_datatime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameEndRecord::set_has_datatime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameEndRecord::clear_has_datatime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameEndRecord::clear_datatime() {
  datatime_ = 0;
  clear_has_datatime();
}
inline ::google::protobuf::int32 GameEndRecord::datatime() const {
  return datatime_;
}
inline void GameEndRecord::set_datatime(::google::protobuf::int32 value) {
  set_has_datatime();
  datatime_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace jhmahjonggame
}  // namespace game
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_jinhuagameproto_2eproto__INCLUDED
