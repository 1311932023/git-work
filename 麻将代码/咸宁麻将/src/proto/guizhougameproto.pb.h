// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: guizhougameproto.proto

#ifndef PROTOBUF_guizhougameproto_2eproto__INCLUDED
#define PROTOBUF_guizhougameproto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace game {
namespace guizhou {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_guizhougameproto_2eproto();
void protobuf_AssignDesc_guizhougameproto_2eproto();
void protobuf_ShutdownFile_guizhougameproto_2eproto();

class tagHuInfo;
class tagListenInfo;
class AckJiPaiOp;
class tagJiInfo;
class tagSimpleJiInfo;
class tagAllJiPais;
class JiEndInfo;
class tagGuiZhouEndInfo;
class AckBaoTingSucc;
class tagBaoTing;
class tagLockCard;
class tagGuiZhouTableInfo;
class tagGuiZhouGang;
class tagGuiZhouOutCard;
class tagGuiZhouOpResult;

enum TianTingState {
  BAO_0 = 0,
  RUAN_BAO_TING = 1,
  YING_BAO_TING = 2,
  RUAN_BAO_SUCC = 3,
  YING_BAO_SUCC = 4,
  RUAN_BAO_CANCEL = 5,
  YING_BAO_CANCEL = 6
};
bool TianTingState_IsValid(int value);
const TianTingState TianTingState_MIN = BAO_0;
const TianTingState TianTingState_MAX = YING_BAO_CANCEL;
const int TianTingState_ARRAYSIZE = TianTingState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TianTingState_descriptor();
inline const ::std::string& TianTingState_Name(TianTingState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TianTingState_descriptor(), value);
}
inline bool TianTingState_Parse(
    const ::std::string& name, TianTingState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TianTingState>(
    TianTingState_descriptor(), name, value);
}
enum JiType {
  JI_0 = 0,
  CHONG_FENG_JI = 1,
  ZE_REN_JI = 2,
  CHONG_FENG_WU_GU_JI = 3,
  ZE_REN_WU_GU_JI = 4,
  JIN_CHONG_FENG_JI = 5,
  JIN_ZE_REN_JI = 6,
  JIN_CHONG_FENG_WU_GU_JI = 7,
  JIN_ZE_REN_WU_GU_JI = 8,
  XIN_QI_JI = 9,
  FAN_PAI_JI = 10,
  JI_DIAN_PAO = 11,
  JI_ZI_MO = 12,
  JI_LIAN_ZHUANG = 13,
  JI_ZHI_GANG = 14,
  JI_WANG_GANG = 15,
  JI_AN_GANG = 16,
  JI_HAN_BAO_DOU = 17,
  JI_QIANG_GANG_HU = 18,
  JI_GANG_HOU_PAO = 19,
  JI_SHAO_JI = 20,
  JI_RUAN_BAO = 21,
  JI_YING_BAO = 22,
  JI_SHA_BAO = 23,
  JT_YAO_JI = 24,
  JT_WU_GU_JI = 25,
  JT_JIN_YAO_JI = 26,
  JT_JIN_WU_GU_JI = 27,
  JI_GANG_SHANG_HUA = 28,
  JT_YAO_BAI_JI = 29,
  JT_BEN_JI = 30,
  JT_ZE_REN_GANG_BAO_DOU = 31,
  JT_ZE_REN_WU_GU_GANG_BAO_DOU = 32,
  JIN_FAN_PAI_JI = 33,
  JIN_YAO_BAI_JI = 34,
  JIN_BEN_JI = 35,
  JIN_XIN_QI_JI = 36,
  FAN_BIAN_ZHANG = 37,
  FAN_KA_ZHANG = 38,
  FAN_DA_KUAN_ZHANG = 39,
  FAN_YUAN_QUE = 40,
  FAN_WEI_QUE_YI_MEN = 41,
  FAN_HAI_DI_LAO_YUE = 42,
  FAN_HAI_DI_PAO = 43,
  FAN_TIAN_HU = 44,
  FAN_DI_HU = 45,
  FAN_DAN_DIAO_JIANG = 46
};
bool JiType_IsValid(int value);
const JiType JiType_MIN = JI_0;
const JiType JiType_MAX = FAN_DAN_DIAO_JIANG;
const int JiType_ARRAYSIZE = JiType_MAX + 1;

const ::google::protobuf::EnumDescriptor* JiType_descriptor();
inline const ::std::string& JiType_Name(JiType value) {
  return ::google::protobuf::internal::NameOfEnum(
    JiType_descriptor(), value);
}
inline bool JiType_Parse(
    const ::std::string& name, JiType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JiType>(
    JiType_descriptor(), name, value);
}
// ===================================================================

class tagHuInfo : public ::google::protobuf::Message {
 public:
  tagHuInfo();
  virtual ~tagHuInfo();

  tagHuInfo(const tagHuInfo& from);

  inline tagHuInfo& operator=(const tagHuInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagHuInfo& default_instance();

  void Swap(tagHuInfo* other);

  // implements Message ----------------------------------------------

  tagHuInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagHuInfo& from);
  void MergeFrom(const tagHuInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Card = 1;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 1;
  inline ::google::protobuf::int32 card() const;
  inline void set_card(::google::protobuf::int32 value);

  // optional int32 LeftNum = 2;
  inline bool has_leftnum() const;
  inline void clear_leftnum();
  static const int kLeftNumFieldNumber = 2;
  inline ::google::protobuf::int32 leftnum() const;
  inline void set_leftnum(::google::protobuf::int32 value);

  // optional int32 HuFanNum = 3;
  inline bool has_hufannum() const;
  inline void clear_hufannum();
  static const int kHuFanNumFieldNumber = 3;
  inline ::google::protobuf::int32 hufannum() const;
  inline void set_hufannum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.guizhou.tagHuInfo)
 private:
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_leftnum();
  inline void clear_has_leftnum();
  inline void set_has_hufannum();
  inline void clear_has_hufannum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 card_;
  ::google::protobuf::int32 leftnum_;
  ::google::protobuf::int32 hufannum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_guizhougameproto_2eproto();
  friend void protobuf_AssignDesc_guizhougameproto_2eproto();
  friend void protobuf_ShutdownFile_guizhougameproto_2eproto();

  void InitAsDefaultInstance();
  static tagHuInfo* default_instance_;
};
// -------------------------------------------------------------------

class tagListenInfo : public ::google::protobuf::Message {
 public:
  tagListenInfo();
  virtual ~tagListenInfo();

  tagListenInfo(const tagListenInfo& from);

  inline tagListenInfo& operator=(const tagListenInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagListenInfo& default_instance();

  void Swap(tagListenInfo* other);

  // implements Message ----------------------------------------------

  tagListenInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagListenInfo& from);
  void MergeFrom(const tagListenInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 OutCard = 1;
  inline bool has_outcard() const;
  inline void clear_outcard();
  static const int kOutCardFieldNumber = 1;
  inline ::google::protobuf::int32 outcard() const;
  inline void set_outcard(::google::protobuf::int32 value);

  // repeated .proto.game.guizhou.tagHuInfo HuInfo = 2;
  inline int huinfo_size() const;
  inline void clear_huinfo();
  static const int kHuInfoFieldNumber = 2;
  inline const ::proto::game::guizhou::tagHuInfo& huinfo(int index) const;
  inline ::proto::game::guizhou::tagHuInfo* mutable_huinfo(int index);
  inline ::proto::game::guizhou::tagHuInfo* add_huinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagHuInfo >&
      huinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagHuInfo >*
      mutable_huinfo();

  // @@protoc_insertion_point(class_scope:proto.game.guizhou.tagListenInfo)
 private:
  inline void set_has_outcard();
  inline void clear_has_outcard();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagHuInfo > huinfo_;
  ::google::protobuf::int32 outcard_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guizhougameproto_2eproto();
  friend void protobuf_AssignDesc_guizhougameproto_2eproto();
  friend void protobuf_ShutdownFile_guizhougameproto_2eproto();

  void InitAsDefaultInstance();
  static tagListenInfo* default_instance_;
};
// -------------------------------------------------------------------

class AckJiPaiOp : public ::google::protobuf::Message {
 public:
  AckJiPaiOp();
  virtual ~AckJiPaiOp();

  AckJiPaiOp(const AckJiPaiOp& from);

  inline AckJiPaiOp& operator=(const AckJiPaiOp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckJiPaiOp& default_instance();

  void Swap(AckJiPaiOp* other);

  // implements Message ----------------------------------------------

  AckJiPaiOp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckJiPaiOp& from);
  void MergeFrom(const AckJiPaiOp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ChairID = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairIDFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // required .proto.game.guizhou.JiType JiState = 2;
  inline bool has_jistate() const;
  inline void clear_jistate();
  static const int kJiStateFieldNumber = 2;
  inline ::proto::game::guizhou::JiType jistate() const;
  inline void set_jistate(::proto::game::guizhou::JiType value);

  // @@protoc_insertion_point(class_scope:proto.game.guizhou.AckJiPaiOp)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_jistate();
  inline void clear_has_jistate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chairid_;
  int jistate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guizhougameproto_2eproto();
  friend void protobuf_AssignDesc_guizhougameproto_2eproto();
  friend void protobuf_ShutdownFile_guizhougameproto_2eproto();

  void InitAsDefaultInstance();
  static AckJiPaiOp* default_instance_;
};
// -------------------------------------------------------------------

class tagJiInfo : public ::google::protobuf::Message {
 public:
  tagJiInfo();
  virtual ~tagJiInfo();

  tagJiInfo(const tagJiInfo& from);

  inline tagJiInfo& operator=(const tagJiInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagJiInfo& default_instance();

  void Swap(tagJiInfo* other);

  // implements Message ----------------------------------------------

  tagJiInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagJiInfo& from);
  void MergeFrom(const tagJiInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Card = 1;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 1;
  inline ::google::protobuf::int32 card() const;
  inline void set_card(::google::protobuf::int32 value);

  // required int32 ChairID = 2;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairIDFieldNumber = 2;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // optional .proto.game.guizhou.JiType JiState = 3;
  inline bool has_jistate() const;
  inline void clear_jistate();
  static const int kJiStateFieldNumber = 3;
  inline ::proto::game::guizhou::JiType jistate() const;
  inline void set_jistate(::proto::game::guizhou::JiType value);

  // optional int32 Score = 4;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 4;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.guizhou.tagJiInfo)
 private:
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_jistate();
  inline void clear_has_jistate();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 card_;
  ::google::protobuf::int32 chairid_;
  int jistate_;
  ::google::protobuf::int32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_guizhougameproto_2eproto();
  friend void protobuf_AssignDesc_guizhougameproto_2eproto();
  friend void protobuf_ShutdownFile_guizhougameproto_2eproto();

  void InitAsDefaultInstance();
  static tagJiInfo* default_instance_;
};
// -------------------------------------------------------------------

class tagSimpleJiInfo : public ::google::protobuf::Message {
 public:
  tagSimpleJiInfo();
  virtual ~tagSimpleJiInfo();

  tagSimpleJiInfo(const tagSimpleJiInfo& from);

  inline tagSimpleJiInfo& operator=(const tagSimpleJiInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagSimpleJiInfo& default_instance();

  void Swap(tagSimpleJiInfo* other);

  // implements Message ----------------------------------------------

  tagSimpleJiInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagSimpleJiInfo& from);
  void MergeFrom(const tagSimpleJiInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 Card = 1;
  inline int card_size() const;
  inline void clear_card();
  static const int kCardFieldNumber = 1;
  inline ::google::protobuf::int32 card(int index) const;
  inline void set_card(int index, ::google::protobuf::int32 value);
  inline void add_card(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      card() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_card();

  // @@protoc_insertion_point(class_scope:proto.game.guizhou.tagSimpleJiInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > card_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guizhougameproto_2eproto();
  friend void protobuf_AssignDesc_guizhougameproto_2eproto();
  friend void protobuf_ShutdownFile_guizhougameproto_2eproto();

  void InitAsDefaultInstance();
  static tagSimpleJiInfo* default_instance_;
};
// -------------------------------------------------------------------

class tagAllJiPais : public ::google::protobuf::Message {
 public:
  tagAllJiPais();
  virtual ~tagAllJiPais();

  tagAllJiPais(const tagAllJiPais& from);

  inline tagAllJiPais& operator=(const tagAllJiPais& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagAllJiPais& default_instance();

  void Swap(tagAllJiPais* other);

  // implements Message ----------------------------------------------

  tagAllJiPais* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagAllJiPais& from);
  void MergeFrom(const tagAllJiPais& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 JiPais = 1;
  inline int jipais_size() const;
  inline void clear_jipais();
  static const int kJiPaisFieldNumber = 1;
  inline ::google::protobuf::int32 jipais(int index) const;
  inline void set_jipais(int index, ::google::protobuf::int32 value);
  inline void add_jipais(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      jipais() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_jipais();

  // repeated bool IsJinJi = 2;
  inline int isjinji_size() const;
  inline void clear_isjinji();
  static const int kIsJinJiFieldNumber = 2;
  inline bool isjinji(int index) const;
  inline void set_isjinji(int index, bool value);
  inline void add_isjinji(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      isjinji() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_isjinji();

  // @@protoc_insertion_point(class_scope:proto.game.guizhou.tagAllJiPais)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > jipais_;
  ::google::protobuf::RepeatedField< bool > isjinji_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guizhougameproto_2eproto();
  friend void protobuf_AssignDesc_guizhougameproto_2eproto();
  friend void protobuf_ShutdownFile_guizhougameproto_2eproto();

  void InitAsDefaultInstance();
  static tagAllJiPais* default_instance_;
};
// -------------------------------------------------------------------

class JiEndInfo : public ::google::protobuf::Message {
 public:
  JiEndInfo();
  virtual ~JiEndInfo();

  JiEndInfo(const JiEndInfo& from);

  inline JiEndInfo& operator=(const JiEndInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JiEndInfo& default_instance();

  void Swap(JiEndInfo* other);

  // implements Message ----------------------------------------------

  JiEndInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JiEndInfo& from);
  void MergeFrom(const JiEndInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.game.guizhou.tagJiInfo JiInfo = 1;
  inline int jiinfo_size() const;
  inline void clear_jiinfo();
  static const int kJiInfoFieldNumber = 1;
  inline const ::proto::game::guizhou::tagJiInfo& jiinfo(int index) const;
  inline ::proto::game::guizhou::tagJiInfo* mutable_jiinfo(int index);
  inline ::proto::game::guizhou::tagJiInfo* add_jiinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagJiInfo >&
      jiinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagJiInfo >*
      mutable_jiinfo();

  // @@protoc_insertion_point(class_scope:proto.game.guizhou.JiEndInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagJiInfo > jiinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guizhougameproto_2eproto();
  friend void protobuf_AssignDesc_guizhougameproto_2eproto();
  friend void protobuf_ShutdownFile_guizhougameproto_2eproto();

  void InitAsDefaultInstance();
  static JiEndInfo* default_instance_;
};
// -------------------------------------------------------------------

class tagGuiZhouEndInfo : public ::google::protobuf::Message {
 public:
  tagGuiZhouEndInfo();
  virtual ~tagGuiZhouEndInfo();

  tagGuiZhouEndInfo(const tagGuiZhouEndInfo& from);

  inline tagGuiZhouEndInfo& operator=(const tagGuiZhouEndInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagGuiZhouEndInfo& default_instance();

  void Swap(tagGuiZhouEndInfo* other);

  // implements Message ----------------------------------------------

  tagGuiZhouEndInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagGuiZhouEndInfo& from);
  void MergeFrom(const tagGuiZhouEndInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 JiNums = 1;
  inline int jinums_size() const;
  inline void clear_jinums();
  static const int kJiNumsFieldNumber = 1;
  inline ::google::protobuf::int32 jinums(int index) const;
  inline void set_jinums(int index, ::google::protobuf::int32 value);
  inline void add_jinums(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      jinums() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_jinums();

  // repeated int32 JiScores = 2;
  inline int jiscores_size() const;
  inline void clear_jiscores();
  static const int kJiScoresFieldNumber = 2;
  inline ::google::protobuf::int32 jiscores(int index) const;
  inline void set_jiscores(int index, ::google::protobuf::int32 value);
  inline void add_jiscores(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      jiscores() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_jiscores();

  // optional bool IsCheckDaJiao = 3;
  inline bool has_ischeckdajiao() const;
  inline void clear_ischeckdajiao();
  static const int kIsCheckDaJiaoFieldNumber = 3;
  inline bool ischeckdajiao() const;
  inline void set_ischeckdajiao(bool value);

  // repeated int32 HuFanType = 4;
  inline int hufantype_size() const;
  inline void clear_hufantype();
  static const int kHuFanTypeFieldNumber = 4;
  inline ::google::protobuf::int32 hufantype(int index) const;
  inline void set_hufantype(int index, ::google::protobuf::int32 value);
  inline void add_hufantype(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      hufantype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_hufantype();

  // repeated int32 HuFanNums = 5;
  inline int hufannums_size() const;
  inline void clear_hufannums();
  static const int kHuFanNumsFieldNumber = 5;
  inline ::google::protobuf::int32 hufannums(int index) const;
  inline void set_hufannums(int index, ::google::protobuf::int32 value);
  inline void add_hufannums(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      hufannums() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_hufannums();

  // repeated .proto.game.guizhou.tagAllJiPais AllJiPais = 6;
  inline int alljipais_size() const;
  inline void clear_alljipais();
  static const int kAllJiPaisFieldNumber = 6;
  inline const ::proto::game::guizhou::tagAllJiPais& alljipais(int index) const;
  inline ::proto::game::guizhou::tagAllJiPais* mutable_alljipais(int index);
  inline ::proto::game::guizhou::tagAllJiPais* add_alljipais();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagAllJiPais >&
      alljipais() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagAllJiPais >*
      mutable_alljipais();

  // optional int32 ChongFengJiID = 7;
  inline bool has_chongfengjiid() const;
  inline void clear_chongfengjiid();
  static const int kChongFengJiIDFieldNumber = 7;
  inline ::google::protobuf::int32 chongfengjiid() const;
  inline void set_chongfengjiid(::google::protobuf::int32 value);

  // optional int32 ZeRenJiID = 8;
  inline bool has_zerenjiid() const;
  inline void clear_zerenjiid();
  static const int kZeRenJiIDFieldNumber = 8;
  inline ::google::protobuf::int32 zerenjiid() const;
  inline void set_zerenjiid(::google::protobuf::int32 value);

  // optional bool IsBaoJi = 9;
  inline bool has_isbaoji() const;
  inline void clear_isbaoji();
  static const int kIsBaoJiFieldNumber = 9;
  inline bool isbaoji() const;
  inline void set_isbaoji(bool value);

  // repeated bool IsJiaoPai = 10;
  inline int isjiaopai_size() const;
  inline void clear_isjiaopai();
  static const int kIsJiaoPaiFieldNumber = 10;
  inline bool isjiaopai(int index) const;
  inline void set_isjiaopai(int index, bool value);
  inline void add_isjiaopai(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      isjiaopai() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_isjiaopai();

  // optional int32 FanJipai = 11;
  inline bool has_fanjipai() const;
  inline void clear_fanjipai();
  static const int kFanJipaiFieldNumber = 11;
  inline ::google::protobuf::int32 fanjipai() const;
  inline void set_fanjipai(::google::protobuf::int32 value);

  // repeated .proto.game.guizhou.tagSimpleJiInfo ShowJi = 12;
  inline int showji_size() const;
  inline void clear_showji();
  static const int kShowJiFieldNumber = 12;
  inline const ::proto::game::guizhou::tagSimpleJiInfo& showji(int index) const;
  inline ::proto::game::guizhou::tagSimpleJiInfo* mutable_showji(int index);
  inline ::proto::game::guizhou::tagSimpleJiInfo* add_showji();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagSimpleJiInfo >&
      showji() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagSimpleJiInfo >*
      mutable_showji();

  // repeated .proto.game.guizhou.JiEndInfo JiInfo = 13;
  inline int jiinfo_size() const;
  inline void clear_jiinfo();
  static const int kJiInfoFieldNumber = 13;
  inline const ::proto::game::guizhou::JiEndInfo& jiinfo(int index) const;
  inline ::proto::game::guizhou::JiEndInfo* mutable_jiinfo(int index);
  inline ::proto::game::guizhou::JiEndInfo* add_jiinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::JiEndInfo >&
      jiinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::JiEndInfo >*
      mutable_jiinfo();

  // optional int32 IsShowJiPai = 14;
  inline bool has_isshowjipai() const;
  inline void clear_isshowjipai();
  static const int kIsShowJiPaiFieldNumber = 14;
  inline ::google::protobuf::int32 isshowjipai() const;
  inline void set_isshowjipai(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.guizhou.tagGuiZhouEndInfo)
 private:
  inline void set_has_ischeckdajiao();
  inline void clear_has_ischeckdajiao();
  inline void set_has_chongfengjiid();
  inline void clear_has_chongfengjiid();
  inline void set_has_zerenjiid();
  inline void clear_has_zerenjiid();
  inline void set_has_isbaoji();
  inline void clear_has_isbaoji();
  inline void set_has_fanjipai();
  inline void clear_has_fanjipai();
  inline void set_has_isshowjipai();
  inline void clear_has_isshowjipai();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > jinums_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > jiscores_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > hufantype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > hufannums_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagAllJiPais > alljipais_;
  bool ischeckdajiao_;
  bool isbaoji_;
  ::google::protobuf::int32 chongfengjiid_;
  ::google::protobuf::int32 zerenjiid_;
  ::google::protobuf::int32 fanjipai_;
  ::google::protobuf::RepeatedField< bool > isjiaopai_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagSimpleJiInfo > showji_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::JiEndInfo > jiinfo_;
  ::google::protobuf::int32 isshowjipai_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_guizhougameproto_2eproto();
  friend void protobuf_AssignDesc_guizhougameproto_2eproto();
  friend void protobuf_ShutdownFile_guizhougameproto_2eproto();

  void InitAsDefaultInstance();
  static tagGuiZhouEndInfo* default_instance_;
};
// -------------------------------------------------------------------

class AckBaoTingSucc : public ::google::protobuf::Message {
 public:
  AckBaoTingSucc();
  virtual ~AckBaoTingSucc();

  AckBaoTingSucc(const AckBaoTingSucc& from);

  inline AckBaoTingSucc& operator=(const AckBaoTingSucc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckBaoTingSucc& default_instance();

  void Swap(AckBaoTingSucc* other);

  // implements Message ----------------------------------------------

  AckBaoTingSucc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckBaoTingSucc& from);
  void MergeFrom(const AckBaoTingSucc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ChairID = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairIDFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // optional .proto.game.guizhou.TianTingState TingState = 2;
  inline bool has_tingstate() const;
  inline void clear_tingstate();
  static const int kTingStateFieldNumber = 2;
  inline ::proto::game::guizhou::TianTingState tingstate() const;
  inline void set_tingstate(::proto::game::guizhou::TianTingState value);

  // repeated .proto.game.guizhou.tagListenInfo ListenInfo = 3;
  inline int listeninfo_size() const;
  inline void clear_listeninfo();
  static const int kListenInfoFieldNumber = 3;
  inline const ::proto::game::guizhou::tagListenInfo& listeninfo(int index) const;
  inline ::proto::game::guizhou::tagListenInfo* mutable_listeninfo(int index);
  inline ::proto::game::guizhou::tagListenInfo* add_listeninfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagListenInfo >&
      listeninfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagListenInfo >*
      mutable_listeninfo();

  // @@protoc_insertion_point(class_scope:proto.game.guizhou.AckBaoTingSucc)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_tingstate();
  inline void clear_has_tingstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chairid_;
  int tingstate_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagListenInfo > listeninfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_guizhougameproto_2eproto();
  friend void protobuf_AssignDesc_guizhougameproto_2eproto();
  friend void protobuf_ShutdownFile_guizhougameproto_2eproto();

  void InitAsDefaultInstance();
  static AckBaoTingSucc* default_instance_;
};
// -------------------------------------------------------------------

class tagBaoTing : public ::google::protobuf::Message {
 public:
  tagBaoTing();
  virtual ~tagBaoTing();

  tagBaoTing(const tagBaoTing& from);

  inline tagBaoTing& operator=(const tagBaoTing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagBaoTing& default_instance();

  void Swap(tagBaoTing* other);

  // implements Message ----------------------------------------------

  tagBaoTing* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagBaoTing& from);
  void MergeFrom(const tagBaoTing& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ChairID = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairIDFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // optional .proto.game.guizhou.TianTingState TingState = 2;
  inline bool has_tingstate() const;
  inline void clear_tingstate();
  static const int kTingStateFieldNumber = 2;
  inline ::proto::game::guizhou::TianTingState tingstate() const;
  inline void set_tingstate(::proto::game::guizhou::TianTingState value);

  // @@protoc_insertion_point(class_scope:proto.game.guizhou.tagBaoTing)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_tingstate();
  inline void clear_has_tingstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chairid_;
  int tingstate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guizhougameproto_2eproto();
  friend void protobuf_AssignDesc_guizhougameproto_2eproto();
  friend void protobuf_ShutdownFile_guizhougameproto_2eproto();

  void InitAsDefaultInstance();
  static tagBaoTing* default_instance_;
};
// -------------------------------------------------------------------

class tagLockCard : public ::google::protobuf::Message {
 public:
  tagLockCard();
  virtual ~tagLockCard();

  tagLockCard(const tagLockCard& from);

  inline tagLockCard& operator=(const tagLockCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagLockCard& default_instance();

  void Swap(tagLockCard* other);

  // implements Message ----------------------------------------------

  tagLockCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagLockCard& from);
  void MergeFrom(const tagLockCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ChairID = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairIDFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // required bool Locked = 2;
  inline bool has_locked() const;
  inline void clear_locked();
  static const int kLockedFieldNumber = 2;
  inline bool locked() const;
  inline void set_locked(bool value);

  // @@protoc_insertion_point(class_scope:proto.game.guizhou.tagLockCard)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_locked();
  inline void clear_has_locked();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chairid_;
  bool locked_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guizhougameproto_2eproto();
  friend void protobuf_AssignDesc_guizhougameproto_2eproto();
  friend void protobuf_ShutdownFile_guizhougameproto_2eproto();

  void InitAsDefaultInstance();
  static tagLockCard* default_instance_;
};
// -------------------------------------------------------------------

class tagGuiZhouTableInfo : public ::google::protobuf::Message {
 public:
  tagGuiZhouTableInfo();
  virtual ~tagGuiZhouTableInfo();

  tagGuiZhouTableInfo(const tagGuiZhouTableInfo& from);

  inline tagGuiZhouTableInfo& operator=(const tagGuiZhouTableInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagGuiZhouTableInfo& default_instance();

  void Swap(tagGuiZhouTableInfo* other);

  // implements Message ----------------------------------------------

  tagGuiZhouTableInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagGuiZhouTableInfo& from);
  void MergeFrom(const tagGuiZhouTableInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool IsManTangJi = 1;
  inline bool has_ismantangji() const;
  inline void clear_ismantangji();
  static const int kIsManTangJiFieldNumber = 1;
  inline bool ismantangji() const;
  inline void set_ismantangji(bool value);

  // repeated bool IsBaoTing = 2;
  inline int isbaoting_size() const;
  inline void clear_isbaoting();
  static const int kIsBaoTingFieldNumber = 2;
  inline bool isbaoting(int index) const;
  inline void set_isbaoting(int index, bool value);
  inline void add_isbaoting(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      isbaoting() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_isbaoting();

  // repeated .proto.game.guizhou.AckJiPaiOp PlayerJi = 3;
  inline int playerji_size() const;
  inline void clear_playerji();
  static const int kPlayerJiFieldNumber = 3;
  inline const ::proto::game::guizhou::AckJiPaiOp& playerji(int index) const;
  inline ::proto::game::guizhou::AckJiPaiOp* mutable_playerji(int index);
  inline ::proto::game::guizhou::AckJiPaiOp* add_playerji();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::AckJiPaiOp >&
      playerji() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::AckJiPaiOp >*
      mutable_playerji();

  // optional bool LockCard = 4;
  inline bool has_lockcard() const;
  inline void clear_lockcard();
  static const int kLockCardFieldNumber = 4;
  inline bool lockcard() const;
  inline void set_lockcard(bool value);

  // optional .proto.game.guizhou.AckBaoTingSucc TingOp = 5;
  inline bool has_tingop() const;
  inline void clear_tingop();
  static const int kTingOpFieldNumber = 5;
  inline const ::proto::game::guizhou::AckBaoTingSucc& tingop() const;
  inline ::proto::game::guizhou::AckBaoTingSucc* mutable_tingop();
  inline ::proto::game::guizhou::AckBaoTingSucc* release_tingop();
  inline void set_allocated_tingop(::proto::game::guizhou::AckBaoTingSucc* tingop);

  // @@protoc_insertion_point(class_scope:proto.game.guizhou.tagGuiZhouTableInfo)
 private:
  inline void set_has_ismantangji();
  inline void clear_has_ismantangji();
  inline void set_has_lockcard();
  inline void clear_has_lockcard();
  inline void set_has_tingop();
  inline void clear_has_tingop();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< bool > isbaoting_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::AckJiPaiOp > playerji_;
  ::proto::game::guizhou::AckBaoTingSucc* tingop_;
  bool ismantangji_;
  bool lockcard_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_guizhougameproto_2eproto();
  friend void protobuf_AssignDesc_guizhougameproto_2eproto();
  friend void protobuf_ShutdownFile_guizhougameproto_2eproto();

  void InitAsDefaultInstance();
  static tagGuiZhouTableInfo* default_instance_;
};
// -------------------------------------------------------------------

class tagGuiZhouGang : public ::google::protobuf::Message {
 public:
  tagGuiZhouGang();
  virtual ~tagGuiZhouGang();

  tagGuiZhouGang(const tagGuiZhouGang& from);

  inline tagGuiZhouGang& operator=(const tagGuiZhouGang& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagGuiZhouGang& default_instance();

  void Swap(tagGuiZhouGang* other);

  // implements Message ----------------------------------------------

  tagGuiZhouGang* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagGuiZhouGang& from);
  void MergeFrom(const tagGuiZhouGang& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool IsHanBaoDou = 1;
  inline bool has_ishanbaodou() const;
  inline void clear_ishanbaodou();
  static const int kIsHanBaoDouFieldNumber = 1;
  inline bool ishanbaodou() const;
  inline void set_ishanbaodou(bool value);

  // @@protoc_insertion_point(class_scope:proto.game.guizhou.tagGuiZhouGang)
 private:
  inline void set_has_ishanbaodou();
  inline void clear_has_ishanbaodou();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool ishanbaodou_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guizhougameproto_2eproto();
  friend void protobuf_AssignDesc_guizhougameproto_2eproto();
  friend void protobuf_ShutdownFile_guizhougameproto_2eproto();

  void InitAsDefaultInstance();
  static tagGuiZhouGang* default_instance_;
};
// -------------------------------------------------------------------

class tagGuiZhouOutCard : public ::google::protobuf::Message {
 public:
  tagGuiZhouOutCard();
  virtual ~tagGuiZhouOutCard();

  tagGuiZhouOutCard(const tagGuiZhouOutCard& from);

  inline tagGuiZhouOutCard& operator=(const tagGuiZhouOutCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagGuiZhouOutCard& default_instance();

  void Swap(tagGuiZhouOutCard* other);

  // implements Message ----------------------------------------------

  tagGuiZhouOutCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagGuiZhouOutCard& from);
  void MergeFrom(const tagGuiZhouOutCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool IsChongFengJi = 1;
  inline bool has_ischongfengji() const;
  inline void clear_ischongfengji();
  static const int kIsChongFengJiFieldNumber = 1;
  inline bool ischongfengji() const;
  inline void set_ischongfengji(bool value);

  // @@protoc_insertion_point(class_scope:proto.game.guizhou.tagGuiZhouOutCard)
 private:
  inline void set_has_ischongfengji();
  inline void clear_has_ischongfengji();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool ischongfengji_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guizhougameproto_2eproto();
  friend void protobuf_AssignDesc_guizhougameproto_2eproto();
  friend void protobuf_ShutdownFile_guizhougameproto_2eproto();

  void InitAsDefaultInstance();
  static tagGuiZhouOutCard* default_instance_;
};
// -------------------------------------------------------------------

class tagGuiZhouOpResult : public ::google::protobuf::Message {
 public:
  tagGuiZhouOpResult();
  virtual ~tagGuiZhouOpResult();

  tagGuiZhouOpResult(const tagGuiZhouOpResult& from);

  inline tagGuiZhouOpResult& operator=(const tagGuiZhouOpResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagGuiZhouOpResult& default_instance();

  void Swap(tagGuiZhouOpResult* other);

  // implements Message ----------------------------------------------

  tagGuiZhouOpResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagGuiZhouOpResult& from);
  void MergeFrom(const tagGuiZhouOpResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool IsZeRenJi = 1;
  inline bool has_iszerenji() const;
  inline void clear_iszerenji();
  static const int kIsZeRenJiFieldNumber = 1;
  inline bool iszerenji() const;
  inline void set_iszerenji(bool value);

  // optional int32 ZeRenJiType = 2;
  inline bool has_zerenjitype() const;
  inline void clear_zerenjitype();
  static const int kZeRenJiTypeFieldNumber = 2;
  inline ::google::protobuf::int32 zerenjitype() const;
  inline void set_zerenjitype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.guizhou.tagGuiZhouOpResult)
 private:
  inline void set_has_iszerenji();
  inline void clear_has_iszerenji();
  inline void set_has_zerenjitype();
  inline void clear_has_zerenjitype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool iszerenji_;
  ::google::protobuf::int32 zerenjitype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guizhougameproto_2eproto();
  friend void protobuf_AssignDesc_guizhougameproto_2eproto();
  friend void protobuf_ShutdownFile_guizhougameproto_2eproto();

  void InitAsDefaultInstance();
  static tagGuiZhouOpResult* default_instance_;
};
// ===================================================================


// ===================================================================

// tagHuInfo

// required int32 Card = 1;
inline bool tagHuInfo::has_card() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagHuInfo::set_has_card() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagHuInfo::clear_has_card() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagHuInfo::clear_card() {
  card_ = 0;
  clear_has_card();
}
inline ::google::protobuf::int32 tagHuInfo::card() const {
  return card_;
}
inline void tagHuInfo::set_card(::google::protobuf::int32 value) {
  set_has_card();
  card_ = value;
}

// optional int32 LeftNum = 2;
inline bool tagHuInfo::has_leftnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagHuInfo::set_has_leftnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagHuInfo::clear_has_leftnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagHuInfo::clear_leftnum() {
  leftnum_ = 0;
  clear_has_leftnum();
}
inline ::google::protobuf::int32 tagHuInfo::leftnum() const {
  return leftnum_;
}
inline void tagHuInfo::set_leftnum(::google::protobuf::int32 value) {
  set_has_leftnum();
  leftnum_ = value;
}

// optional int32 HuFanNum = 3;
inline bool tagHuInfo::has_hufannum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tagHuInfo::set_has_hufannum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tagHuInfo::clear_has_hufannum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tagHuInfo::clear_hufannum() {
  hufannum_ = 0;
  clear_has_hufannum();
}
inline ::google::protobuf::int32 tagHuInfo::hufannum() const {
  return hufannum_;
}
inline void tagHuInfo::set_hufannum(::google::protobuf::int32 value) {
  set_has_hufannum();
  hufannum_ = value;
}

// -------------------------------------------------------------------

// tagListenInfo

// required int32 OutCard = 1;
inline bool tagListenInfo::has_outcard() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagListenInfo::set_has_outcard() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagListenInfo::clear_has_outcard() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagListenInfo::clear_outcard() {
  outcard_ = 0;
  clear_has_outcard();
}
inline ::google::protobuf::int32 tagListenInfo::outcard() const {
  return outcard_;
}
inline void tagListenInfo::set_outcard(::google::protobuf::int32 value) {
  set_has_outcard();
  outcard_ = value;
}

// repeated .proto.game.guizhou.tagHuInfo HuInfo = 2;
inline int tagListenInfo::huinfo_size() const {
  return huinfo_.size();
}
inline void tagListenInfo::clear_huinfo() {
  huinfo_.Clear();
}
inline const ::proto::game::guizhou::tagHuInfo& tagListenInfo::huinfo(int index) const {
  return huinfo_.Get(index);
}
inline ::proto::game::guizhou::tagHuInfo* tagListenInfo::mutable_huinfo(int index) {
  return huinfo_.Mutable(index);
}
inline ::proto::game::guizhou::tagHuInfo* tagListenInfo::add_huinfo() {
  return huinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagHuInfo >&
tagListenInfo::huinfo() const {
  return huinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagHuInfo >*
tagListenInfo::mutable_huinfo() {
  return &huinfo_;
}

// -------------------------------------------------------------------

// AckJiPaiOp

// required int32 ChairID = 1;
inline bool AckJiPaiOp::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckJiPaiOp::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckJiPaiOp::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckJiPaiOp::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 AckJiPaiOp::chairid() const {
  return chairid_;
}
inline void AckJiPaiOp::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// required .proto.game.guizhou.JiType JiState = 2;
inline bool AckJiPaiOp::has_jistate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckJiPaiOp::set_has_jistate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckJiPaiOp::clear_has_jistate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckJiPaiOp::clear_jistate() {
  jistate_ = 0;
  clear_has_jistate();
}
inline ::proto::game::guizhou::JiType AckJiPaiOp::jistate() const {
  return static_cast< ::proto::game::guizhou::JiType >(jistate_);
}
inline void AckJiPaiOp::set_jistate(::proto::game::guizhou::JiType value) {
  assert(::proto::game::guizhou::JiType_IsValid(value));
  set_has_jistate();
  jistate_ = value;
}

// -------------------------------------------------------------------

// tagJiInfo

// required int32 Card = 1;
inline bool tagJiInfo::has_card() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagJiInfo::set_has_card() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagJiInfo::clear_has_card() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagJiInfo::clear_card() {
  card_ = 0;
  clear_has_card();
}
inline ::google::protobuf::int32 tagJiInfo::card() const {
  return card_;
}
inline void tagJiInfo::set_card(::google::protobuf::int32 value) {
  set_has_card();
  card_ = value;
}

// required int32 ChairID = 2;
inline bool tagJiInfo::has_chairid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagJiInfo::set_has_chairid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagJiInfo::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagJiInfo::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 tagJiInfo::chairid() const {
  return chairid_;
}
inline void tagJiInfo::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// optional .proto.game.guizhou.JiType JiState = 3;
inline bool tagJiInfo::has_jistate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tagJiInfo::set_has_jistate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tagJiInfo::clear_has_jistate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tagJiInfo::clear_jistate() {
  jistate_ = 0;
  clear_has_jistate();
}
inline ::proto::game::guizhou::JiType tagJiInfo::jistate() const {
  return static_cast< ::proto::game::guizhou::JiType >(jistate_);
}
inline void tagJiInfo::set_jistate(::proto::game::guizhou::JiType value) {
  assert(::proto::game::guizhou::JiType_IsValid(value));
  set_has_jistate();
  jistate_ = value;
}

// optional int32 Score = 4;
inline bool tagJiInfo::has_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void tagJiInfo::set_has_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void tagJiInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void tagJiInfo::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 tagJiInfo::score() const {
  return score_;
}
inline void tagJiInfo::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// tagSimpleJiInfo

// repeated int32 Card = 1;
inline int tagSimpleJiInfo::card_size() const {
  return card_.size();
}
inline void tagSimpleJiInfo::clear_card() {
  card_.Clear();
}
inline ::google::protobuf::int32 tagSimpleJiInfo::card(int index) const {
  return card_.Get(index);
}
inline void tagSimpleJiInfo::set_card(int index, ::google::protobuf::int32 value) {
  card_.Set(index, value);
}
inline void tagSimpleJiInfo::add_card(::google::protobuf::int32 value) {
  card_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagSimpleJiInfo::card() const {
  return card_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagSimpleJiInfo::mutable_card() {
  return &card_;
}

// -------------------------------------------------------------------

// tagAllJiPais

// repeated int32 JiPais = 1;
inline int tagAllJiPais::jipais_size() const {
  return jipais_.size();
}
inline void tagAllJiPais::clear_jipais() {
  jipais_.Clear();
}
inline ::google::protobuf::int32 tagAllJiPais::jipais(int index) const {
  return jipais_.Get(index);
}
inline void tagAllJiPais::set_jipais(int index, ::google::protobuf::int32 value) {
  jipais_.Set(index, value);
}
inline void tagAllJiPais::add_jipais(::google::protobuf::int32 value) {
  jipais_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagAllJiPais::jipais() const {
  return jipais_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagAllJiPais::mutable_jipais() {
  return &jipais_;
}

// repeated bool IsJinJi = 2;
inline int tagAllJiPais::isjinji_size() const {
  return isjinji_.size();
}
inline void tagAllJiPais::clear_isjinji() {
  isjinji_.Clear();
}
inline bool tagAllJiPais::isjinji(int index) const {
  return isjinji_.Get(index);
}
inline void tagAllJiPais::set_isjinji(int index, bool value) {
  isjinji_.Set(index, value);
}
inline void tagAllJiPais::add_isjinji(bool value) {
  isjinji_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
tagAllJiPais::isjinji() const {
  return isjinji_;
}
inline ::google::protobuf::RepeatedField< bool >*
tagAllJiPais::mutable_isjinji() {
  return &isjinji_;
}

// -------------------------------------------------------------------

// JiEndInfo

// repeated .proto.game.guizhou.tagJiInfo JiInfo = 1;
inline int JiEndInfo::jiinfo_size() const {
  return jiinfo_.size();
}
inline void JiEndInfo::clear_jiinfo() {
  jiinfo_.Clear();
}
inline const ::proto::game::guizhou::tagJiInfo& JiEndInfo::jiinfo(int index) const {
  return jiinfo_.Get(index);
}
inline ::proto::game::guizhou::tagJiInfo* JiEndInfo::mutable_jiinfo(int index) {
  return jiinfo_.Mutable(index);
}
inline ::proto::game::guizhou::tagJiInfo* JiEndInfo::add_jiinfo() {
  return jiinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagJiInfo >&
JiEndInfo::jiinfo() const {
  return jiinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagJiInfo >*
JiEndInfo::mutable_jiinfo() {
  return &jiinfo_;
}

// -------------------------------------------------------------------

// tagGuiZhouEndInfo

// repeated int32 JiNums = 1;
inline int tagGuiZhouEndInfo::jinums_size() const {
  return jinums_.size();
}
inline void tagGuiZhouEndInfo::clear_jinums() {
  jinums_.Clear();
}
inline ::google::protobuf::int32 tagGuiZhouEndInfo::jinums(int index) const {
  return jinums_.Get(index);
}
inline void tagGuiZhouEndInfo::set_jinums(int index, ::google::protobuf::int32 value) {
  jinums_.Set(index, value);
}
inline void tagGuiZhouEndInfo::add_jinums(::google::protobuf::int32 value) {
  jinums_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagGuiZhouEndInfo::jinums() const {
  return jinums_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagGuiZhouEndInfo::mutable_jinums() {
  return &jinums_;
}

// repeated int32 JiScores = 2;
inline int tagGuiZhouEndInfo::jiscores_size() const {
  return jiscores_.size();
}
inline void tagGuiZhouEndInfo::clear_jiscores() {
  jiscores_.Clear();
}
inline ::google::protobuf::int32 tagGuiZhouEndInfo::jiscores(int index) const {
  return jiscores_.Get(index);
}
inline void tagGuiZhouEndInfo::set_jiscores(int index, ::google::protobuf::int32 value) {
  jiscores_.Set(index, value);
}
inline void tagGuiZhouEndInfo::add_jiscores(::google::protobuf::int32 value) {
  jiscores_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagGuiZhouEndInfo::jiscores() const {
  return jiscores_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagGuiZhouEndInfo::mutable_jiscores() {
  return &jiscores_;
}

// optional bool IsCheckDaJiao = 3;
inline bool tagGuiZhouEndInfo::has_ischeckdajiao() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tagGuiZhouEndInfo::set_has_ischeckdajiao() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tagGuiZhouEndInfo::clear_has_ischeckdajiao() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tagGuiZhouEndInfo::clear_ischeckdajiao() {
  ischeckdajiao_ = false;
  clear_has_ischeckdajiao();
}
inline bool tagGuiZhouEndInfo::ischeckdajiao() const {
  return ischeckdajiao_;
}
inline void tagGuiZhouEndInfo::set_ischeckdajiao(bool value) {
  set_has_ischeckdajiao();
  ischeckdajiao_ = value;
}

// repeated int32 HuFanType = 4;
inline int tagGuiZhouEndInfo::hufantype_size() const {
  return hufantype_.size();
}
inline void tagGuiZhouEndInfo::clear_hufantype() {
  hufantype_.Clear();
}
inline ::google::protobuf::int32 tagGuiZhouEndInfo::hufantype(int index) const {
  return hufantype_.Get(index);
}
inline void tagGuiZhouEndInfo::set_hufantype(int index, ::google::protobuf::int32 value) {
  hufantype_.Set(index, value);
}
inline void tagGuiZhouEndInfo::add_hufantype(::google::protobuf::int32 value) {
  hufantype_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagGuiZhouEndInfo::hufantype() const {
  return hufantype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagGuiZhouEndInfo::mutable_hufantype() {
  return &hufantype_;
}

// repeated int32 HuFanNums = 5;
inline int tagGuiZhouEndInfo::hufannums_size() const {
  return hufannums_.size();
}
inline void tagGuiZhouEndInfo::clear_hufannums() {
  hufannums_.Clear();
}
inline ::google::protobuf::int32 tagGuiZhouEndInfo::hufannums(int index) const {
  return hufannums_.Get(index);
}
inline void tagGuiZhouEndInfo::set_hufannums(int index, ::google::protobuf::int32 value) {
  hufannums_.Set(index, value);
}
inline void tagGuiZhouEndInfo::add_hufannums(::google::protobuf::int32 value) {
  hufannums_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagGuiZhouEndInfo::hufannums() const {
  return hufannums_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagGuiZhouEndInfo::mutable_hufannums() {
  return &hufannums_;
}

// repeated .proto.game.guizhou.tagAllJiPais AllJiPais = 6;
inline int tagGuiZhouEndInfo::alljipais_size() const {
  return alljipais_.size();
}
inline void tagGuiZhouEndInfo::clear_alljipais() {
  alljipais_.Clear();
}
inline const ::proto::game::guizhou::tagAllJiPais& tagGuiZhouEndInfo::alljipais(int index) const {
  return alljipais_.Get(index);
}
inline ::proto::game::guizhou::tagAllJiPais* tagGuiZhouEndInfo::mutable_alljipais(int index) {
  return alljipais_.Mutable(index);
}
inline ::proto::game::guizhou::tagAllJiPais* tagGuiZhouEndInfo::add_alljipais() {
  return alljipais_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagAllJiPais >&
tagGuiZhouEndInfo::alljipais() const {
  return alljipais_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagAllJiPais >*
tagGuiZhouEndInfo::mutable_alljipais() {
  return &alljipais_;
}

// optional int32 ChongFengJiID = 7;
inline bool tagGuiZhouEndInfo::has_chongfengjiid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void tagGuiZhouEndInfo::set_has_chongfengjiid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void tagGuiZhouEndInfo::clear_has_chongfengjiid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void tagGuiZhouEndInfo::clear_chongfengjiid() {
  chongfengjiid_ = 0;
  clear_has_chongfengjiid();
}
inline ::google::protobuf::int32 tagGuiZhouEndInfo::chongfengjiid() const {
  return chongfengjiid_;
}
inline void tagGuiZhouEndInfo::set_chongfengjiid(::google::protobuf::int32 value) {
  set_has_chongfengjiid();
  chongfengjiid_ = value;
}

// optional int32 ZeRenJiID = 8;
inline bool tagGuiZhouEndInfo::has_zerenjiid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void tagGuiZhouEndInfo::set_has_zerenjiid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void tagGuiZhouEndInfo::clear_has_zerenjiid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void tagGuiZhouEndInfo::clear_zerenjiid() {
  zerenjiid_ = 0;
  clear_has_zerenjiid();
}
inline ::google::protobuf::int32 tagGuiZhouEndInfo::zerenjiid() const {
  return zerenjiid_;
}
inline void tagGuiZhouEndInfo::set_zerenjiid(::google::protobuf::int32 value) {
  set_has_zerenjiid();
  zerenjiid_ = value;
}

// optional bool IsBaoJi = 9;
inline bool tagGuiZhouEndInfo::has_isbaoji() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void tagGuiZhouEndInfo::set_has_isbaoji() {
  _has_bits_[0] |= 0x00000100u;
}
inline void tagGuiZhouEndInfo::clear_has_isbaoji() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void tagGuiZhouEndInfo::clear_isbaoji() {
  isbaoji_ = false;
  clear_has_isbaoji();
}
inline bool tagGuiZhouEndInfo::isbaoji() const {
  return isbaoji_;
}
inline void tagGuiZhouEndInfo::set_isbaoji(bool value) {
  set_has_isbaoji();
  isbaoji_ = value;
}

// repeated bool IsJiaoPai = 10;
inline int tagGuiZhouEndInfo::isjiaopai_size() const {
  return isjiaopai_.size();
}
inline void tagGuiZhouEndInfo::clear_isjiaopai() {
  isjiaopai_.Clear();
}
inline bool tagGuiZhouEndInfo::isjiaopai(int index) const {
  return isjiaopai_.Get(index);
}
inline void tagGuiZhouEndInfo::set_isjiaopai(int index, bool value) {
  isjiaopai_.Set(index, value);
}
inline void tagGuiZhouEndInfo::add_isjiaopai(bool value) {
  isjiaopai_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
tagGuiZhouEndInfo::isjiaopai() const {
  return isjiaopai_;
}
inline ::google::protobuf::RepeatedField< bool >*
tagGuiZhouEndInfo::mutable_isjiaopai() {
  return &isjiaopai_;
}

// optional int32 FanJipai = 11;
inline bool tagGuiZhouEndInfo::has_fanjipai() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void tagGuiZhouEndInfo::set_has_fanjipai() {
  _has_bits_[0] |= 0x00000400u;
}
inline void tagGuiZhouEndInfo::clear_has_fanjipai() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void tagGuiZhouEndInfo::clear_fanjipai() {
  fanjipai_ = 0;
  clear_has_fanjipai();
}
inline ::google::protobuf::int32 tagGuiZhouEndInfo::fanjipai() const {
  return fanjipai_;
}
inline void tagGuiZhouEndInfo::set_fanjipai(::google::protobuf::int32 value) {
  set_has_fanjipai();
  fanjipai_ = value;
}

// repeated .proto.game.guizhou.tagSimpleJiInfo ShowJi = 12;
inline int tagGuiZhouEndInfo::showji_size() const {
  return showji_.size();
}
inline void tagGuiZhouEndInfo::clear_showji() {
  showji_.Clear();
}
inline const ::proto::game::guizhou::tagSimpleJiInfo& tagGuiZhouEndInfo::showji(int index) const {
  return showji_.Get(index);
}
inline ::proto::game::guizhou::tagSimpleJiInfo* tagGuiZhouEndInfo::mutable_showji(int index) {
  return showji_.Mutable(index);
}
inline ::proto::game::guizhou::tagSimpleJiInfo* tagGuiZhouEndInfo::add_showji() {
  return showji_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagSimpleJiInfo >&
tagGuiZhouEndInfo::showji() const {
  return showji_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagSimpleJiInfo >*
tagGuiZhouEndInfo::mutable_showji() {
  return &showji_;
}

// repeated .proto.game.guizhou.JiEndInfo JiInfo = 13;
inline int tagGuiZhouEndInfo::jiinfo_size() const {
  return jiinfo_.size();
}
inline void tagGuiZhouEndInfo::clear_jiinfo() {
  jiinfo_.Clear();
}
inline const ::proto::game::guizhou::JiEndInfo& tagGuiZhouEndInfo::jiinfo(int index) const {
  return jiinfo_.Get(index);
}
inline ::proto::game::guizhou::JiEndInfo* tagGuiZhouEndInfo::mutable_jiinfo(int index) {
  return jiinfo_.Mutable(index);
}
inline ::proto::game::guizhou::JiEndInfo* tagGuiZhouEndInfo::add_jiinfo() {
  return jiinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::JiEndInfo >&
tagGuiZhouEndInfo::jiinfo() const {
  return jiinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::JiEndInfo >*
tagGuiZhouEndInfo::mutable_jiinfo() {
  return &jiinfo_;
}

// optional int32 IsShowJiPai = 14;
inline bool tagGuiZhouEndInfo::has_isshowjipai() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void tagGuiZhouEndInfo::set_has_isshowjipai() {
  _has_bits_[0] |= 0x00002000u;
}
inline void tagGuiZhouEndInfo::clear_has_isshowjipai() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void tagGuiZhouEndInfo::clear_isshowjipai() {
  isshowjipai_ = 0;
  clear_has_isshowjipai();
}
inline ::google::protobuf::int32 tagGuiZhouEndInfo::isshowjipai() const {
  return isshowjipai_;
}
inline void tagGuiZhouEndInfo::set_isshowjipai(::google::protobuf::int32 value) {
  set_has_isshowjipai();
  isshowjipai_ = value;
}

// -------------------------------------------------------------------

// AckBaoTingSucc

// required int32 ChairID = 1;
inline bool AckBaoTingSucc::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckBaoTingSucc::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckBaoTingSucc::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckBaoTingSucc::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 AckBaoTingSucc::chairid() const {
  return chairid_;
}
inline void AckBaoTingSucc::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// optional .proto.game.guizhou.TianTingState TingState = 2;
inline bool AckBaoTingSucc::has_tingstate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckBaoTingSucc::set_has_tingstate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckBaoTingSucc::clear_has_tingstate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckBaoTingSucc::clear_tingstate() {
  tingstate_ = 0;
  clear_has_tingstate();
}
inline ::proto::game::guizhou::TianTingState AckBaoTingSucc::tingstate() const {
  return static_cast< ::proto::game::guizhou::TianTingState >(tingstate_);
}
inline void AckBaoTingSucc::set_tingstate(::proto::game::guizhou::TianTingState value) {
  assert(::proto::game::guizhou::TianTingState_IsValid(value));
  set_has_tingstate();
  tingstate_ = value;
}

// repeated .proto.game.guizhou.tagListenInfo ListenInfo = 3;
inline int AckBaoTingSucc::listeninfo_size() const {
  return listeninfo_.size();
}
inline void AckBaoTingSucc::clear_listeninfo() {
  listeninfo_.Clear();
}
inline const ::proto::game::guizhou::tagListenInfo& AckBaoTingSucc::listeninfo(int index) const {
  return listeninfo_.Get(index);
}
inline ::proto::game::guizhou::tagListenInfo* AckBaoTingSucc::mutable_listeninfo(int index) {
  return listeninfo_.Mutable(index);
}
inline ::proto::game::guizhou::tagListenInfo* AckBaoTingSucc::add_listeninfo() {
  return listeninfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagListenInfo >&
AckBaoTingSucc::listeninfo() const {
  return listeninfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::tagListenInfo >*
AckBaoTingSucc::mutable_listeninfo() {
  return &listeninfo_;
}

// -------------------------------------------------------------------

// tagBaoTing

// required int32 ChairID = 1;
inline bool tagBaoTing::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagBaoTing::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagBaoTing::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagBaoTing::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 tagBaoTing::chairid() const {
  return chairid_;
}
inline void tagBaoTing::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// optional .proto.game.guizhou.TianTingState TingState = 2;
inline bool tagBaoTing::has_tingstate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagBaoTing::set_has_tingstate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagBaoTing::clear_has_tingstate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagBaoTing::clear_tingstate() {
  tingstate_ = 0;
  clear_has_tingstate();
}
inline ::proto::game::guizhou::TianTingState tagBaoTing::tingstate() const {
  return static_cast< ::proto::game::guizhou::TianTingState >(tingstate_);
}
inline void tagBaoTing::set_tingstate(::proto::game::guizhou::TianTingState value) {
  assert(::proto::game::guizhou::TianTingState_IsValid(value));
  set_has_tingstate();
  tingstate_ = value;
}

// -------------------------------------------------------------------

// tagLockCard

// required int32 ChairID = 1;
inline bool tagLockCard::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagLockCard::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagLockCard::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagLockCard::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 tagLockCard::chairid() const {
  return chairid_;
}
inline void tagLockCard::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// required bool Locked = 2;
inline bool tagLockCard::has_locked() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagLockCard::set_has_locked() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagLockCard::clear_has_locked() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagLockCard::clear_locked() {
  locked_ = false;
  clear_has_locked();
}
inline bool tagLockCard::locked() const {
  return locked_;
}
inline void tagLockCard::set_locked(bool value) {
  set_has_locked();
  locked_ = value;
}

// -------------------------------------------------------------------

// tagGuiZhouTableInfo

// optional bool IsManTangJi = 1;
inline bool tagGuiZhouTableInfo::has_ismantangji() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagGuiZhouTableInfo::set_has_ismantangji() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagGuiZhouTableInfo::clear_has_ismantangji() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagGuiZhouTableInfo::clear_ismantangji() {
  ismantangji_ = false;
  clear_has_ismantangji();
}
inline bool tagGuiZhouTableInfo::ismantangji() const {
  return ismantangji_;
}
inline void tagGuiZhouTableInfo::set_ismantangji(bool value) {
  set_has_ismantangji();
  ismantangji_ = value;
}

// repeated bool IsBaoTing = 2;
inline int tagGuiZhouTableInfo::isbaoting_size() const {
  return isbaoting_.size();
}
inline void tagGuiZhouTableInfo::clear_isbaoting() {
  isbaoting_.Clear();
}
inline bool tagGuiZhouTableInfo::isbaoting(int index) const {
  return isbaoting_.Get(index);
}
inline void tagGuiZhouTableInfo::set_isbaoting(int index, bool value) {
  isbaoting_.Set(index, value);
}
inline void tagGuiZhouTableInfo::add_isbaoting(bool value) {
  isbaoting_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
tagGuiZhouTableInfo::isbaoting() const {
  return isbaoting_;
}
inline ::google::protobuf::RepeatedField< bool >*
tagGuiZhouTableInfo::mutable_isbaoting() {
  return &isbaoting_;
}

// repeated .proto.game.guizhou.AckJiPaiOp PlayerJi = 3;
inline int tagGuiZhouTableInfo::playerji_size() const {
  return playerji_.size();
}
inline void tagGuiZhouTableInfo::clear_playerji() {
  playerji_.Clear();
}
inline const ::proto::game::guizhou::AckJiPaiOp& tagGuiZhouTableInfo::playerji(int index) const {
  return playerji_.Get(index);
}
inline ::proto::game::guizhou::AckJiPaiOp* tagGuiZhouTableInfo::mutable_playerji(int index) {
  return playerji_.Mutable(index);
}
inline ::proto::game::guizhou::AckJiPaiOp* tagGuiZhouTableInfo::add_playerji() {
  return playerji_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::AckJiPaiOp >&
tagGuiZhouTableInfo::playerji() const {
  return playerji_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::guizhou::AckJiPaiOp >*
tagGuiZhouTableInfo::mutable_playerji() {
  return &playerji_;
}

// optional bool LockCard = 4;
inline bool tagGuiZhouTableInfo::has_lockcard() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void tagGuiZhouTableInfo::set_has_lockcard() {
  _has_bits_[0] |= 0x00000008u;
}
inline void tagGuiZhouTableInfo::clear_has_lockcard() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void tagGuiZhouTableInfo::clear_lockcard() {
  lockcard_ = false;
  clear_has_lockcard();
}
inline bool tagGuiZhouTableInfo::lockcard() const {
  return lockcard_;
}
inline void tagGuiZhouTableInfo::set_lockcard(bool value) {
  set_has_lockcard();
  lockcard_ = value;
}

// optional .proto.game.guizhou.AckBaoTingSucc TingOp = 5;
inline bool tagGuiZhouTableInfo::has_tingop() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void tagGuiZhouTableInfo::set_has_tingop() {
  _has_bits_[0] |= 0x00000010u;
}
inline void tagGuiZhouTableInfo::clear_has_tingop() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void tagGuiZhouTableInfo::clear_tingop() {
  if (tingop_ != NULL) tingop_->::proto::game::guizhou::AckBaoTingSucc::Clear();
  clear_has_tingop();
}
inline const ::proto::game::guizhou::AckBaoTingSucc& tagGuiZhouTableInfo::tingop() const {
  return tingop_ != NULL ? *tingop_ : *default_instance_->tingop_;
}
inline ::proto::game::guizhou::AckBaoTingSucc* tagGuiZhouTableInfo::mutable_tingop() {
  set_has_tingop();
  if (tingop_ == NULL) tingop_ = new ::proto::game::guizhou::AckBaoTingSucc;
  return tingop_;
}
inline ::proto::game::guizhou::AckBaoTingSucc* tagGuiZhouTableInfo::release_tingop() {
  clear_has_tingop();
  ::proto::game::guizhou::AckBaoTingSucc* temp = tingop_;
  tingop_ = NULL;
  return temp;
}
inline void tagGuiZhouTableInfo::set_allocated_tingop(::proto::game::guizhou::AckBaoTingSucc* tingop) {
  delete tingop_;
  tingop_ = tingop;
  if (tingop) {
    set_has_tingop();
  } else {
    clear_has_tingop();
  }
}

// -------------------------------------------------------------------

// tagGuiZhouGang

// optional bool IsHanBaoDou = 1;
inline bool tagGuiZhouGang::has_ishanbaodou() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagGuiZhouGang::set_has_ishanbaodou() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagGuiZhouGang::clear_has_ishanbaodou() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagGuiZhouGang::clear_ishanbaodou() {
  ishanbaodou_ = false;
  clear_has_ishanbaodou();
}
inline bool tagGuiZhouGang::ishanbaodou() const {
  return ishanbaodou_;
}
inline void tagGuiZhouGang::set_ishanbaodou(bool value) {
  set_has_ishanbaodou();
  ishanbaodou_ = value;
}

// -------------------------------------------------------------------

// tagGuiZhouOutCard

// optional bool IsChongFengJi = 1;
inline bool tagGuiZhouOutCard::has_ischongfengji() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagGuiZhouOutCard::set_has_ischongfengji() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagGuiZhouOutCard::clear_has_ischongfengji() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagGuiZhouOutCard::clear_ischongfengji() {
  ischongfengji_ = false;
  clear_has_ischongfengji();
}
inline bool tagGuiZhouOutCard::ischongfengji() const {
  return ischongfengji_;
}
inline void tagGuiZhouOutCard::set_ischongfengji(bool value) {
  set_has_ischongfengji();
  ischongfengji_ = value;
}

// -------------------------------------------------------------------

// tagGuiZhouOpResult

// optional bool IsZeRenJi = 1;
inline bool tagGuiZhouOpResult::has_iszerenji() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagGuiZhouOpResult::set_has_iszerenji() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagGuiZhouOpResult::clear_has_iszerenji() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagGuiZhouOpResult::clear_iszerenji() {
  iszerenji_ = false;
  clear_has_iszerenji();
}
inline bool tagGuiZhouOpResult::iszerenji() const {
  return iszerenji_;
}
inline void tagGuiZhouOpResult::set_iszerenji(bool value) {
  set_has_iszerenji();
  iszerenji_ = value;
}

// optional int32 ZeRenJiType = 2;
inline bool tagGuiZhouOpResult::has_zerenjitype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagGuiZhouOpResult::set_has_zerenjitype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagGuiZhouOpResult::clear_has_zerenjitype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagGuiZhouOpResult::clear_zerenjitype() {
  zerenjitype_ = 0;
  clear_has_zerenjitype();
}
inline ::google::protobuf::int32 tagGuiZhouOpResult::zerenjitype() const {
  return zerenjitype_;
}
inline void tagGuiZhouOpResult::set_zerenjitype(::google::protobuf::int32 value) {
  set_has_zerenjitype();
  zerenjitype_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace guizhou
}  // namespace game
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::game::guizhou::TianTingState>() {
  return ::proto::game::guizhou::TianTingState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::game::guizhou::JiType>() {
  return ::proto::game::guizhou::JiType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_guizhougameproto_2eproto__INCLUDED
