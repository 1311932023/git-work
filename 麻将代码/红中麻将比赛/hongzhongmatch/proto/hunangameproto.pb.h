// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hunangameproto.proto

#ifndef PROTOBUF_hunangameproto_2eproto__INCLUDED
#define PROTOBUF_hunangameproto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace game {
namespace hunanmj {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_hunangameproto_2eproto();
void protobuf_AssignDesc_hunangameproto_2eproto();
void protobuf_ShutdownFile_hunangameproto_2eproto();

class AckEnSureJoker;
class ReqChoosePiao;
class AckStartPiao;
class AckBroadPiao;
class tagGangHu;
class tagEndGangHu;
class tagHu;
class tagUserHuInfo;
class ReturnGangInfo;
class tagJiangma;
class tagDaShai;
class tagBanInfo;
class tagBanPai;
class tagBanPaiEnd;
class tagGangInfo;
class GangAckOpNotify;
class tagHuInfo;
class tagDaShaiPaiCount;
class tagGang_Zhuapai;
class tagBuinfo;
class tagBuZhang;
class tagUserState;
class tagExternalMsg;
class AckCustomiedInfo;
class tagHuNanGameEnd;
class tagMultiHuInfo;
class AddFanInfo;
class FanInfo;
class tagBuZhangOpResult;
class ReordInfo;
class GameEndRecord;
class RoundScore;
class TotalRoundScore;

enum E_BUZHANG {
  BUZHANG_ZHIGANG = 2,
  BUZHANG_WANGANG = 4,
  BUZHANG_ANGANG = 8
};
bool E_BUZHANG_IsValid(int value);
const E_BUZHANG E_BUZHANG_MIN = BUZHANG_ZHIGANG;
const E_BUZHANG E_BUZHANG_MAX = BUZHANG_ANGANG;
const int E_BUZHANG_ARRAYSIZE = E_BUZHANG_MAX + 1;

const ::google::protobuf::EnumDescriptor* E_BUZHANG_descriptor();
inline const ::std::string& E_BUZHANG_Name(E_BUZHANG value) {
  return ::google::protobuf::internal::NameOfEnum(
    E_BUZHANG_descriptor(), value);
}
inline bool E_BUZHANG_Parse(
    const ::std::string& name, E_BUZHANG* value) {
  return ::google::protobuf::internal::ParseNamedEnum<E_BUZHANG>(
    E_BUZHANG_descriptor(), name, value);
}
enum E_GUI {
  LAIZI_NOJOKER = 0,
  LAIZI_COMMON_JOKER = 1,
  LAIZI_FAN_JOKER = 2,
  LAIZI_FAN_DOUBLE_JOKER = 3,
  LAIZI_HUA_JOKER_4 = 4,
  LAIZI_HUA_JOKER_8 = 5,
  LAIZI_HUA_JOKER_2 = 6,
  LAIZI_HUA_JOKER_6 = 7,
  CARDPOOL_LAST_CARD = 8
};
bool E_GUI_IsValid(int value);
const E_GUI E_GUI_MIN = LAIZI_NOJOKER;
const E_GUI E_GUI_MAX = CARDPOOL_LAST_CARD;
const int E_GUI_ARRAYSIZE = E_GUI_MAX + 1;

const ::google::protobuf::EnumDescriptor* E_GUI_descriptor();
inline const ::std::string& E_GUI_Name(E_GUI value) {
  return ::google::protobuf::internal::NameOfEnum(
    E_GUI_descriptor(), value);
}
inline bool E_GUI_Parse(
    const ::std::string& name, E_GUI* value) {
  return ::google::protobuf::internal::ParseNamedEnum<E_GUI>(
    E_GUI_descriptor(), name, value);
}
enum HUGANG {
  HUGANG_PENG = 1,
  HUGANG_ZHIGANG = 2,
  HUGANG_WANGANG = 4,
  HUGANG_ANGANG = 8,
  HUGANG_HU = 16,
  HUGANG_LISTEN = 32,
  HUGANG_LEFT_CHI = 64,
  HUGANG_CENTER_CHI = 128,
  HUGANG_RIGHT_CHI = 256
};
bool HUGANG_IsValid(int value);
const HUGANG HUGANG_MIN = HUGANG_PENG;
const HUGANG HUGANG_MAX = HUGANG_RIGHT_CHI;
const int HUGANG_ARRAYSIZE = HUGANG_MAX + 1;

const ::google::protobuf::EnumDescriptor* HUGANG_descriptor();
inline const ::std::string& HUGANG_Name(HUGANG value) {
  return ::google::protobuf::internal::NameOfEnum(
    HUGANG_descriptor(), value);
}
inline bool HUGANG_Parse(
    const ::std::string& name, HUGANG* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HUGANG>(
    HUGANG_descriptor(), name, value);
}
enum JiangmaType {
  JIANGMA = 1,
  MOJIJIANGJI = 2,
  ZHUANIAO = 3,
  ZHUA_159 = 4,
  JINNIAO = 5
};
bool JiangmaType_IsValid(int value);
const JiangmaType JiangmaType_MIN = JIANGMA;
const JiangmaType JiangmaType_MAX = JINNIAO;
const int JiangmaType_ARRAYSIZE = JiangmaType_MAX + 1;

const ::google::protobuf::EnumDescriptor* JiangmaType_descriptor();
inline const ::std::string& JiangmaType_Name(JiangmaType value) {
  return ::google::protobuf::internal::NameOfEnum(
    JiangmaType_descriptor(), value);
}
inline bool JiangmaType_Parse(
    const ::std::string& name, JiangmaType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JiangmaType>(
    JiangmaType_descriptor(), name, value);
}
enum HunanLocation {
  HUNAN_CHANGSHA = 1,
  HUNAN_CHENZHOU = 2,
  HUNAN_SHAOYANG = 3,
  HUNAN_CHANGDE = 4,
  HUNAN_HONGZHONG = 5,
  HUNAN_ZHUANZHUAN = 6
};
bool HunanLocation_IsValid(int value);
const HunanLocation HunanLocation_MIN = HUNAN_CHANGSHA;
const HunanLocation HunanLocation_MAX = HUNAN_ZHUANZHUAN;
const int HunanLocation_ARRAYSIZE = HunanLocation_MAX + 1;

const ::google::protobuf::EnumDescriptor* HunanLocation_descriptor();
inline const ::std::string& HunanLocation_Name(HunanLocation value) {
  return ::google::protobuf::internal::NameOfEnum(
    HunanLocation_descriptor(), value);
}
inline bool HunanLocation_Parse(
    const ::std::string& name, HunanLocation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HunanLocation>(
    HunanLocation_descriptor(), name, value);
}
// ===================================================================

class AckEnSureJoker : public ::google::protobuf::Message {
 public:
  AckEnSureJoker();
  virtual ~AckEnSureJoker();

  AckEnSureJoker(const AckEnSureJoker& from);

  inline AckEnSureJoker& operator=(const AckEnSureJoker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckEnSureJoker& default_instance();

  void Swap(AckEnSureJoker* other);

  // implements Message ----------------------------------------------

  AckEnSureJoker* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckEnSureJoker& from);
  void MergeFrom(const AckEnSureJoker& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 OpenCard = 1;
  inline bool has_opencard() const;
  inline void clear_opencard();
  static const int kOpenCardFieldNumber = 1;
  inline ::google::protobuf::int32 opencard() const;
  inline void set_opencard(::google::protobuf::int32 value);

  // optional int32 CurJokerCard = 2;
  inline bool has_curjokercard() const;
  inline void clear_curjokercard();
  static const int kCurJokerCardFieldNumber = 2;
  inline ::google::protobuf::int32 curjokercard() const;
  inline void set_curjokercard(::google::protobuf::int32 value);

  // optional int32 JokerType = 3;
  inline bool has_jokertype() const;
  inline void clear_jokertype();
  static const int kJokerTypeFieldNumber = 3;
  inline ::google::protobuf::int32 jokertype() const;
  inline void set_jokertype(::google::protobuf::int32 value);

  // optional int32 CurJokerCard2 = 4;
  inline bool has_curjokercard2() const;
  inline void clear_curjokercard2();
  static const int kCurJokerCard2FieldNumber = 4;
  inline ::google::protobuf::int32 curjokercard2() const;
  inline void set_curjokercard2(::google::protobuf::int32 value);

  // optional int32 Position = 5;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 5;
  inline ::google::protobuf::int32 position() const;
  inline void set_position(::google::protobuf::int32 value);

  // optional int32 LeftCardNum = 6;
  inline bool has_leftcardnum() const;
  inline void clear_leftcardnum();
  static const int kLeftCardNumFieldNumber = 6;
  inline ::google::protobuf::int32 leftcardnum() const;
  inline void set_leftcardnum(::google::protobuf::int32 value);

  // optional int32 LeftCardNum2 = 8;
  inline bool has_leftcardnum2() const;
  inline void clear_leftcardnum2();
  static const int kLeftCardNum2FieldNumber = 8;
  inline ::google::protobuf::int32 leftcardnum2() const;
  inline void set_leftcardnum2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.AckEnSureJoker)
 private:
  inline void set_has_opencard();
  inline void clear_has_opencard();
  inline void set_has_curjokercard();
  inline void clear_has_curjokercard();
  inline void set_has_jokertype();
  inline void clear_has_jokertype();
  inline void set_has_curjokercard2();
  inline void clear_has_curjokercard2();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_leftcardnum();
  inline void clear_has_leftcardnum();
  inline void set_has_leftcardnum2();
  inline void clear_has_leftcardnum2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 opencard_;
  ::google::protobuf::int32 curjokercard_;
  ::google::protobuf::int32 jokertype_;
  ::google::protobuf::int32 curjokercard2_;
  ::google::protobuf::int32 position_;
  ::google::protobuf::int32 leftcardnum_;
  ::google::protobuf::int32 leftcardnum2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static AckEnSureJoker* default_instance_;
};
// -------------------------------------------------------------------

class ReqChoosePiao : public ::google::protobuf::Message {
 public:
  ReqChoosePiao();
  virtual ~ReqChoosePiao();

  ReqChoosePiao(const ReqChoosePiao& from);

  inline ReqChoosePiao& operator=(const ReqChoosePiao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqChoosePiao& default_instance();

  void Swap(ReqChoosePiao* other);

  // implements Message ----------------------------------------------

  ReqChoosePiao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqChoosePiao& from);
  void MergeFrom(const ReqChoosePiao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 PiaoNum = 1;
  inline bool has_piaonum() const;
  inline void clear_piaonum();
  static const int kPiaoNumFieldNumber = 1;
  inline ::google::protobuf::int32 piaonum() const;
  inline void set_piaonum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.ReqChoosePiao)
 private:
  inline void set_has_piaonum();
  inline void clear_has_piaonum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 piaonum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static ReqChoosePiao* default_instance_;
};
// -------------------------------------------------------------------

class AckStartPiao : public ::google::protobuf::Message {
 public:
  AckStartPiao();
  virtual ~AckStartPiao();

  AckStartPiao(const AckStartPiao& from);

  inline AckStartPiao& operator=(const AckStartPiao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckStartPiao& default_instance();

  void Swap(AckStartPiao* other);

  // implements Message ----------------------------------------------

  AckStartPiao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckStartPiao& from);
  void MergeFrom(const AckStartPiao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 piaoNum = 1;
  inline int piaonum_size() const;
  inline void clear_piaonum();
  static const int kPiaoNumFieldNumber = 1;
  inline ::google::protobuf::int32 piaonum(int index) const;
  inline void set_piaonum(int index, ::google::protobuf::int32 value);
  inline void add_piaonum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      piaonum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_piaonum();

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.AckStartPiao)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > piaonum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static AckStartPiao* default_instance_;
};
// -------------------------------------------------------------------

class AckBroadPiao : public ::google::protobuf::Message {
 public:
  AckBroadPiao();
  virtual ~AckBroadPiao();

  AckBroadPiao(const AckBroadPiao& from);

  inline AckBroadPiao& operator=(const AckBroadPiao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckBroadPiao& default_instance();

  void Swap(AckBroadPiao* other);

  // implements Message ----------------------------------------------

  AckBroadPiao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckBroadPiao& from);
  void MergeFrom(const AckBroadPiao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chariid = 1;
  inline bool has_chariid() const;
  inline void clear_chariid();
  static const int kChariidFieldNumber = 1;
  inline ::google::protobuf::int32 chariid() const;
  inline void set_chariid(::google::protobuf::int32 value);

  // optional int32 UserPiao = 2;
  inline bool has_userpiao() const;
  inline void clear_userpiao();
  static const int kUserPiaoFieldNumber = 2;
  inline ::google::protobuf::int32 userpiao() const;
  inline void set_userpiao(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.AckBroadPiao)
 private:
  inline void set_has_chariid();
  inline void clear_has_chariid();
  inline void set_has_userpiao();
  inline void clear_has_userpiao();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chariid_;
  ::google::protobuf::int32 userpiao_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static AckBroadPiao* default_instance_;
};
// -------------------------------------------------------------------

class tagGangHu : public ::google::protobuf::Message {
 public:
  tagGangHu();
  virtual ~tagGangHu();

  tagGangHu(const tagGangHu& from);

  inline tagGangHu& operator=(const tagGangHu& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagGangHu& default_instance();

  void Swap(tagGangHu* other);

  // implements Message ----------------------------------------------

  tagGangHu* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagGangHu& from);
  void MergeFrom(const tagGangHu& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 Chairid = 2;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairidFieldNumber = 2;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // optional int32 Card = 3;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 3;
  inline ::google::protobuf::int32 card() const;
  inline void set_card(::google::protobuf::int32 value);

  // optional int32 score = 4;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 4;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.tagGangHu)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 chairid_;
  ::google::protobuf::int32 card_;
  ::google::protobuf::int32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagGangHu* default_instance_;
};
// -------------------------------------------------------------------

class tagEndGangHu : public ::google::protobuf::Message {
 public:
  tagEndGangHu();
  virtual ~tagEndGangHu();

  tagEndGangHu(const tagEndGangHu& from);

  inline tagEndGangHu& operator=(const tagEndGangHu& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagEndGangHu& default_instance();

  void Swap(tagEndGangHu* other);

  // implements Message ----------------------------------------------

  tagEndGangHu* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagEndGangHu& from);
  void MergeFrom(const tagEndGangHu& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.game.hunanmj.tagGangHu GangHu = 1;
  inline int ganghu_size() const;
  inline void clear_ganghu();
  static const int kGangHuFieldNumber = 1;
  inline const ::proto::game::hunanmj::tagGangHu& ganghu(int index) const;
  inline ::proto::game::hunanmj::tagGangHu* mutable_ganghu(int index);
  inline ::proto::game::hunanmj::tagGangHu* add_ganghu();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagGangHu >&
      ganghu() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagGangHu >*
      mutable_ganghu();

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.tagEndGangHu)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagGangHu > ganghu_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagEndGangHu* default_instance_;
};
// -------------------------------------------------------------------

class tagHu : public ::google::protobuf::Message {
 public:
  tagHu();
  virtual ~tagHu();

  tagHu(const tagHu& from);

  inline tagHu& operator=(const tagHu& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagHu& default_instance();

  void Swap(tagHu* other);

  // implements Message ----------------------------------------------

  tagHu* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagHu& from);
  void MergeFrom(const tagHu& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Hucard = 1;
  inline bool has_hucard() const;
  inline void clear_hucard();
  static const int kHucardFieldNumber = 1;
  inline ::google::protobuf::int32 hucard() const;
  inline void set_hucard(::google::protobuf::int32 value);

  // optional int32 pasHuchairid = 2;
  inline bool has_pashuchairid() const;
  inline void clear_pashuchairid();
  static const int kPasHuchairidFieldNumber = 2;
  inline ::google::protobuf::int32 pashuchairid() const;
  inline void set_pashuchairid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.tagHu)
 private:
  inline void set_has_hucard();
  inline void clear_has_hucard();
  inline void set_has_pashuchairid();
  inline void clear_has_pashuchairid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 hucard_;
  ::google::protobuf::int32 pashuchairid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagHu* default_instance_;
};
// -------------------------------------------------------------------

class tagUserHuInfo : public ::google::protobuf::Message {
 public:
  tagUserHuInfo();
  virtual ~tagUserHuInfo();

  tagUserHuInfo(const tagUserHuInfo& from);

  inline tagUserHuInfo& operator=(const tagUserHuInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagUserHuInfo& default_instance();

  void Swap(tagUserHuInfo* other);

  // implements Message ----------------------------------------------

  tagUserHuInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagUserHuInfo& from);
  void MergeFrom(const tagUserHuInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 HuTotalscore = 1;
  inline bool has_hutotalscore() const;
  inline void clear_hutotalscore();
  static const int kHuTotalscoreFieldNumber = 1;
  inline ::google::protobuf::int32 hutotalscore() const;
  inline void set_hutotalscore(::google::protobuf::int32 value);

  // repeated .proto.game.hunanmj.tagHu stHuinfo = 2;
  inline int sthuinfo_size() const;
  inline void clear_sthuinfo();
  static const int kStHuinfoFieldNumber = 2;
  inline const ::proto::game::hunanmj::tagHu& sthuinfo(int index) const;
  inline ::proto::game::hunanmj::tagHu* mutable_sthuinfo(int index);
  inline ::proto::game::hunanmj::tagHu* add_sthuinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagHu >&
      sthuinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagHu >*
      mutable_sthuinfo();

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.tagUserHuInfo)
 private:
  inline void set_has_hutotalscore();
  inline void clear_has_hutotalscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagHu > sthuinfo_;
  ::google::protobuf::int32 hutotalscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagUserHuInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReturnGangInfo : public ::google::protobuf::Message {
 public:
  ReturnGangInfo();
  virtual ~ReturnGangInfo();

  ReturnGangInfo(const ReturnGangInfo& from);

  inline ReturnGangInfo& operator=(const ReturnGangInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnGangInfo& default_instance();

  void Swap(ReturnGangInfo* other);

  // implements Message ----------------------------------------------

  ReturnGangInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnGangInfo& from);
  void MergeFrom(const ReturnGangInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 State = 1;
  inline int state_size() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state(int index) const;
  inline void set_state(int index, ::google::protobuf::int32 value);
  inline void add_state(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      state() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_state();

  // repeated int32 Card = 2;
  inline int card_size() const;
  inline void clear_card();
  static const int kCardFieldNumber = 2;
  inline ::google::protobuf::int32 card(int index) const;
  inline void set_card(int index, ::google::protobuf::int32 value);
  inline void add_card(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      card() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_card();

  // repeated int32 Returngangscore = 3;
  inline int returngangscore_size() const;
  inline void clear_returngangscore();
  static const int kReturngangscoreFieldNumber = 3;
  inline ::google::protobuf::int32 returngangscore(int index) const;
  inline void set_returngangscore(int index, ::google::protobuf::int32 value);
  inline void add_returngangscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      returngangscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_returngangscore();

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.ReturnGangInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > state_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > card_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > returngangscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static ReturnGangInfo* default_instance_;
};
// -------------------------------------------------------------------

class tagJiangma : public ::google::protobuf::Message {
 public:
  tagJiangma();
  virtual ~tagJiangma();

  tagJiangma(const tagJiangma& from);

  inline tagJiangma& operator=(const tagJiangma& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagJiangma& default_instance();

  void Swap(tagJiangma* other);

  // implements Message ----------------------------------------------

  tagJiangma* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagJiangma& from);
  void MergeFrom(const tagJiangma& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // required int32 CardType = 2;
  inline bool has_cardtype() const;
  inline void clear_cardtype();
  static const int kCardTypeFieldNumber = 2;
  inline ::google::protobuf::int32 cardtype() const;
  inline void set_cardtype(::google::protobuf::int32 value);

  // required int32 Chairid = 3;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairidFieldNumber = 3;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // repeated int32 Card = 4;
  inline int card_size() const;
  inline void clear_card();
  static const int kCardFieldNumber = 4;
  inline ::google::protobuf::int32 card(int index) const;
  inline void set_card(int index, ::google::protobuf::int32 value);
  inline void add_card(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      card() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_card();

  // repeated int32 ZhongChairID = 5;
  inline int zhongchairid_size() const;
  inline void clear_zhongchairid();
  static const int kZhongChairIDFieldNumber = 5;
  inline ::google::protobuf::int32 zhongchairid(int index) const;
  inline void set_zhongchairid(int index, ::google::protobuf::int32 value);
  inline void add_zhongchairid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      zhongchairid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_zhongchairid();

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.tagJiangma)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_cardtype();
  inline void clear_has_cardtype();
  inline void set_has_chairid();
  inline void clear_has_chairid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 cardtype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > card_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > zhongchairid_;
  ::google::protobuf::int32 chairid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagJiangma* default_instance_;
};
// -------------------------------------------------------------------

class tagDaShai : public ::google::protobuf::Message {
 public:
  tagDaShai();
  virtual ~tagDaShai();

  tagDaShai(const tagDaShai& from);

  inline tagDaShai& operator=(const tagDaShai& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagDaShai& default_instance();

  void Swap(tagDaShai* other);

  // implements Message ----------------------------------------------

  tagDaShai* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagDaShai& from);
  void MergeFrom(const tagDaShai& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 Shai = 1;
  inline int shai_size() const;
  inline void clear_shai();
  static const int kShaiFieldNumber = 1;
  inline ::google::protobuf::int32 shai(int index) const;
  inline void set_shai(int index, ::google::protobuf::int32 value);
  inline void add_shai(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      shai() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_shai();

  // required int32 Chairid = 2;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairidFieldNumber = 2;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // required int32 Type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated int32 ZhongChairID = 4;
  inline int zhongchairid_size() const;
  inline void clear_zhongchairid();
  static const int kZhongChairIDFieldNumber = 4;
  inline ::google::protobuf::int32 zhongchairid(int index) const;
  inline void set_zhongchairid(int index, ::google::protobuf::int32 value);
  inline void add_zhongchairid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      zhongchairid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_zhongchairid();

  // repeated int32 Score = 5;
  inline int score_size() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 5;
  inline ::google::protobuf::int32 score(int index) const;
  inline void set_score(int index, ::google::protobuf::int32 value);
  inline void add_score(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      score() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_score();

  // optional int32 ZhongPai = 6;
  inline bool has_zhongpai() const;
  inline void clear_zhongpai();
  static const int kZhongPaiFieldNumber = 6;
  inline ::google::protobuf::int32 zhongpai() const;
  inline void set_zhongpai(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.tagDaShai)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_zhongpai();
  inline void clear_has_zhongpai();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > shai_;
  ::google::protobuf::int32 chairid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > zhongchairid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > score_;
  ::google::protobuf::int32 zhongpai_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagDaShai* default_instance_;
};
// -------------------------------------------------------------------

class tagBanInfo : public ::google::protobuf::Message {
 public:
  tagBanInfo();
  virtual ~tagBanInfo();

  tagBanInfo(const tagBanInfo& from);

  inline tagBanInfo& operator=(const tagBanInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagBanInfo& default_instance();

  void Swap(tagBanInfo* other);

  // implements Message ----------------------------------------------

  tagBanInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagBanInfo& from);
  void MergeFrom(const tagBanInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Chairid = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairidFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // repeated int32 ShowCard = 2;
  inline int showcard_size() const;
  inline void clear_showcard();
  static const int kShowCardFieldNumber = 2;
  inline ::google::protobuf::int32 showcard(int index) const;
  inline void set_showcard(int index, ::google::protobuf::int32 value);
  inline void add_showcard(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      showcard() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_showcard();

  // repeated .proto.game.hunanmj.AddFanInfo addfan = 3;
  inline int addfan_size() const;
  inline void clear_addfan();
  static const int kAddfanFieldNumber = 3;
  inline const ::proto::game::hunanmj::AddFanInfo& addfan(int index) const;
  inline ::proto::game::hunanmj::AddFanInfo* mutable_addfan(int index);
  inline ::proto::game::hunanmj::AddFanInfo* add_addfan();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::AddFanInfo >&
      addfan() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::AddFanInfo >*
      mutable_addfan();

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.tagBanInfo)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > showcard_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::AddFanInfo > addfan_;
  ::google::protobuf::int32 chairid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagBanInfo* default_instance_;
};
// -------------------------------------------------------------------

class tagBanPai : public ::google::protobuf::Message {
 public:
  tagBanPai();
  virtual ~tagBanPai();

  tagBanPai(const tagBanPai& from);

  inline tagBanPai& operator=(const tagBanPai& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagBanPai& default_instance();

  void Swap(tagBanPai* other);

  // implements Message ----------------------------------------------

  tagBanPai* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagBanPai& from);
  void MergeFrom(const tagBanPai& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.game.hunanmj.tagBanInfo banpai = 1;
  inline int banpai_size() const;
  inline void clear_banpai();
  static const int kBanpaiFieldNumber = 1;
  inline const ::proto::game::hunanmj::tagBanInfo& banpai(int index) const;
  inline ::proto::game::hunanmj::tagBanInfo* mutable_banpai(int index);
  inline ::proto::game::hunanmj::tagBanInfo* add_banpai();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagBanInfo >&
      banpai() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagBanInfo >*
      mutable_banpai();

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.tagBanPai)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagBanInfo > banpai_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagBanPai* default_instance_;
};
// -------------------------------------------------------------------

class tagBanPaiEnd : public ::google::protobuf::Message {
 public:
  tagBanPaiEnd();
  virtual ~tagBanPaiEnd();

  tagBanPaiEnd(const tagBanPaiEnd& from);

  inline tagBanPaiEnd& operator=(const tagBanPaiEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagBanPaiEnd& default_instance();

  void Swap(tagBanPaiEnd* other);

  // implements Message ----------------------------------------------

  tagBanPaiEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagBanPaiEnd& from);
  void MergeFrom(const tagBanPaiEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Chairid = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairidFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.tagBanPaiEnd)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chairid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagBanPaiEnd* default_instance_;
};
// -------------------------------------------------------------------

class tagGangInfo : public ::google::protobuf::Message {
 public:
  tagGangInfo();
  virtual ~tagGangInfo();

  tagGangInfo(const tagGangInfo& from);

  inline tagGangInfo& operator=(const tagGangInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagGangInfo& default_instance();

  void Swap(tagGangInfo* other);

  // implements Message ----------------------------------------------

  tagGangInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagGangInfo& from);
  void MergeFrom(const tagGangInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Card = 1;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 1;
  inline ::google::protobuf::int32 card() const;
  inline void set_card(::google::protobuf::int32 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.tagGangInfo)
 private:
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 card_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagGangInfo* default_instance_;
};
// -------------------------------------------------------------------

class GangAckOpNotify : public ::google::protobuf::Message {
 public:
  GangAckOpNotify();
  virtual ~GangAckOpNotify();

  GangAckOpNotify(const GangAckOpNotify& from);

  inline GangAckOpNotify& operator=(const GangAckOpNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GangAckOpNotify& default_instance();

  void Swap(GangAckOpNotify* other);

  // implements Message ----------------------------------------------

  GangAckOpNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GangAckOpNotify& from);
  void MergeFrom(const GangAckOpNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ChairID = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairIDFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // optional int32 OpType = 2;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOpTypeFieldNumber = 2;
  inline ::google::protobuf::int32 optype() const;
  inline void set_optype(::google::protobuf::int32 value);

  // optional int32 Card = 3;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 3;
  inline ::google::protobuf::int32 card() const;
  inline void set_card(::google::protobuf::int32 value);

  // repeated .proto.game.hunanmj.tagGangInfo Gang = 4;
  inline int gang_size() const;
  inline void clear_gang();
  static const int kGangFieldNumber = 4;
  inline const ::proto::game::hunanmj::tagGangInfo& gang(int index) const;
  inline ::proto::game::hunanmj::tagGangInfo* mutable_gang(int index);
  inline ::proto::game::hunanmj::tagGangInfo* add_gang();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagGangInfo >&
      gang() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagGangInfo >*
      mutable_gang();

  // optional .proto.game.hunanmj.tagBuZhang bu = 5;
  inline bool has_bu() const;
  inline void clear_bu();
  static const int kBuFieldNumber = 5;
  inline const ::proto::game::hunanmj::tagBuZhang& bu() const;
  inline ::proto::game::hunanmj::tagBuZhang* mutable_bu();
  inline ::proto::game::hunanmj::tagBuZhang* release_bu();
  inline void set_allocated_bu(::proto::game::hunanmj::tagBuZhang* bu);

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.GangAckOpNotify)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_optype();
  inline void clear_has_optype();
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_bu();
  inline void clear_has_bu();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chairid_;
  ::google::protobuf::int32 optype_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagGangInfo > gang_;
  ::proto::game::hunanmj::tagBuZhang* bu_;
  ::google::protobuf::int32 card_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static GangAckOpNotify* default_instance_;
};
// -------------------------------------------------------------------

class tagHuInfo : public ::google::protobuf::Message {
 public:
  tagHuInfo();
  virtual ~tagHuInfo();

  tagHuInfo(const tagHuInfo& from);

  inline tagHuInfo& operator=(const tagHuInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagHuInfo& default_instance();

  void Swap(tagHuInfo* other);

  // implements Message ----------------------------------------------

  tagHuInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagHuInfo& from);
  void MergeFrom(const tagHuInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Card = 1;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 1;
  inline ::google::protobuf::int32 card() const;
  inline void set_card(::google::protobuf::int32 value);

  // optional int32 LeftNum = 2;
  inline bool has_leftnum() const;
  inline void clear_leftnum();
  static const int kLeftNumFieldNumber = 2;
  inline ::google::protobuf::int32 leftnum() const;
  inline void set_leftnum(::google::protobuf::int32 value);

  // optional int32 HuFanNum = 3;
  inline bool has_hufannum() const;
  inline void clear_hufannum();
  static const int kHuFanNumFieldNumber = 3;
  inline ::google::protobuf::int32 hufannum() const;
  inline void set_hufannum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.tagHuInfo)
 private:
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_leftnum();
  inline void clear_has_leftnum();
  inline void set_has_hufannum();
  inline void clear_has_hufannum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 card_;
  ::google::protobuf::int32 leftnum_;
  ::google::protobuf::int32 hufannum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagHuInfo* default_instance_;
};
// -------------------------------------------------------------------

class tagDaShaiPaiCount : public ::google::protobuf::Message {
 public:
  tagDaShaiPaiCount();
  virtual ~tagDaShaiPaiCount();

  tagDaShaiPaiCount(const tagDaShaiPaiCount& from);

  inline tagDaShaiPaiCount& operator=(const tagDaShaiPaiCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagDaShaiPaiCount& default_instance();

  void Swap(tagDaShaiPaiCount* other);

  // implements Message ----------------------------------------------

  tagDaShaiPaiCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagDaShaiPaiCount& from);
  void MergeFrom(const tagDaShaiPaiCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 shaiSum = 1;
  inline bool has_shaisum() const;
  inline void clear_shaisum();
  static const int kShaiSumFieldNumber = 1;
  inline ::google::protobuf::int32 shaisum() const;
  inline void set_shaisum(::google::protobuf::int32 value);

  // optional int32 paiCount = 2;
  inline bool has_paicount() const;
  inline void clear_paicount();
  static const int kPaiCountFieldNumber = 2;
  inline ::google::protobuf::int32 paicount() const;
  inline void set_paicount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.tagDaShaiPaiCount)
 private:
  inline void set_has_shaisum();
  inline void clear_has_shaisum();
  inline void set_has_paicount();
  inline void clear_has_paicount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 shaisum_;
  ::google::protobuf::int32 paicount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagDaShaiPaiCount* default_instance_;
};
// -------------------------------------------------------------------

class tagGang_Zhuapai : public ::google::protobuf::Message {
 public:
  tagGang_Zhuapai();
  virtual ~tagGang_Zhuapai();

  tagGang_Zhuapai(const tagGang_Zhuapai& from);

  inline tagGang_Zhuapai& operator=(const tagGang_Zhuapai& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagGang_Zhuapai& default_instance();

  void Swap(tagGang_Zhuapai* other);

  // implements Message ----------------------------------------------

  tagGang_Zhuapai* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagGang_Zhuapai& from);
  void MergeFrom(const tagGang_Zhuapai& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Chairid = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairidFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // repeated int32 Card = 2;
  inline int card_size() const;
  inline void clear_card();
  static const int kCardFieldNumber = 2;
  inline ::google::protobuf::int32 card(int index) const;
  inline void set_card(int index, ::google::protobuf::int32 value);
  inline void add_card(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      card() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_card();

  // repeated .proto.game.hunanmj.GangAckOpNotify OpNotify = 3;
  inline int opnotify_size() const;
  inline void clear_opnotify();
  static const int kOpNotifyFieldNumber = 3;
  inline const ::proto::game::hunanmj::GangAckOpNotify& opnotify(int index) const;
  inline ::proto::game::hunanmj::GangAckOpNotify* mutable_opnotify(int index);
  inline ::proto::game::hunanmj::GangAckOpNotify* add_opnotify();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::GangAckOpNotify >&
      opnotify() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::GangAckOpNotify >*
      mutable_opnotify();

  // optional int32 LeftCardNum = 4;
  inline bool has_leftcardnum() const;
  inline void clear_leftcardnum();
  static const int kLeftCardNumFieldNumber = 4;
  inline ::google::protobuf::int32 leftcardnum() const;
  inline void set_leftcardnum(::google::protobuf::int32 value);

  // repeated .proto.game.hunanmj.tagHuInfo HuInfo = 5;
  inline int huinfo_size() const;
  inline void clear_huinfo();
  static const int kHuInfoFieldNumber = 5;
  inline const ::proto::game::hunanmj::tagHuInfo& huinfo(int index) const;
  inline ::proto::game::hunanmj::tagHuInfo* mutable_huinfo(int index);
  inline ::proto::game::hunanmj::tagHuInfo* add_huinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagHuInfo >&
      huinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagHuInfo >*
      mutable_huinfo();

  // optional int32 fz_type = 6;
  inline bool has_fz_type() const;
  inline void clear_fz_type();
  static const int kFzTypeFieldNumber = 6;
  inline ::google::protobuf::int32 fz_type() const;
  inline void set_fz_type(::google::protobuf::int32 value);

  // optional .proto.game.hunanmj.tagDaShaiPaiCount shaiPaiCount = 7;
  inline bool has_shaipaicount() const;
  inline void clear_shaipaicount();
  static const int kShaiPaiCountFieldNumber = 7;
  inline const ::proto::game::hunanmj::tagDaShaiPaiCount& shaipaicount() const;
  inline ::proto::game::hunanmj::tagDaShaiPaiCount* mutable_shaipaicount();
  inline ::proto::game::hunanmj::tagDaShaiPaiCount* release_shaipaicount();
  inline void set_allocated_shaipaicount(::proto::game::hunanmj::tagDaShaiPaiCount* shaipaicount);

  // optional int32 LeftCardNum2 = 8;
  inline bool has_leftcardnum2() const;
  inline void clear_leftcardnum2();
  static const int kLeftCardNum2FieldNumber = 8;
  inline ::google::protobuf::int32 leftcardnum2() const;
  inline void set_leftcardnum2(::google::protobuf::int32 value);

  // optional int32 LeftCardNum3 = 9;
  inline bool has_leftcardnum3() const;
  inline void clear_leftcardnum3();
  static const int kLeftCardNum3FieldNumber = 9;
  inline ::google::protobuf::int32 leftcardnum3() const;
  inline void set_leftcardnum3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.tagGang_Zhuapai)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_leftcardnum();
  inline void clear_has_leftcardnum();
  inline void set_has_fz_type();
  inline void clear_has_fz_type();
  inline void set_has_shaipaicount();
  inline void clear_has_shaipaicount();
  inline void set_has_leftcardnum2();
  inline void clear_has_leftcardnum2();
  inline void set_has_leftcardnum3();
  inline void clear_has_leftcardnum3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > card_;
  ::google::protobuf::int32 chairid_;
  ::google::protobuf::int32 leftcardnum_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::GangAckOpNotify > opnotify_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagHuInfo > huinfo_;
  ::proto::game::hunanmj::tagDaShaiPaiCount* shaipaicount_;
  ::google::protobuf::int32 fz_type_;
  ::google::protobuf::int32 leftcardnum2_;
  ::google::protobuf::int32 leftcardnum3_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagGang_Zhuapai* default_instance_;
};
// -------------------------------------------------------------------

class tagBuinfo : public ::google::protobuf::Message {
 public:
  tagBuinfo();
  virtual ~tagBuinfo();

  tagBuinfo(const tagBuinfo& from);

  inline tagBuinfo& operator=(const tagBuinfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagBuinfo& default_instance();

  void Swap(tagBuinfo* other);

  // implements Message ----------------------------------------------

  tagBuinfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagBuinfo& from);
  void MergeFrom(const tagBuinfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Card = 1;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 1;
  inline ::google::protobuf::int32 card() const;
  inline void set_card(::google::protobuf::int32 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.tagBuinfo)
 private:
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 card_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagBuinfo* default_instance_;
};
// -------------------------------------------------------------------

class tagBuZhang : public ::google::protobuf::Message {
 public:
  tagBuZhang();
  virtual ~tagBuZhang();

  tagBuZhang(const tagBuZhang& from);

  inline tagBuZhang& operator=(const tagBuZhang& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagBuZhang& default_instance();

  void Swap(tagBuZhang* other);

  // implements Message ----------------------------------------------

  tagBuZhang* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagBuZhang& from);
  void MergeFrom(const tagBuZhang& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.game.hunanmj.tagBuinfo bu = 1;
  inline int bu_size() const;
  inline void clear_bu();
  static const int kBuFieldNumber = 1;
  inline const ::proto::game::hunanmj::tagBuinfo& bu(int index) const;
  inline ::proto::game::hunanmj::tagBuinfo* mutable_bu(int index);
  inline ::proto::game::hunanmj::tagBuinfo* add_bu();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagBuinfo >&
      bu() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagBuinfo >*
      mutable_bu();

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.tagBuZhang)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagBuinfo > bu_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagBuZhang* default_instance_;
};
// -------------------------------------------------------------------

class tagUserState : public ::google::protobuf::Message {
 public:
  tagUserState();
  virtual ~tagUserState();

  tagUserState(const tagUserState& from);

  inline tagUserState& operator=(const tagUserState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagUserState& default_instance();

  void Swap(tagUserState* other);

  // implements Message ----------------------------------------------

  tagUserState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagUserState& from);
  void MergeFrom(const tagUserState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ChairID = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairIDFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // required int32 State = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // repeated int32 Score = 3;
  inline int score_size() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::int32 score(int index) const;
  inline void set_score(int index, ::google::protobuf::int32 value);
  inline void add_score(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      score() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_score();

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.tagUserState)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chairid_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagUserState* default_instance_;
};
// -------------------------------------------------------------------

class tagExternalMsg : public ::google::protobuf::Message {
 public:
  tagExternalMsg();
  virtual ~tagExternalMsg();

  tagExternalMsg(const tagExternalMsg& from);

  inline tagExternalMsg& operator=(const tagExternalMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagExternalMsg& default_instance();

  void Swap(tagExternalMsg* other);

  // implements Message ----------------------------------------------

  tagExternalMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagExternalMsg& from);
  void MergeFrom(const tagExternalMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::google::protobuf::int32 cmd() const;
  inline void set_cmd(::google::protobuf::int32 value);

  // optional .proto.game.hunanmj.tagUserState type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline const ::proto::game::hunanmj::tagUserState& type() const;
  inline ::proto::game::hunanmj::tagUserState* mutable_type();
  inline ::proto::game::hunanmj::tagUserState* release_type();
  inline void set_allocated_type(::proto::game::hunanmj::tagUserState* type);

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.tagExternalMsg)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::game::hunanmj::tagUserState* type_;
  ::google::protobuf::int32 cmd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagExternalMsg* default_instance_;
};
// -------------------------------------------------------------------

class AckCustomiedInfo : public ::google::protobuf::Message {
 public:
  AckCustomiedInfo();
  virtual ~AckCustomiedInfo();

  AckCustomiedInfo(const AckCustomiedInfo& from);

  inline AckCustomiedInfo& operator=(const AckCustomiedInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckCustomiedInfo& default_instance();

  void Swap(AckCustomiedInfo* other);

  // implements Message ----------------------------------------------

  AckCustomiedInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckCustomiedInfo& from);
  void MergeFrom(const AckCustomiedInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 gametype = 1;
  inline bool has_gametype() const;
  inline void clear_gametype();
  static const int kGametypeFieldNumber = 1;
  inline ::google::protobuf::int32 gametype() const;
  inline void set_gametype(::google::protobuf::int32 value);

  // required int32 isHavePiao = 2;
  inline bool has_ishavepiao() const;
  inline void clear_ishavepiao();
  static const int kIsHavePiaoFieldNumber = 2;
  inline ::google::protobuf::int32 ishavepiao() const;
  inline void set_ishavepiao(::google::protobuf::int32 value);

  // required int32 Jiangma = 3;
  inline bool has_jiangma() const;
  inline void clear_jiangma();
  static const int kJiangmaFieldNumber = 3;
  inline ::google::protobuf::int32 jiangma() const;
  inline void set_jiangma(::google::protobuf::int32 value);

  // required int32 Laizi = 4;
  inline bool has_laizi() const;
  inline void clear_laizi();
  static const int kLaiziFieldNumber = 4;
  inline ::google::protobuf::int32 laizi() const;
  inline void set_laizi(::google::protobuf::int32 value);

  // optional int32 piaoTime = 5;
  inline bool has_piaotime() const;
  inline void clear_piaotime();
  static const int kPiaoTimeFieldNumber = 5;
  inline ::google::protobuf::int32 piaotime() const;
  inline void set_piaotime(::google::protobuf::int32 value);

  // repeated int32 UserPiao = 6;
  inline int userpiao_size() const;
  inline void clear_userpiao();
  static const int kUserPiaoFieldNumber = 6;
  inline ::google::protobuf::int32 userpiao(int index) const;
  inline void set_userpiao(int index, ::google::protobuf::int32 value);
  inline void add_userpiao(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      userpiao() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_userpiao();

  // optional int32 IsPiaoyet = 7;
  inline bool has_ispiaoyet() const;
  inline void clear_ispiaoyet();
  static const int kIsPiaoyetFieldNumber = 7;
  inline ::google::protobuf::int32 ispiaoyet() const;
  inline void set_ispiaoyet(::google::protobuf::int32 value);

  // repeated int32 JinZhiHuanPai = 8;
  inline int jinzhihuanpai_size() const;
  inline void clear_jinzhihuanpai();
  static const int kJinZhiHuanPaiFieldNumber = 8;
  inline ::google::protobuf::int32 jinzhihuanpai(int index) const;
  inline void set_jinzhihuanpai(int index, ::google::protobuf::int32 value);
  inline void add_jinzhihuanpai(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      jinzhihuanpai() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_jinzhihuanpai();

  // optional .proto.game.hunanmj.tagBuZhang bu = 9;
  inline bool has_bu() const;
  inline void clear_bu();
  static const int kBuFieldNumber = 9;
  inline const ::proto::game::hunanmj::tagBuZhang& bu() const;
  inline ::proto::game::hunanmj::tagBuZhang* mutable_bu();
  inline ::proto::game::hunanmj::tagBuZhang* release_bu();
  inline void set_allocated_bu(::proto::game::hunanmj::tagBuZhang* bu);

  // repeated int32 RoomConfigID = 10;
  inline int roomconfigid_size() const;
  inline void clear_roomconfigid();
  static const int kRoomConfigIDFieldNumber = 10;
  inline ::google::protobuf::int32 roomconfigid(int index) const;
  inline void set_roomconfigid(int index, ::google::protobuf::int32 value);
  inline void add_roomconfigid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      roomconfigid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_roomconfigid();

  // optional .proto.game.hunanmj.tagBanPai banpai = 11;
  inline bool has_banpai() const;
  inline void clear_banpai();
  static const int kBanpaiFieldNumber = 11;
  inline const ::proto::game::hunanmj::tagBanPai& banpai() const;
  inline ::proto::game::hunanmj::tagBanPai* mutable_banpai();
  inline ::proto::game::hunanmj::tagBanPai* release_banpai();
  inline void set_allocated_banpai(::proto::game::hunanmj::tagBanPai* banpai);

  // optional .proto.game.hunanmj.tagGang_Zhuapai zhuapai = 12;
  inline bool has_zhuapai() const;
  inline void clear_zhuapai();
  static const int kZhuapaiFieldNumber = 12;
  inline const ::proto::game::hunanmj::tagGang_Zhuapai& zhuapai() const;
  inline ::proto::game::hunanmj::tagGang_Zhuapai* mutable_zhuapai();
  inline ::proto::game::hunanmj::tagGang_Zhuapai* release_zhuapai();
  inline void set_allocated_zhuapai(::proto::game::hunanmj::tagGang_Zhuapai* zhuapai);

  // optional .proto.game.hunanmj.AckEnSureJoker Joker = 13;
  inline bool has_joker() const;
  inline void clear_joker();
  static const int kJokerFieldNumber = 13;
  inline const ::proto::game::hunanmj::AckEnSureJoker& joker() const;
  inline ::proto::game::hunanmj::AckEnSureJoker* mutable_joker();
  inline ::proto::game::hunanmj::AckEnSureJoker* release_joker();
  inline void set_allocated_joker(::proto::game::hunanmj::AckEnSureJoker* joker);

  // optional bool GangCalcImm = 14;
  inline bool has_gangcalcimm() const;
  inline void clear_gangcalcimm();
  static const int kGangCalcImmFieldNumber = 14;
  inline bool gangcalcimm() const;
  inline void set_gangcalcimm(bool value);

  // optional int32 OpType2 = 15;
  inline bool has_optype2() const;
  inline void clear_optype2();
  static const int kOpType2FieldNumber = 15;
  inline ::google::protobuf::int32 optype2() const;
  inline void set_optype2(::google::protobuf::int32 value);

  // optional int32 CurOutCardSeat = 16;
  inline bool has_curoutcardseat() const;
  inline void clear_curoutcardseat();
  static const int kCurOutCardSeatFieldNumber = 16;
  inline ::google::protobuf::int32 curoutcardseat() const;
  inline void set_curoutcardseat(::google::protobuf::int32 value);

  // optional int32 lianZhuangCount = 17;
  inline bool has_lianzhuangcount() const;
  inline void clear_lianzhuangcount();
  static const int kLianZhuangCountFieldNumber = 17;
  inline ::google::protobuf::int32 lianzhuangcount() const;
  inline void set_lianzhuangcount(::google::protobuf::int32 value);

  // optional int32 fz_type = 18;
  inline bool has_fz_type() const;
  inline void clear_fz_type();
  static const int kFzTypeFieldNumber = 18;
  inline ::google::protobuf::int32 fz_type() const;
  inline void set_fz_type(::google::protobuf::int32 value);

  // optional int32 hu_type = 19;
  inline bool has_hu_type() const;
  inline void clear_hu_type();
  static const int kHuTypeFieldNumber = 19;
  inline ::google::protobuf::int32 hu_type() const;
  inline void set_hu_type(::google::protobuf::int32 value);

  // optional .proto.game.hunanmj.tagExternalMsg msg = 20;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 20;
  inline const ::proto::game::hunanmj::tagExternalMsg& msg() const;
  inline ::proto::game::hunanmj::tagExternalMsg* mutable_msg();
  inline ::proto::game::hunanmj::tagExternalMsg* release_msg();
  inline void set_allocated_msg(::proto::game::hunanmj::tagExternalMsg* msg);

  // repeated .proto.game.hunanmj.tagDaShaiPaiCount shaiPaiCounts = 21;
  inline int shaipaicounts_size() const;
  inline void clear_shaipaicounts();
  static const int kShaiPaiCountsFieldNumber = 21;
  inline const ::proto::game::hunanmj::tagDaShaiPaiCount& shaipaicounts(int index) const;
  inline ::proto::game::hunanmj::tagDaShaiPaiCount* mutable_shaipaicounts(int index);
  inline ::proto::game::hunanmj::tagDaShaiPaiCount* add_shaipaicounts();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagDaShaiPaiCount >&
      shaipaicounts() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagDaShaiPaiCount >*
      mutable_shaipaicounts();

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.AckCustomiedInfo)
 private:
  inline void set_has_gametype();
  inline void clear_has_gametype();
  inline void set_has_ishavepiao();
  inline void clear_has_ishavepiao();
  inline void set_has_jiangma();
  inline void clear_has_jiangma();
  inline void set_has_laizi();
  inline void clear_has_laizi();
  inline void set_has_piaotime();
  inline void clear_has_piaotime();
  inline void set_has_ispiaoyet();
  inline void clear_has_ispiaoyet();
  inline void set_has_bu();
  inline void clear_has_bu();
  inline void set_has_banpai();
  inline void clear_has_banpai();
  inline void set_has_zhuapai();
  inline void clear_has_zhuapai();
  inline void set_has_joker();
  inline void clear_has_joker();
  inline void set_has_gangcalcimm();
  inline void clear_has_gangcalcimm();
  inline void set_has_optype2();
  inline void clear_has_optype2();
  inline void set_has_curoutcardseat();
  inline void clear_has_curoutcardseat();
  inline void set_has_lianzhuangcount();
  inline void clear_has_lianzhuangcount();
  inline void set_has_fz_type();
  inline void clear_has_fz_type();
  inline void set_has_hu_type();
  inline void clear_has_hu_type();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 gametype_;
  ::google::protobuf::int32 ishavepiao_;
  ::google::protobuf::int32 jiangma_;
  ::google::protobuf::int32 laizi_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > userpiao_;
  ::google::protobuf::int32 piaotime_;
  ::google::protobuf::int32 ispiaoyet_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > jinzhihuanpai_;
  ::proto::game::hunanmj::tagBuZhang* bu_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > roomconfigid_;
  ::proto::game::hunanmj::tagBanPai* banpai_;
  ::proto::game::hunanmj::tagGang_Zhuapai* zhuapai_;
  ::proto::game::hunanmj::AckEnSureJoker* joker_;
  bool gangcalcimm_;
  ::google::protobuf::int32 optype2_;
  ::google::protobuf::int32 curoutcardseat_;
  ::google::protobuf::int32 lianzhuangcount_;
  ::google::protobuf::int32 fz_type_;
  ::google::protobuf::int32 hu_type_;
  ::proto::game::hunanmj::tagExternalMsg* msg_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagDaShaiPaiCount > shaipaicounts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(21 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static AckCustomiedInfo* default_instance_;
};
// -------------------------------------------------------------------

class tagHuNanGameEnd : public ::google::protobuf::Message {
 public:
  tagHuNanGameEnd();
  virtual ~tagHuNanGameEnd();

  tagHuNanGameEnd(const tagHuNanGameEnd& from);

  inline tagHuNanGameEnd& operator=(const tagHuNanGameEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagHuNanGameEnd& default_instance();

  void Swap(tagHuNanGameEnd* other);

  // implements Message ----------------------------------------------

  tagHuNanGameEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagHuNanGameEnd& from);
  void MergeFrom(const tagHuNanGameEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.game.hunanmj.FanInfo faninfo = 1;
  inline int faninfo_size() const;
  inline void clear_faninfo();
  static const int kFaninfoFieldNumber = 1;
  inline const ::proto::game::hunanmj::FanInfo& faninfo(int index) const;
  inline ::proto::game::hunanmj::FanInfo* mutable_faninfo(int index);
  inline ::proto::game::hunanmj::FanInfo* add_faninfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::FanInfo >&
      faninfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::FanInfo >*
      mutable_faninfo();

  // repeated int32 piaoNum = 2;
  inline int piaonum_size() const;
  inline void clear_piaonum();
  static const int kPiaoNumFieldNumber = 2;
  inline ::google::protobuf::int32 piaonum(int index) const;
  inline void set_piaonum(int index, ::google::protobuf::int32 value);
  inline void add_piaonum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      piaonum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_piaonum();

  // optional .proto.game.hunanmj.tagJiangma Niao = 3;
  inline bool has_niao() const;
  inline void clear_niao();
  static const int kNiaoFieldNumber = 3;
  inline const ::proto::game::hunanmj::tagJiangma& niao() const;
  inline ::proto::game::hunanmj::tagJiangma* mutable_niao();
  inline ::proto::game::hunanmj::tagJiangma* release_niao();
  inline void set_allocated_niao(::proto::game::hunanmj::tagJiangma* niao);

  // repeated .proto.game.hunanmj.tagMultiHuInfo huinfo = 4;
  inline int huinfo_size() const;
  inline void clear_huinfo();
  static const int kHuinfoFieldNumber = 4;
  inline const ::proto::game::hunanmj::tagMultiHuInfo& huinfo(int index) const;
  inline ::proto::game::hunanmj::tagMultiHuInfo* mutable_huinfo(int index);
  inline ::proto::game::hunanmj::tagMultiHuInfo* add_huinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagMultiHuInfo >&
      huinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagMultiHuInfo >*
      mutable_huinfo();

  // optional int32 LeftCardNum = 5;
  inline bool has_leftcardnum() const;
  inline void clear_leftcardnum();
  static const int kLeftCardNumFieldNumber = 5;
  inline ::google::protobuf::int32 leftcardnum() const;
  inline void set_leftcardnum(::google::protobuf::int32 value);

  // repeated int32 ContinuousBankerNum = 6;
  inline int continuousbankernum_size() const;
  inline void clear_continuousbankernum();
  static const int kContinuousBankerNumFieldNumber = 6;
  inline ::google::protobuf::int32 continuousbankernum(int index) const;
  inline void set_continuousbankernum(int index, ::google::protobuf::int32 value);
  inline void add_continuousbankernum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      continuousbankernum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_continuousbankernum();

  // repeated int32 RemainderCards = 7;
  inline int remaindercards_size() const;
  inline void clear_remaindercards();
  static const int kRemainderCardsFieldNumber = 7;
  inline ::google::protobuf::int32 remaindercards(int index) const;
  inline void set_remaindercards(int index, ::google::protobuf::int32 value);
  inline void add_remaindercards(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      remaindercards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_remaindercards();

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.tagHuNanGameEnd)
 private:
  inline void set_has_niao();
  inline void clear_has_niao();
  inline void set_has_leftcardnum();
  inline void clear_has_leftcardnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::FanInfo > faninfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > piaonum_;
  ::proto::game::hunanmj::tagJiangma* niao_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagMultiHuInfo > huinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > continuousbankernum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > remaindercards_;
  ::google::protobuf::int32 leftcardnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagHuNanGameEnd* default_instance_;
};
// -------------------------------------------------------------------

class tagMultiHuInfo : public ::google::protobuf::Message {
 public:
  tagMultiHuInfo();
  virtual ~tagMultiHuInfo();

  tagMultiHuInfo(const tagMultiHuInfo& from);

  inline tagMultiHuInfo& operator=(const tagMultiHuInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagMultiHuInfo& default_instance();

  void Swap(tagMultiHuInfo* other);

  // implements Message ----------------------------------------------

  tagMultiHuInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagMultiHuInfo& from);
  void MergeFrom(const tagMultiHuInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Chairid = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairidFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // repeated int32 HuCard = 2;
  inline int hucard_size() const;
  inline void clear_hucard();
  static const int kHuCardFieldNumber = 2;
  inline ::google::protobuf::int32 hucard(int index) const;
  inline void set_hucard(int index, ::google::protobuf::int32 value);
  inline void add_hucard(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      hucard() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_hucard();

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.tagMultiHuInfo)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > hucard_;
  ::google::protobuf::int32 chairid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagMultiHuInfo* default_instance_;
};
// -------------------------------------------------------------------

class AddFanInfo : public ::google::protobuf::Message {
 public:
  AddFanInfo();
  virtual ~AddFanInfo();

  AddFanInfo(const AddFanInfo& from);

  inline AddFanInfo& operator=(const AddFanInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFanInfo& default_instance();

  void Swap(AddFanInfo* other);

  // implements Message ----------------------------------------------

  AddFanInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddFanInfo& from);
  void MergeFrom(const AddFanInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 AddType = 1;
  inline bool has_addtype() const;
  inline void clear_addtype();
  static const int kAddTypeFieldNumber = 1;
  inline ::google::protobuf::int32 addtype() const;
  inline void set_addtype(::google::protobuf::int32 value);

  // optional int32 AddNum = 2;
  inline bool has_addnum() const;
  inline void clear_addnum();
  static const int kAddNumFieldNumber = 2;
  inline ::google::protobuf::int32 addnum() const;
  inline void set_addnum(::google::protobuf::int32 value);

  // optional int32 FenNum = 3;
  inline bool has_fennum() const;
  inline void clear_fennum();
  static const int kFenNumFieldNumber = 3;
  inline ::google::protobuf::int32 fennum() const;
  inline void set_fennum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.AddFanInfo)
 private:
  inline void set_has_addtype();
  inline void clear_has_addtype();
  inline void set_has_addnum();
  inline void clear_has_addnum();
  inline void set_has_fennum();
  inline void clear_has_fennum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 addtype_;
  ::google::protobuf::int32 addnum_;
  ::google::protobuf::int32 fennum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static AddFanInfo* default_instance_;
};
// -------------------------------------------------------------------

class FanInfo : public ::google::protobuf::Message {
 public:
  FanInfo();
  virtual ~FanInfo();

  FanInfo(const FanInfo& from);

  inline FanInfo& operator=(const FanInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FanInfo& default_instance();

  void Swap(FanInfo* other);

  // implements Message ----------------------------------------------

  FanInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FanInfo& from);
  void MergeFrom(const FanInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 chairID = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairIDFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // required int32 SpecialType = 2;
  inline bool has_specialtype() const;
  inline void clear_specialtype();
  static const int kSpecialTypeFieldNumber = 2;
  inline ::google::protobuf::int32 specialtype() const;
  inline void set_specialtype(::google::protobuf::int32 value);

  // required int32 FanNum = 3;
  inline bool has_fannum() const;
  inline void clear_fannum();
  static const int kFanNumFieldNumber = 3;
  inline ::google::protobuf::int32 fannum() const;
  inline void set_fannum(::google::protobuf::int32 value);

  // repeated .proto.game.hunanmj.AddFanInfo addfan = 4;
  inline int addfan_size() const;
  inline void clear_addfan();
  static const int kAddfanFieldNumber = 4;
  inline const ::proto::game::hunanmj::AddFanInfo& addfan(int index) const;
  inline ::proto::game::hunanmj::AddFanInfo* mutable_addfan(int index);
  inline ::proto::game::hunanmj::AddFanInfo* add_addfan();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::AddFanInfo >&
      addfan() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::AddFanInfo >*
      mutable_addfan();

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.FanInfo)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_specialtype();
  inline void clear_has_specialtype();
  inline void set_has_fannum();
  inline void clear_has_fannum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chairid_;
  ::google::protobuf::int32 specialtype_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::AddFanInfo > addfan_;
  ::google::protobuf::int32 fannum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static FanInfo* default_instance_;
};
// -------------------------------------------------------------------

class tagBuZhangOpResult : public ::google::protobuf::Message {
 public:
  tagBuZhangOpResult();
  virtual ~tagBuZhangOpResult();

  tagBuZhangOpResult(const tagBuZhangOpResult& from);

  inline tagBuZhangOpResult& operator=(const tagBuZhangOpResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagBuZhangOpResult& default_instance();

  void Swap(tagBuZhangOpResult* other);

  // implements Message ----------------------------------------------

  tagBuZhangOpResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagBuZhangOpResult& from);
  void MergeFrom(const tagBuZhangOpResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 BuzhangOpType = 1;
  inline bool has_buzhangoptype() const;
  inline void clear_buzhangoptype();
  static const int kBuzhangOpTypeFieldNumber = 1;
  inline ::google::protobuf::int32 buzhangoptype() const;
  inline void set_buzhangoptype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.tagBuZhangOpResult)
 private:
  inline void set_has_buzhangoptype();
  inline void clear_has_buzhangoptype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 buzhangoptype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static tagBuZhangOpResult* default_instance_;
};
// -------------------------------------------------------------------

class ReordInfo : public ::google::protobuf::Message {
 public:
  ReordInfo();
  virtual ~ReordInfo();

  ReordInfo(const ReordInfo& from);

  inline ReordInfo& operator=(const ReordInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReordInfo& default_instance();

  void Swap(ReordInfo* other);

  // implements Message ----------------------------------------------

  ReordInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReordInfo& from);
  void MergeFrom(const ReordInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 banker_num = 1;
  inline bool has_banker_num() const;
  inline void clear_banker_num();
  static const int kBankerNumFieldNumber = 1;
  inline ::google::protobuf::int32 banker_num() const;
  inline void set_banker_num(::google::protobuf::int32 value);

  // optional int32 hu_num = 2;
  inline bool has_hu_num() const;
  inline void clear_hu_num();
  static const int kHuNumFieldNumber = 2;
  inline ::google::protobuf::int32 hu_num() const;
  inline void set_hu_num(::google::protobuf::int32 value);

  // optional int32 piaolaizi_num = 3;
  inline bool has_piaolaizi_num() const;
  inline void clear_piaolaizi_num();
  static const int kPiaolaiziNumFieldNumber = 3;
  inline ::google::protobuf::int32 piaolaizi_num() const;
  inline void set_piaolaizi_num(::google::protobuf::int32 value);

  // optional int32 outtime_num = 4;
  inline bool has_outtime_num() const;
  inline void clear_outtime_num();
  static const int kOuttimeNumFieldNumber = 4;
  inline ::google::protobuf::int32 outtime_num() const;
  inline void set_outtime_num(::google::protobuf::int32 value);

  // optional int32 totalscore = 5;
  inline bool has_totalscore() const;
  inline void clear_totalscore();
  static const int kTotalscoreFieldNumber = 5;
  inline ::google::protobuf::int32 totalscore() const;
  inline void set_totalscore(::google::protobuf::int32 value);

  // optional int32 WinCounts = 6;
  inline bool has_wincounts() const;
  inline void clear_wincounts();
  static const int kWinCountsFieldNumber = 6;
  inline ::google::protobuf::int32 wincounts() const;
  inline void set_wincounts(::google::protobuf::int32 value);

  // optional int32 GangTimes = 7;
  inline bool has_gangtimes() const;
  inline void clear_gangtimes();
  static const int kGangTimesFieldNumber = 7;
  inline ::google::protobuf::int32 gangtimes() const;
  inline void set_gangtimes(::google::protobuf::int32 value);

  // optional int32 DianGangTimes = 8;
  inline bool has_diangangtimes() const;
  inline void clear_diangangtimes();
  static const int kDianGangTimesFieldNumber = 8;
  inline ::google::protobuf::int32 diangangtimes() const;
  inline void set_diangangtimes(::google::protobuf::int32 value);

  // optional int32 Ex1 = 9;
  inline bool has_ex1() const;
  inline void clear_ex1();
  static const int kEx1FieldNumber = 9;
  inline ::google::protobuf::int32 ex1() const;
  inline void set_ex1(::google::protobuf::int32 value);

  // optional int32 Ex2 = 10;
  inline bool has_ex2() const;
  inline void clear_ex2();
  static const int kEx2FieldNumber = 10;
  inline ::google::protobuf::int32 ex2() const;
  inline void set_ex2(::google::protobuf::int32 value);

  // optional int32 zimo_num = 11;
  inline bool has_zimo_num() const;
  inline void clear_zimo_num();
  static const int kZimoNumFieldNumber = 11;
  inline ::google::protobuf::int32 zimo_num() const;
  inline void set_zimo_num(::google::protobuf::int32 value);

  // optional int32 jiepao_num = 12;
  inline bool has_jiepao_num() const;
  inline void clear_jiepao_num();
  static const int kJiepaoNumFieldNumber = 12;
  inline ::google::protobuf::int32 jiepao_num() const;
  inline void set_jiepao_num(::google::protobuf::int32 value);

  // optional int32 dianpao_num = 13;
  inline bool has_dianpao_num() const;
  inline void clear_dianpao_num();
  static const int kDianpaoNumFieldNumber = 13;
  inline ::google::protobuf::int32 dianpao_num() const;
  inline void set_dianpao_num(::google::protobuf::int32 value);

  // optional int32 minggang_num = 14;
  inline bool has_minggang_num() const;
  inline void clear_minggang_num();
  static const int kMinggangNumFieldNumber = 14;
  inline ::google::protobuf::int32 minggang_num() const;
  inline void set_minggang_num(::google::protobuf::int32 value);

  // optional int32 angang_num = 15;
  inline bool has_angang_num() const;
  inline void clear_angang_num();
  static const int kAngangNumFieldNumber = 15;
  inline ::google::protobuf::int32 angang_num() const;
  inline void set_angang_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.ReordInfo)
 private:
  inline void set_has_banker_num();
  inline void clear_has_banker_num();
  inline void set_has_hu_num();
  inline void clear_has_hu_num();
  inline void set_has_piaolaizi_num();
  inline void clear_has_piaolaizi_num();
  inline void set_has_outtime_num();
  inline void clear_has_outtime_num();
  inline void set_has_totalscore();
  inline void clear_has_totalscore();
  inline void set_has_wincounts();
  inline void clear_has_wincounts();
  inline void set_has_gangtimes();
  inline void clear_has_gangtimes();
  inline void set_has_diangangtimes();
  inline void clear_has_diangangtimes();
  inline void set_has_ex1();
  inline void clear_has_ex1();
  inline void set_has_ex2();
  inline void clear_has_ex2();
  inline void set_has_zimo_num();
  inline void clear_has_zimo_num();
  inline void set_has_jiepao_num();
  inline void clear_has_jiepao_num();
  inline void set_has_dianpao_num();
  inline void clear_has_dianpao_num();
  inline void set_has_minggang_num();
  inline void clear_has_minggang_num();
  inline void set_has_angang_num();
  inline void clear_has_angang_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 banker_num_;
  ::google::protobuf::int32 hu_num_;
  ::google::protobuf::int32 piaolaizi_num_;
  ::google::protobuf::int32 outtime_num_;
  ::google::protobuf::int32 totalscore_;
  ::google::protobuf::int32 wincounts_;
  ::google::protobuf::int32 gangtimes_;
  ::google::protobuf::int32 diangangtimes_;
  ::google::protobuf::int32 ex1_;
  ::google::protobuf::int32 ex2_;
  ::google::protobuf::int32 zimo_num_;
  ::google::protobuf::int32 jiepao_num_;
  ::google::protobuf::int32 dianpao_num_;
  ::google::protobuf::int32 minggang_num_;
  ::google::protobuf::int32 angang_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static ReordInfo* default_instance_;
};
// -------------------------------------------------------------------

class GameEndRecord : public ::google::protobuf::Message {
 public:
  GameEndRecord();
  virtual ~GameEndRecord();

  GameEndRecord(const GameEndRecord& from);

  inline GameEndRecord& operator=(const GameEndRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameEndRecord& default_instance();

  void Swap(GameEndRecord* other);

  // implements Message ----------------------------------------------

  GameEndRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameEndRecord& from);
  void MergeFrom(const GameEndRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.game.hunanmj.ReordInfo UserRecoreInfo = 1;
  inline int userrecoreinfo_size() const;
  inline void clear_userrecoreinfo();
  static const int kUserRecoreInfoFieldNumber = 1;
  inline const ::proto::game::hunanmj::ReordInfo& userrecoreinfo(int index) const;
  inline ::proto::game::hunanmj::ReordInfo* mutable_userrecoreinfo(int index);
  inline ::proto::game::hunanmj::ReordInfo* add_userrecoreinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::ReordInfo >&
      userrecoreinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::ReordInfo >*
      mutable_userrecoreinfo();

  // repeated int32 MostDianPaoUser = 2;
  inline int mostdianpaouser_size() const;
  inline void clear_mostdianpaouser();
  static const int kMostDianPaoUserFieldNumber = 2;
  inline ::google::protobuf::int32 mostdianpaouser(int index) const;
  inline void set_mostdianpaouser(int index, ::google::protobuf::int32 value);
  inline void add_mostdianpaouser(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mostdianpaouser() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mostdianpaouser();

  // repeated int32 MostWinScoreUser = 3;
  inline int mostwinscoreuser_size() const;
  inline void clear_mostwinscoreuser();
  static const int kMostWinScoreUserFieldNumber = 3;
  inline ::google::protobuf::int32 mostwinscoreuser(int index) const;
  inline void set_mostwinscoreuser(int index, ::google::protobuf::int32 value);
  inline void add_mostwinscoreuser(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mostwinscoreuser() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mostwinscoreuser();

  // optional int32 DataTime = 4;
  inline bool has_datatime() const;
  inline void clear_datatime();
  static const int kDataTimeFieldNumber = 4;
  inline ::google::protobuf::int32 datatime() const;
  inline void set_datatime(::google::protobuf::int32 value);

  // repeated int32 uid = 5;
  inline int uid_size() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 5;
  inline ::google::protobuf::int32 uid(int index) const;
  inline void set_uid(int index, ::google::protobuf::int32 value);
  inline void add_uid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      uid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_uid();

  // repeated string name = 6;
  inline int name_size() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name(int index) const;
  inline ::std::string* mutable_name(int index);
  inline void set_name(int index, const ::std::string& value);
  inline void set_name(int index, const char* value);
  inline void set_name(int index, const char* value, size_t size);
  inline ::std::string* add_name();
  inline void add_name(const ::std::string& value);
  inline void add_name(const char* value);
  inline void add_name(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& name() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_name();

  // repeated string avatar = 7;
  inline int avatar_size() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 7;
  inline const ::std::string& avatar(int index) const;
  inline ::std::string* mutable_avatar(int index);
  inline void set_avatar(int index, const ::std::string& value);
  inline void set_avatar(int index, const char* value);
  inline void set_avatar(int index, const char* value, size_t size);
  inline ::std::string* add_avatar();
  inline void add_avatar(const ::std::string& value);
  inline void add_avatar(const char* value);
  inline void add_avatar(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& avatar() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_avatar();

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.GameEndRecord)
 private:
  inline void set_has_datatime();
  inline void clear_has_datatime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::ReordInfo > userrecoreinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mostdianpaouser_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mostwinscoreuser_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > uid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> avatar_;
  ::google::protobuf::int32 datatime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static GameEndRecord* default_instance_;
};
// -------------------------------------------------------------------

class RoundScore : public ::google::protobuf::Message {
 public:
  RoundScore();
  virtual ~RoundScore();

  RoundScore(const RoundScore& from);

  inline RoundScore& operator=(const RoundScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoundScore& default_instance();

  void Swap(RoundScore* other);

  // implements Message ----------------------------------------------

  RoundScore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoundScore& from);
  void MergeFrom(const RoundScore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 Score = 1;
  inline int score_size() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  inline ::google::protobuf::int32 score(int index) const;
  inline void set_score(int index, ::google::protobuf::int32 value);
  inline void add_score(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      score() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_score();

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.RoundScore)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static RoundScore* default_instance_;
};
// -------------------------------------------------------------------

class TotalRoundScore : public ::google::protobuf::Message {
 public:
  TotalRoundScore();
  virtual ~TotalRoundScore();

  TotalRoundScore(const TotalRoundScore& from);

  inline TotalRoundScore& operator=(const TotalRoundScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TotalRoundScore& default_instance();

  void Swap(TotalRoundScore* other);

  // implements Message ----------------------------------------------

  TotalRoundScore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TotalRoundScore& from);
  void MergeFrom(const TotalRoundScore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.game.hunanmj.RoundScore round = 1;
  inline int round_size() const;
  inline void clear_round();
  static const int kRoundFieldNumber = 1;
  inline const ::proto::game::hunanmj::RoundScore& round(int index) const;
  inline ::proto::game::hunanmj::RoundScore* mutable_round(int index);
  inline ::proto::game::hunanmj::RoundScore* add_round();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::RoundScore >&
      round() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::RoundScore >*
      mutable_round();

  // optional int32 roundcount = 2;
  inline bool has_roundcount() const;
  inline void clear_roundcount();
  static const int kRoundcountFieldNumber = 2;
  inline ::google::protobuf::int32 roundcount() const;
  inline void set_roundcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.hunanmj.TotalRoundScore)
 private:
  inline void set_has_roundcount();
  inline void clear_has_roundcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::RoundScore > round_;
  ::google::protobuf::int32 roundcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_hunangameproto_2eproto();
  friend void protobuf_AssignDesc_hunangameproto_2eproto();
  friend void protobuf_ShutdownFile_hunangameproto_2eproto();

  void InitAsDefaultInstance();
  static TotalRoundScore* default_instance_;
};
// ===================================================================


// ===================================================================

// AckEnSureJoker

// optional int32 OpenCard = 1;
inline bool AckEnSureJoker::has_opencard() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckEnSureJoker::set_has_opencard() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckEnSureJoker::clear_has_opencard() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckEnSureJoker::clear_opencard() {
  opencard_ = 0;
  clear_has_opencard();
}
inline ::google::protobuf::int32 AckEnSureJoker::opencard() const {
  return opencard_;
}
inline void AckEnSureJoker::set_opencard(::google::protobuf::int32 value) {
  set_has_opencard();
  opencard_ = value;
}

// optional int32 CurJokerCard = 2;
inline bool AckEnSureJoker::has_curjokercard() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckEnSureJoker::set_has_curjokercard() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckEnSureJoker::clear_has_curjokercard() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckEnSureJoker::clear_curjokercard() {
  curjokercard_ = 0;
  clear_has_curjokercard();
}
inline ::google::protobuf::int32 AckEnSureJoker::curjokercard() const {
  return curjokercard_;
}
inline void AckEnSureJoker::set_curjokercard(::google::protobuf::int32 value) {
  set_has_curjokercard();
  curjokercard_ = value;
}

// optional int32 JokerType = 3;
inline bool AckEnSureJoker::has_jokertype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AckEnSureJoker::set_has_jokertype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AckEnSureJoker::clear_has_jokertype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AckEnSureJoker::clear_jokertype() {
  jokertype_ = 0;
  clear_has_jokertype();
}
inline ::google::protobuf::int32 AckEnSureJoker::jokertype() const {
  return jokertype_;
}
inline void AckEnSureJoker::set_jokertype(::google::protobuf::int32 value) {
  set_has_jokertype();
  jokertype_ = value;
}

// optional int32 CurJokerCard2 = 4;
inline bool AckEnSureJoker::has_curjokercard2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AckEnSureJoker::set_has_curjokercard2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AckEnSureJoker::clear_has_curjokercard2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AckEnSureJoker::clear_curjokercard2() {
  curjokercard2_ = 0;
  clear_has_curjokercard2();
}
inline ::google::protobuf::int32 AckEnSureJoker::curjokercard2() const {
  return curjokercard2_;
}
inline void AckEnSureJoker::set_curjokercard2(::google::protobuf::int32 value) {
  set_has_curjokercard2();
  curjokercard2_ = value;
}

// optional int32 Position = 5;
inline bool AckEnSureJoker::has_position() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AckEnSureJoker::set_has_position() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AckEnSureJoker::clear_has_position() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AckEnSureJoker::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::google::protobuf::int32 AckEnSureJoker::position() const {
  return position_;
}
inline void AckEnSureJoker::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
}

// optional int32 LeftCardNum = 6;
inline bool AckEnSureJoker::has_leftcardnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AckEnSureJoker::set_has_leftcardnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AckEnSureJoker::clear_has_leftcardnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AckEnSureJoker::clear_leftcardnum() {
  leftcardnum_ = 0;
  clear_has_leftcardnum();
}
inline ::google::protobuf::int32 AckEnSureJoker::leftcardnum() const {
  return leftcardnum_;
}
inline void AckEnSureJoker::set_leftcardnum(::google::protobuf::int32 value) {
  set_has_leftcardnum();
  leftcardnum_ = value;
}

// optional int32 LeftCardNum2 = 8;
inline bool AckEnSureJoker::has_leftcardnum2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AckEnSureJoker::set_has_leftcardnum2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AckEnSureJoker::clear_has_leftcardnum2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AckEnSureJoker::clear_leftcardnum2() {
  leftcardnum2_ = 0;
  clear_has_leftcardnum2();
}
inline ::google::protobuf::int32 AckEnSureJoker::leftcardnum2() const {
  return leftcardnum2_;
}
inline void AckEnSureJoker::set_leftcardnum2(::google::protobuf::int32 value) {
  set_has_leftcardnum2();
  leftcardnum2_ = value;
}

// -------------------------------------------------------------------

// ReqChoosePiao

// optional int32 PiaoNum = 1;
inline bool ReqChoosePiao::has_piaonum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqChoosePiao::set_has_piaonum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqChoosePiao::clear_has_piaonum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqChoosePiao::clear_piaonum() {
  piaonum_ = 0;
  clear_has_piaonum();
}
inline ::google::protobuf::int32 ReqChoosePiao::piaonum() const {
  return piaonum_;
}
inline void ReqChoosePiao::set_piaonum(::google::protobuf::int32 value) {
  set_has_piaonum();
  piaonum_ = value;
}

// -------------------------------------------------------------------

// AckStartPiao

// repeated int32 piaoNum = 1;
inline int AckStartPiao::piaonum_size() const {
  return piaonum_.size();
}
inline void AckStartPiao::clear_piaonum() {
  piaonum_.Clear();
}
inline ::google::protobuf::int32 AckStartPiao::piaonum(int index) const {
  return piaonum_.Get(index);
}
inline void AckStartPiao::set_piaonum(int index, ::google::protobuf::int32 value) {
  piaonum_.Set(index, value);
}
inline void AckStartPiao::add_piaonum(::google::protobuf::int32 value) {
  piaonum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckStartPiao::piaonum() const {
  return piaonum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckStartPiao::mutable_piaonum() {
  return &piaonum_;
}

// -------------------------------------------------------------------

// AckBroadPiao

// optional int32 chariid = 1;
inline bool AckBroadPiao::has_chariid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckBroadPiao::set_has_chariid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckBroadPiao::clear_has_chariid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckBroadPiao::clear_chariid() {
  chariid_ = 0;
  clear_has_chariid();
}
inline ::google::protobuf::int32 AckBroadPiao::chariid() const {
  return chariid_;
}
inline void AckBroadPiao::set_chariid(::google::protobuf::int32 value) {
  set_has_chariid();
  chariid_ = value;
}

// optional int32 UserPiao = 2;
inline bool AckBroadPiao::has_userpiao() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckBroadPiao::set_has_userpiao() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckBroadPiao::clear_has_userpiao() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckBroadPiao::clear_userpiao() {
  userpiao_ = 0;
  clear_has_userpiao();
}
inline ::google::protobuf::int32 AckBroadPiao::userpiao() const {
  return userpiao_;
}
inline void AckBroadPiao::set_userpiao(::google::protobuf::int32 value) {
  set_has_userpiao();
  userpiao_ = value;
}

// -------------------------------------------------------------------

// tagGangHu

// optional int32 Type = 1;
inline bool tagGangHu::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagGangHu::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagGangHu::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagGangHu::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 tagGangHu::type() const {
  return type_;
}
inline void tagGangHu::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 Chairid = 2;
inline bool tagGangHu::has_chairid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagGangHu::set_has_chairid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagGangHu::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagGangHu::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 tagGangHu::chairid() const {
  return chairid_;
}
inline void tagGangHu::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// optional int32 Card = 3;
inline bool tagGangHu::has_card() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tagGangHu::set_has_card() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tagGangHu::clear_has_card() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tagGangHu::clear_card() {
  card_ = 0;
  clear_has_card();
}
inline ::google::protobuf::int32 tagGangHu::card() const {
  return card_;
}
inline void tagGangHu::set_card(::google::protobuf::int32 value) {
  set_has_card();
  card_ = value;
}

// optional int32 score = 4;
inline bool tagGangHu::has_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void tagGangHu::set_has_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void tagGangHu::clear_has_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void tagGangHu::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 tagGangHu::score() const {
  return score_;
}
inline void tagGangHu::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// tagEndGangHu

// repeated .proto.game.hunanmj.tagGangHu GangHu = 1;
inline int tagEndGangHu::ganghu_size() const {
  return ganghu_.size();
}
inline void tagEndGangHu::clear_ganghu() {
  ganghu_.Clear();
}
inline const ::proto::game::hunanmj::tagGangHu& tagEndGangHu::ganghu(int index) const {
  return ganghu_.Get(index);
}
inline ::proto::game::hunanmj::tagGangHu* tagEndGangHu::mutable_ganghu(int index) {
  return ganghu_.Mutable(index);
}
inline ::proto::game::hunanmj::tagGangHu* tagEndGangHu::add_ganghu() {
  return ganghu_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagGangHu >&
tagEndGangHu::ganghu() const {
  return ganghu_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagGangHu >*
tagEndGangHu::mutable_ganghu() {
  return &ganghu_;
}

// -------------------------------------------------------------------

// tagHu

// optional int32 Hucard = 1;
inline bool tagHu::has_hucard() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagHu::set_has_hucard() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagHu::clear_has_hucard() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagHu::clear_hucard() {
  hucard_ = 0;
  clear_has_hucard();
}
inline ::google::protobuf::int32 tagHu::hucard() const {
  return hucard_;
}
inline void tagHu::set_hucard(::google::protobuf::int32 value) {
  set_has_hucard();
  hucard_ = value;
}

// optional int32 pasHuchairid = 2;
inline bool tagHu::has_pashuchairid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagHu::set_has_pashuchairid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagHu::clear_has_pashuchairid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagHu::clear_pashuchairid() {
  pashuchairid_ = 0;
  clear_has_pashuchairid();
}
inline ::google::protobuf::int32 tagHu::pashuchairid() const {
  return pashuchairid_;
}
inline void tagHu::set_pashuchairid(::google::protobuf::int32 value) {
  set_has_pashuchairid();
  pashuchairid_ = value;
}

// -------------------------------------------------------------------

// tagUserHuInfo

// optional int32 HuTotalscore = 1;
inline bool tagUserHuInfo::has_hutotalscore() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagUserHuInfo::set_has_hutotalscore() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagUserHuInfo::clear_has_hutotalscore() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagUserHuInfo::clear_hutotalscore() {
  hutotalscore_ = 0;
  clear_has_hutotalscore();
}
inline ::google::protobuf::int32 tagUserHuInfo::hutotalscore() const {
  return hutotalscore_;
}
inline void tagUserHuInfo::set_hutotalscore(::google::protobuf::int32 value) {
  set_has_hutotalscore();
  hutotalscore_ = value;
}

// repeated .proto.game.hunanmj.tagHu stHuinfo = 2;
inline int tagUserHuInfo::sthuinfo_size() const {
  return sthuinfo_.size();
}
inline void tagUserHuInfo::clear_sthuinfo() {
  sthuinfo_.Clear();
}
inline const ::proto::game::hunanmj::tagHu& tagUserHuInfo::sthuinfo(int index) const {
  return sthuinfo_.Get(index);
}
inline ::proto::game::hunanmj::tagHu* tagUserHuInfo::mutable_sthuinfo(int index) {
  return sthuinfo_.Mutable(index);
}
inline ::proto::game::hunanmj::tagHu* tagUserHuInfo::add_sthuinfo() {
  return sthuinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagHu >&
tagUserHuInfo::sthuinfo() const {
  return sthuinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagHu >*
tagUserHuInfo::mutable_sthuinfo() {
  return &sthuinfo_;
}

// -------------------------------------------------------------------

// ReturnGangInfo

// repeated int32 State = 1;
inline int ReturnGangInfo::state_size() const {
  return state_.size();
}
inline void ReturnGangInfo::clear_state() {
  state_.Clear();
}
inline ::google::protobuf::int32 ReturnGangInfo::state(int index) const {
  return state_.Get(index);
}
inline void ReturnGangInfo::set_state(int index, ::google::protobuf::int32 value) {
  state_.Set(index, value);
}
inline void ReturnGangInfo::add_state(::google::protobuf::int32 value) {
  state_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ReturnGangInfo::state() const {
  return state_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ReturnGangInfo::mutable_state() {
  return &state_;
}

// repeated int32 Card = 2;
inline int ReturnGangInfo::card_size() const {
  return card_.size();
}
inline void ReturnGangInfo::clear_card() {
  card_.Clear();
}
inline ::google::protobuf::int32 ReturnGangInfo::card(int index) const {
  return card_.Get(index);
}
inline void ReturnGangInfo::set_card(int index, ::google::protobuf::int32 value) {
  card_.Set(index, value);
}
inline void ReturnGangInfo::add_card(::google::protobuf::int32 value) {
  card_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ReturnGangInfo::card() const {
  return card_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ReturnGangInfo::mutable_card() {
  return &card_;
}

// repeated int32 Returngangscore = 3;
inline int ReturnGangInfo::returngangscore_size() const {
  return returngangscore_.size();
}
inline void ReturnGangInfo::clear_returngangscore() {
  returngangscore_.Clear();
}
inline ::google::protobuf::int32 ReturnGangInfo::returngangscore(int index) const {
  return returngangscore_.Get(index);
}
inline void ReturnGangInfo::set_returngangscore(int index, ::google::protobuf::int32 value) {
  returngangscore_.Set(index, value);
}
inline void ReturnGangInfo::add_returngangscore(::google::protobuf::int32 value) {
  returngangscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ReturnGangInfo::returngangscore() const {
  return returngangscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ReturnGangInfo::mutable_returngangscore() {
  return &returngangscore_;
}

// -------------------------------------------------------------------

// tagJiangma

// required int32 Num = 1;
inline bool tagJiangma::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagJiangma::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagJiangma::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagJiangma::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 tagJiangma::num() const {
  return num_;
}
inline void tagJiangma::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// required int32 CardType = 2;
inline bool tagJiangma::has_cardtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagJiangma::set_has_cardtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagJiangma::clear_has_cardtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagJiangma::clear_cardtype() {
  cardtype_ = 0;
  clear_has_cardtype();
}
inline ::google::protobuf::int32 tagJiangma::cardtype() const {
  return cardtype_;
}
inline void tagJiangma::set_cardtype(::google::protobuf::int32 value) {
  set_has_cardtype();
  cardtype_ = value;
}

// required int32 Chairid = 3;
inline bool tagJiangma::has_chairid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tagJiangma::set_has_chairid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tagJiangma::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tagJiangma::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 tagJiangma::chairid() const {
  return chairid_;
}
inline void tagJiangma::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// repeated int32 Card = 4;
inline int tagJiangma::card_size() const {
  return card_.size();
}
inline void tagJiangma::clear_card() {
  card_.Clear();
}
inline ::google::protobuf::int32 tagJiangma::card(int index) const {
  return card_.Get(index);
}
inline void tagJiangma::set_card(int index, ::google::protobuf::int32 value) {
  card_.Set(index, value);
}
inline void tagJiangma::add_card(::google::protobuf::int32 value) {
  card_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagJiangma::card() const {
  return card_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagJiangma::mutable_card() {
  return &card_;
}

// repeated int32 ZhongChairID = 5;
inline int tagJiangma::zhongchairid_size() const {
  return zhongchairid_.size();
}
inline void tagJiangma::clear_zhongchairid() {
  zhongchairid_.Clear();
}
inline ::google::protobuf::int32 tagJiangma::zhongchairid(int index) const {
  return zhongchairid_.Get(index);
}
inline void tagJiangma::set_zhongchairid(int index, ::google::protobuf::int32 value) {
  zhongchairid_.Set(index, value);
}
inline void tagJiangma::add_zhongchairid(::google::protobuf::int32 value) {
  zhongchairid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagJiangma::zhongchairid() const {
  return zhongchairid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagJiangma::mutable_zhongchairid() {
  return &zhongchairid_;
}

// -------------------------------------------------------------------

// tagDaShai

// repeated int32 Shai = 1;
inline int tagDaShai::shai_size() const {
  return shai_.size();
}
inline void tagDaShai::clear_shai() {
  shai_.Clear();
}
inline ::google::protobuf::int32 tagDaShai::shai(int index) const {
  return shai_.Get(index);
}
inline void tagDaShai::set_shai(int index, ::google::protobuf::int32 value) {
  shai_.Set(index, value);
}
inline void tagDaShai::add_shai(::google::protobuf::int32 value) {
  shai_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagDaShai::shai() const {
  return shai_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagDaShai::mutable_shai() {
  return &shai_;
}

// required int32 Chairid = 2;
inline bool tagDaShai::has_chairid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagDaShai::set_has_chairid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagDaShai::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagDaShai::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 tagDaShai::chairid() const {
  return chairid_;
}
inline void tagDaShai::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// required int32 Type = 3;
inline bool tagDaShai::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tagDaShai::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tagDaShai::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tagDaShai::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 tagDaShai::type() const {
  return type_;
}
inline void tagDaShai::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated int32 ZhongChairID = 4;
inline int tagDaShai::zhongchairid_size() const {
  return zhongchairid_.size();
}
inline void tagDaShai::clear_zhongchairid() {
  zhongchairid_.Clear();
}
inline ::google::protobuf::int32 tagDaShai::zhongchairid(int index) const {
  return zhongchairid_.Get(index);
}
inline void tagDaShai::set_zhongchairid(int index, ::google::protobuf::int32 value) {
  zhongchairid_.Set(index, value);
}
inline void tagDaShai::add_zhongchairid(::google::protobuf::int32 value) {
  zhongchairid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagDaShai::zhongchairid() const {
  return zhongchairid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagDaShai::mutable_zhongchairid() {
  return &zhongchairid_;
}

// repeated int32 Score = 5;
inline int tagDaShai::score_size() const {
  return score_.size();
}
inline void tagDaShai::clear_score() {
  score_.Clear();
}
inline ::google::protobuf::int32 tagDaShai::score(int index) const {
  return score_.Get(index);
}
inline void tagDaShai::set_score(int index, ::google::protobuf::int32 value) {
  score_.Set(index, value);
}
inline void tagDaShai::add_score(::google::protobuf::int32 value) {
  score_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagDaShai::score() const {
  return score_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagDaShai::mutable_score() {
  return &score_;
}

// optional int32 ZhongPai = 6;
inline bool tagDaShai::has_zhongpai() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void tagDaShai::set_has_zhongpai() {
  _has_bits_[0] |= 0x00000020u;
}
inline void tagDaShai::clear_has_zhongpai() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void tagDaShai::clear_zhongpai() {
  zhongpai_ = 0;
  clear_has_zhongpai();
}
inline ::google::protobuf::int32 tagDaShai::zhongpai() const {
  return zhongpai_;
}
inline void tagDaShai::set_zhongpai(::google::protobuf::int32 value) {
  set_has_zhongpai();
  zhongpai_ = value;
}

// -------------------------------------------------------------------

// tagBanInfo

// required int32 Chairid = 1;
inline bool tagBanInfo::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagBanInfo::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagBanInfo::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagBanInfo::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 tagBanInfo::chairid() const {
  return chairid_;
}
inline void tagBanInfo::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// repeated int32 ShowCard = 2;
inline int tagBanInfo::showcard_size() const {
  return showcard_.size();
}
inline void tagBanInfo::clear_showcard() {
  showcard_.Clear();
}
inline ::google::protobuf::int32 tagBanInfo::showcard(int index) const {
  return showcard_.Get(index);
}
inline void tagBanInfo::set_showcard(int index, ::google::protobuf::int32 value) {
  showcard_.Set(index, value);
}
inline void tagBanInfo::add_showcard(::google::protobuf::int32 value) {
  showcard_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagBanInfo::showcard() const {
  return showcard_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagBanInfo::mutable_showcard() {
  return &showcard_;
}

// repeated .proto.game.hunanmj.AddFanInfo addfan = 3;
inline int tagBanInfo::addfan_size() const {
  return addfan_.size();
}
inline void tagBanInfo::clear_addfan() {
  addfan_.Clear();
}
inline const ::proto::game::hunanmj::AddFanInfo& tagBanInfo::addfan(int index) const {
  return addfan_.Get(index);
}
inline ::proto::game::hunanmj::AddFanInfo* tagBanInfo::mutable_addfan(int index) {
  return addfan_.Mutable(index);
}
inline ::proto::game::hunanmj::AddFanInfo* tagBanInfo::add_addfan() {
  return addfan_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::AddFanInfo >&
tagBanInfo::addfan() const {
  return addfan_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::AddFanInfo >*
tagBanInfo::mutable_addfan() {
  return &addfan_;
}

// -------------------------------------------------------------------

// tagBanPai

// repeated .proto.game.hunanmj.tagBanInfo banpai = 1;
inline int tagBanPai::banpai_size() const {
  return banpai_.size();
}
inline void tagBanPai::clear_banpai() {
  banpai_.Clear();
}
inline const ::proto::game::hunanmj::tagBanInfo& tagBanPai::banpai(int index) const {
  return banpai_.Get(index);
}
inline ::proto::game::hunanmj::tagBanInfo* tagBanPai::mutable_banpai(int index) {
  return banpai_.Mutable(index);
}
inline ::proto::game::hunanmj::tagBanInfo* tagBanPai::add_banpai() {
  return banpai_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagBanInfo >&
tagBanPai::banpai() const {
  return banpai_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagBanInfo >*
tagBanPai::mutable_banpai() {
  return &banpai_;
}

// -------------------------------------------------------------------

// tagBanPaiEnd

// required int32 Chairid = 1;
inline bool tagBanPaiEnd::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagBanPaiEnd::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagBanPaiEnd::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagBanPaiEnd::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 tagBanPaiEnd::chairid() const {
  return chairid_;
}
inline void tagBanPaiEnd::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// -------------------------------------------------------------------

// tagGangInfo

// required int32 Card = 1;
inline bool tagGangInfo::has_card() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagGangInfo::set_has_card() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagGangInfo::clear_has_card() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagGangInfo::clear_card() {
  card_ = 0;
  clear_has_card();
}
inline ::google::protobuf::int32 tagGangInfo::card() const {
  return card_;
}
inline void tagGangInfo::set_card(::google::protobuf::int32 value) {
  set_has_card();
  card_ = value;
}

// optional int32 state = 2;
inline bool tagGangInfo::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagGangInfo::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagGangInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagGangInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 tagGangInfo::state() const {
  return state_;
}
inline void tagGangInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// GangAckOpNotify

// required int32 ChairID = 1;
inline bool GangAckOpNotify::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GangAckOpNotify::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GangAckOpNotify::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GangAckOpNotify::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 GangAckOpNotify::chairid() const {
  return chairid_;
}
inline void GangAckOpNotify::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// optional int32 OpType = 2;
inline bool GangAckOpNotify::has_optype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GangAckOpNotify::set_has_optype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GangAckOpNotify::clear_has_optype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GangAckOpNotify::clear_optype() {
  optype_ = 0;
  clear_has_optype();
}
inline ::google::protobuf::int32 GangAckOpNotify::optype() const {
  return optype_;
}
inline void GangAckOpNotify::set_optype(::google::protobuf::int32 value) {
  set_has_optype();
  optype_ = value;
}

// optional int32 Card = 3;
inline bool GangAckOpNotify::has_card() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GangAckOpNotify::set_has_card() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GangAckOpNotify::clear_has_card() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GangAckOpNotify::clear_card() {
  card_ = 0;
  clear_has_card();
}
inline ::google::protobuf::int32 GangAckOpNotify::card() const {
  return card_;
}
inline void GangAckOpNotify::set_card(::google::protobuf::int32 value) {
  set_has_card();
  card_ = value;
}

// repeated .proto.game.hunanmj.tagGangInfo Gang = 4;
inline int GangAckOpNotify::gang_size() const {
  return gang_.size();
}
inline void GangAckOpNotify::clear_gang() {
  gang_.Clear();
}
inline const ::proto::game::hunanmj::tagGangInfo& GangAckOpNotify::gang(int index) const {
  return gang_.Get(index);
}
inline ::proto::game::hunanmj::tagGangInfo* GangAckOpNotify::mutable_gang(int index) {
  return gang_.Mutable(index);
}
inline ::proto::game::hunanmj::tagGangInfo* GangAckOpNotify::add_gang() {
  return gang_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagGangInfo >&
GangAckOpNotify::gang() const {
  return gang_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagGangInfo >*
GangAckOpNotify::mutable_gang() {
  return &gang_;
}

// optional .proto.game.hunanmj.tagBuZhang bu = 5;
inline bool GangAckOpNotify::has_bu() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GangAckOpNotify::set_has_bu() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GangAckOpNotify::clear_has_bu() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GangAckOpNotify::clear_bu() {
  if (bu_ != NULL) bu_->::proto::game::hunanmj::tagBuZhang::Clear();
  clear_has_bu();
}
inline const ::proto::game::hunanmj::tagBuZhang& GangAckOpNotify::bu() const {
  return bu_ != NULL ? *bu_ : *default_instance_->bu_;
}
inline ::proto::game::hunanmj::tagBuZhang* GangAckOpNotify::mutable_bu() {
  set_has_bu();
  if (bu_ == NULL) bu_ = new ::proto::game::hunanmj::tagBuZhang;
  return bu_;
}
inline ::proto::game::hunanmj::tagBuZhang* GangAckOpNotify::release_bu() {
  clear_has_bu();
  ::proto::game::hunanmj::tagBuZhang* temp = bu_;
  bu_ = NULL;
  return temp;
}
inline void GangAckOpNotify::set_allocated_bu(::proto::game::hunanmj::tagBuZhang* bu) {
  delete bu_;
  bu_ = bu;
  if (bu) {
    set_has_bu();
  } else {
    clear_has_bu();
  }
}

// -------------------------------------------------------------------

// tagHuInfo

// required int32 Card = 1;
inline bool tagHuInfo::has_card() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagHuInfo::set_has_card() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagHuInfo::clear_has_card() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagHuInfo::clear_card() {
  card_ = 0;
  clear_has_card();
}
inline ::google::protobuf::int32 tagHuInfo::card() const {
  return card_;
}
inline void tagHuInfo::set_card(::google::protobuf::int32 value) {
  set_has_card();
  card_ = value;
}

// optional int32 LeftNum = 2;
inline bool tagHuInfo::has_leftnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagHuInfo::set_has_leftnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagHuInfo::clear_has_leftnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagHuInfo::clear_leftnum() {
  leftnum_ = 0;
  clear_has_leftnum();
}
inline ::google::protobuf::int32 tagHuInfo::leftnum() const {
  return leftnum_;
}
inline void tagHuInfo::set_leftnum(::google::protobuf::int32 value) {
  set_has_leftnum();
  leftnum_ = value;
}

// optional int32 HuFanNum = 3;
inline bool tagHuInfo::has_hufannum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tagHuInfo::set_has_hufannum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tagHuInfo::clear_has_hufannum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tagHuInfo::clear_hufannum() {
  hufannum_ = 0;
  clear_has_hufannum();
}
inline ::google::protobuf::int32 tagHuInfo::hufannum() const {
  return hufannum_;
}
inline void tagHuInfo::set_hufannum(::google::protobuf::int32 value) {
  set_has_hufannum();
  hufannum_ = value;
}

// -------------------------------------------------------------------

// tagDaShaiPaiCount

// optional int32 shaiSum = 1;
inline bool tagDaShaiPaiCount::has_shaisum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagDaShaiPaiCount::set_has_shaisum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagDaShaiPaiCount::clear_has_shaisum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagDaShaiPaiCount::clear_shaisum() {
  shaisum_ = 0;
  clear_has_shaisum();
}
inline ::google::protobuf::int32 tagDaShaiPaiCount::shaisum() const {
  return shaisum_;
}
inline void tagDaShaiPaiCount::set_shaisum(::google::protobuf::int32 value) {
  set_has_shaisum();
  shaisum_ = value;
}

// optional int32 paiCount = 2;
inline bool tagDaShaiPaiCount::has_paicount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagDaShaiPaiCount::set_has_paicount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagDaShaiPaiCount::clear_has_paicount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagDaShaiPaiCount::clear_paicount() {
  paicount_ = 0;
  clear_has_paicount();
}
inline ::google::protobuf::int32 tagDaShaiPaiCount::paicount() const {
  return paicount_;
}
inline void tagDaShaiPaiCount::set_paicount(::google::protobuf::int32 value) {
  set_has_paicount();
  paicount_ = value;
}

// -------------------------------------------------------------------

// tagGang_Zhuapai

// required int32 Chairid = 1;
inline bool tagGang_Zhuapai::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagGang_Zhuapai::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagGang_Zhuapai::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagGang_Zhuapai::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 tagGang_Zhuapai::chairid() const {
  return chairid_;
}
inline void tagGang_Zhuapai::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// repeated int32 Card = 2;
inline int tagGang_Zhuapai::card_size() const {
  return card_.size();
}
inline void tagGang_Zhuapai::clear_card() {
  card_.Clear();
}
inline ::google::protobuf::int32 tagGang_Zhuapai::card(int index) const {
  return card_.Get(index);
}
inline void tagGang_Zhuapai::set_card(int index, ::google::protobuf::int32 value) {
  card_.Set(index, value);
}
inline void tagGang_Zhuapai::add_card(::google::protobuf::int32 value) {
  card_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagGang_Zhuapai::card() const {
  return card_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagGang_Zhuapai::mutable_card() {
  return &card_;
}

// repeated .proto.game.hunanmj.GangAckOpNotify OpNotify = 3;
inline int tagGang_Zhuapai::opnotify_size() const {
  return opnotify_.size();
}
inline void tagGang_Zhuapai::clear_opnotify() {
  opnotify_.Clear();
}
inline const ::proto::game::hunanmj::GangAckOpNotify& tagGang_Zhuapai::opnotify(int index) const {
  return opnotify_.Get(index);
}
inline ::proto::game::hunanmj::GangAckOpNotify* tagGang_Zhuapai::mutable_opnotify(int index) {
  return opnotify_.Mutable(index);
}
inline ::proto::game::hunanmj::GangAckOpNotify* tagGang_Zhuapai::add_opnotify() {
  return opnotify_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::GangAckOpNotify >&
tagGang_Zhuapai::opnotify() const {
  return opnotify_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::GangAckOpNotify >*
tagGang_Zhuapai::mutable_opnotify() {
  return &opnotify_;
}

// optional int32 LeftCardNum = 4;
inline bool tagGang_Zhuapai::has_leftcardnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void tagGang_Zhuapai::set_has_leftcardnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void tagGang_Zhuapai::clear_has_leftcardnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void tagGang_Zhuapai::clear_leftcardnum() {
  leftcardnum_ = 0;
  clear_has_leftcardnum();
}
inline ::google::protobuf::int32 tagGang_Zhuapai::leftcardnum() const {
  return leftcardnum_;
}
inline void tagGang_Zhuapai::set_leftcardnum(::google::protobuf::int32 value) {
  set_has_leftcardnum();
  leftcardnum_ = value;
}

// repeated .proto.game.hunanmj.tagHuInfo HuInfo = 5;
inline int tagGang_Zhuapai::huinfo_size() const {
  return huinfo_.size();
}
inline void tagGang_Zhuapai::clear_huinfo() {
  huinfo_.Clear();
}
inline const ::proto::game::hunanmj::tagHuInfo& tagGang_Zhuapai::huinfo(int index) const {
  return huinfo_.Get(index);
}
inline ::proto::game::hunanmj::tagHuInfo* tagGang_Zhuapai::mutable_huinfo(int index) {
  return huinfo_.Mutable(index);
}
inline ::proto::game::hunanmj::tagHuInfo* tagGang_Zhuapai::add_huinfo() {
  return huinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagHuInfo >&
tagGang_Zhuapai::huinfo() const {
  return huinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagHuInfo >*
tagGang_Zhuapai::mutable_huinfo() {
  return &huinfo_;
}

// optional int32 fz_type = 6;
inline bool tagGang_Zhuapai::has_fz_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void tagGang_Zhuapai::set_has_fz_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void tagGang_Zhuapai::clear_has_fz_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void tagGang_Zhuapai::clear_fz_type() {
  fz_type_ = 0;
  clear_has_fz_type();
}
inline ::google::protobuf::int32 tagGang_Zhuapai::fz_type() const {
  return fz_type_;
}
inline void tagGang_Zhuapai::set_fz_type(::google::protobuf::int32 value) {
  set_has_fz_type();
  fz_type_ = value;
}

// optional .proto.game.hunanmj.tagDaShaiPaiCount shaiPaiCount = 7;
inline bool tagGang_Zhuapai::has_shaipaicount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void tagGang_Zhuapai::set_has_shaipaicount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void tagGang_Zhuapai::clear_has_shaipaicount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void tagGang_Zhuapai::clear_shaipaicount() {
  if (shaipaicount_ != NULL) shaipaicount_->::proto::game::hunanmj::tagDaShaiPaiCount::Clear();
  clear_has_shaipaicount();
}
inline const ::proto::game::hunanmj::tagDaShaiPaiCount& tagGang_Zhuapai::shaipaicount() const {
  return shaipaicount_ != NULL ? *shaipaicount_ : *default_instance_->shaipaicount_;
}
inline ::proto::game::hunanmj::tagDaShaiPaiCount* tagGang_Zhuapai::mutable_shaipaicount() {
  set_has_shaipaicount();
  if (shaipaicount_ == NULL) shaipaicount_ = new ::proto::game::hunanmj::tagDaShaiPaiCount;
  return shaipaicount_;
}
inline ::proto::game::hunanmj::tagDaShaiPaiCount* tagGang_Zhuapai::release_shaipaicount() {
  clear_has_shaipaicount();
  ::proto::game::hunanmj::tagDaShaiPaiCount* temp = shaipaicount_;
  shaipaicount_ = NULL;
  return temp;
}
inline void tagGang_Zhuapai::set_allocated_shaipaicount(::proto::game::hunanmj::tagDaShaiPaiCount* shaipaicount) {
  delete shaipaicount_;
  shaipaicount_ = shaipaicount;
  if (shaipaicount) {
    set_has_shaipaicount();
  } else {
    clear_has_shaipaicount();
  }
}

// optional int32 LeftCardNum2 = 8;
inline bool tagGang_Zhuapai::has_leftcardnum2() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void tagGang_Zhuapai::set_has_leftcardnum2() {
  _has_bits_[0] |= 0x00000080u;
}
inline void tagGang_Zhuapai::clear_has_leftcardnum2() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void tagGang_Zhuapai::clear_leftcardnum2() {
  leftcardnum2_ = 0;
  clear_has_leftcardnum2();
}
inline ::google::protobuf::int32 tagGang_Zhuapai::leftcardnum2() const {
  return leftcardnum2_;
}
inline void tagGang_Zhuapai::set_leftcardnum2(::google::protobuf::int32 value) {
  set_has_leftcardnum2();
  leftcardnum2_ = value;
}

// optional int32 LeftCardNum3 = 9;
inline bool tagGang_Zhuapai::has_leftcardnum3() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void tagGang_Zhuapai::set_has_leftcardnum3() {
  _has_bits_[0] |= 0x00000100u;
}
inline void tagGang_Zhuapai::clear_has_leftcardnum3() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void tagGang_Zhuapai::clear_leftcardnum3() {
  leftcardnum3_ = 0;
  clear_has_leftcardnum3();
}
inline ::google::protobuf::int32 tagGang_Zhuapai::leftcardnum3() const {
  return leftcardnum3_;
}
inline void tagGang_Zhuapai::set_leftcardnum3(::google::protobuf::int32 value) {
  set_has_leftcardnum3();
  leftcardnum3_ = value;
}

// -------------------------------------------------------------------

// tagBuinfo

// required int32 Card = 1;
inline bool tagBuinfo::has_card() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagBuinfo::set_has_card() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagBuinfo::clear_has_card() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagBuinfo::clear_card() {
  card_ = 0;
  clear_has_card();
}
inline ::google::protobuf::int32 tagBuinfo::card() const {
  return card_;
}
inline void tagBuinfo::set_card(::google::protobuf::int32 value) {
  set_has_card();
  card_ = value;
}

// optional int32 state = 2;
inline bool tagBuinfo::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagBuinfo::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagBuinfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagBuinfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 tagBuinfo::state() const {
  return state_;
}
inline void tagBuinfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// tagBuZhang

// repeated .proto.game.hunanmj.tagBuinfo bu = 1;
inline int tagBuZhang::bu_size() const {
  return bu_.size();
}
inline void tagBuZhang::clear_bu() {
  bu_.Clear();
}
inline const ::proto::game::hunanmj::tagBuinfo& tagBuZhang::bu(int index) const {
  return bu_.Get(index);
}
inline ::proto::game::hunanmj::tagBuinfo* tagBuZhang::mutable_bu(int index) {
  return bu_.Mutable(index);
}
inline ::proto::game::hunanmj::tagBuinfo* tagBuZhang::add_bu() {
  return bu_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagBuinfo >&
tagBuZhang::bu() const {
  return bu_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagBuinfo >*
tagBuZhang::mutable_bu() {
  return &bu_;
}

// -------------------------------------------------------------------

// tagUserState

// required int32 ChairID = 1;
inline bool tagUserState::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagUserState::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagUserState::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagUserState::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 tagUserState::chairid() const {
  return chairid_;
}
inline void tagUserState::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// required int32 State = 2;
inline bool tagUserState::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagUserState::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagUserState::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagUserState::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 tagUserState::state() const {
  return state_;
}
inline void tagUserState::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// repeated int32 Score = 3;
inline int tagUserState::score_size() const {
  return score_.size();
}
inline void tagUserState::clear_score() {
  score_.Clear();
}
inline ::google::protobuf::int32 tagUserState::score(int index) const {
  return score_.Get(index);
}
inline void tagUserState::set_score(int index, ::google::protobuf::int32 value) {
  score_.Set(index, value);
}
inline void tagUserState::add_score(::google::protobuf::int32 value) {
  score_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagUserState::score() const {
  return score_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagUserState::mutable_score() {
  return &score_;
}

// -------------------------------------------------------------------

// tagExternalMsg

// optional int32 cmd = 1;
inline bool tagExternalMsg::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagExternalMsg::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagExternalMsg::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagExternalMsg::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 tagExternalMsg::cmd() const {
  return cmd_;
}
inline void tagExternalMsg::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
}

// optional .proto.game.hunanmj.tagUserState type = 2;
inline bool tagExternalMsg::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagExternalMsg::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagExternalMsg::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagExternalMsg::clear_type() {
  if (type_ != NULL) type_->::proto::game::hunanmj::tagUserState::Clear();
  clear_has_type();
}
inline const ::proto::game::hunanmj::tagUserState& tagExternalMsg::type() const {
  return type_ != NULL ? *type_ : *default_instance_->type_;
}
inline ::proto::game::hunanmj::tagUserState* tagExternalMsg::mutable_type() {
  set_has_type();
  if (type_ == NULL) type_ = new ::proto::game::hunanmj::tagUserState;
  return type_;
}
inline ::proto::game::hunanmj::tagUserState* tagExternalMsg::release_type() {
  clear_has_type();
  ::proto::game::hunanmj::tagUserState* temp = type_;
  type_ = NULL;
  return temp;
}
inline void tagExternalMsg::set_allocated_type(::proto::game::hunanmj::tagUserState* type) {
  delete type_;
  type_ = type;
  if (type) {
    set_has_type();
  } else {
    clear_has_type();
  }
}

// -------------------------------------------------------------------

// AckCustomiedInfo

// required int32 gametype = 1;
inline bool AckCustomiedInfo::has_gametype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckCustomiedInfo::set_has_gametype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckCustomiedInfo::clear_has_gametype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckCustomiedInfo::clear_gametype() {
  gametype_ = 0;
  clear_has_gametype();
}
inline ::google::protobuf::int32 AckCustomiedInfo::gametype() const {
  return gametype_;
}
inline void AckCustomiedInfo::set_gametype(::google::protobuf::int32 value) {
  set_has_gametype();
  gametype_ = value;
}

// required int32 isHavePiao = 2;
inline bool AckCustomiedInfo::has_ishavepiao() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckCustomiedInfo::set_has_ishavepiao() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckCustomiedInfo::clear_has_ishavepiao() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckCustomiedInfo::clear_ishavepiao() {
  ishavepiao_ = 0;
  clear_has_ishavepiao();
}
inline ::google::protobuf::int32 AckCustomiedInfo::ishavepiao() const {
  return ishavepiao_;
}
inline void AckCustomiedInfo::set_ishavepiao(::google::protobuf::int32 value) {
  set_has_ishavepiao();
  ishavepiao_ = value;
}

// required int32 Jiangma = 3;
inline bool AckCustomiedInfo::has_jiangma() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AckCustomiedInfo::set_has_jiangma() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AckCustomiedInfo::clear_has_jiangma() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AckCustomiedInfo::clear_jiangma() {
  jiangma_ = 0;
  clear_has_jiangma();
}
inline ::google::protobuf::int32 AckCustomiedInfo::jiangma() const {
  return jiangma_;
}
inline void AckCustomiedInfo::set_jiangma(::google::protobuf::int32 value) {
  set_has_jiangma();
  jiangma_ = value;
}

// required int32 Laizi = 4;
inline bool AckCustomiedInfo::has_laizi() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AckCustomiedInfo::set_has_laizi() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AckCustomiedInfo::clear_has_laizi() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AckCustomiedInfo::clear_laizi() {
  laizi_ = 0;
  clear_has_laizi();
}
inline ::google::protobuf::int32 AckCustomiedInfo::laizi() const {
  return laizi_;
}
inline void AckCustomiedInfo::set_laizi(::google::protobuf::int32 value) {
  set_has_laizi();
  laizi_ = value;
}

// optional int32 piaoTime = 5;
inline bool AckCustomiedInfo::has_piaotime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AckCustomiedInfo::set_has_piaotime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AckCustomiedInfo::clear_has_piaotime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AckCustomiedInfo::clear_piaotime() {
  piaotime_ = 0;
  clear_has_piaotime();
}
inline ::google::protobuf::int32 AckCustomiedInfo::piaotime() const {
  return piaotime_;
}
inline void AckCustomiedInfo::set_piaotime(::google::protobuf::int32 value) {
  set_has_piaotime();
  piaotime_ = value;
}

// repeated int32 UserPiao = 6;
inline int AckCustomiedInfo::userpiao_size() const {
  return userpiao_.size();
}
inline void AckCustomiedInfo::clear_userpiao() {
  userpiao_.Clear();
}
inline ::google::protobuf::int32 AckCustomiedInfo::userpiao(int index) const {
  return userpiao_.Get(index);
}
inline void AckCustomiedInfo::set_userpiao(int index, ::google::protobuf::int32 value) {
  userpiao_.Set(index, value);
}
inline void AckCustomiedInfo::add_userpiao(::google::protobuf::int32 value) {
  userpiao_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckCustomiedInfo::userpiao() const {
  return userpiao_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckCustomiedInfo::mutable_userpiao() {
  return &userpiao_;
}

// optional int32 IsPiaoyet = 7;
inline bool AckCustomiedInfo::has_ispiaoyet() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AckCustomiedInfo::set_has_ispiaoyet() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AckCustomiedInfo::clear_has_ispiaoyet() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AckCustomiedInfo::clear_ispiaoyet() {
  ispiaoyet_ = 0;
  clear_has_ispiaoyet();
}
inline ::google::protobuf::int32 AckCustomiedInfo::ispiaoyet() const {
  return ispiaoyet_;
}
inline void AckCustomiedInfo::set_ispiaoyet(::google::protobuf::int32 value) {
  set_has_ispiaoyet();
  ispiaoyet_ = value;
}

// repeated int32 JinZhiHuanPai = 8;
inline int AckCustomiedInfo::jinzhihuanpai_size() const {
  return jinzhihuanpai_.size();
}
inline void AckCustomiedInfo::clear_jinzhihuanpai() {
  jinzhihuanpai_.Clear();
}
inline ::google::protobuf::int32 AckCustomiedInfo::jinzhihuanpai(int index) const {
  return jinzhihuanpai_.Get(index);
}
inline void AckCustomiedInfo::set_jinzhihuanpai(int index, ::google::protobuf::int32 value) {
  jinzhihuanpai_.Set(index, value);
}
inline void AckCustomiedInfo::add_jinzhihuanpai(::google::protobuf::int32 value) {
  jinzhihuanpai_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckCustomiedInfo::jinzhihuanpai() const {
  return jinzhihuanpai_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckCustomiedInfo::mutable_jinzhihuanpai() {
  return &jinzhihuanpai_;
}

// optional .proto.game.hunanmj.tagBuZhang bu = 9;
inline bool AckCustomiedInfo::has_bu() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AckCustomiedInfo::set_has_bu() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AckCustomiedInfo::clear_has_bu() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AckCustomiedInfo::clear_bu() {
  if (bu_ != NULL) bu_->::proto::game::hunanmj::tagBuZhang::Clear();
  clear_has_bu();
}
inline const ::proto::game::hunanmj::tagBuZhang& AckCustomiedInfo::bu() const {
  return bu_ != NULL ? *bu_ : *default_instance_->bu_;
}
inline ::proto::game::hunanmj::tagBuZhang* AckCustomiedInfo::mutable_bu() {
  set_has_bu();
  if (bu_ == NULL) bu_ = new ::proto::game::hunanmj::tagBuZhang;
  return bu_;
}
inline ::proto::game::hunanmj::tagBuZhang* AckCustomiedInfo::release_bu() {
  clear_has_bu();
  ::proto::game::hunanmj::tagBuZhang* temp = bu_;
  bu_ = NULL;
  return temp;
}
inline void AckCustomiedInfo::set_allocated_bu(::proto::game::hunanmj::tagBuZhang* bu) {
  delete bu_;
  bu_ = bu;
  if (bu) {
    set_has_bu();
  } else {
    clear_has_bu();
  }
}

// repeated int32 RoomConfigID = 10;
inline int AckCustomiedInfo::roomconfigid_size() const {
  return roomconfigid_.size();
}
inline void AckCustomiedInfo::clear_roomconfigid() {
  roomconfigid_.Clear();
}
inline ::google::protobuf::int32 AckCustomiedInfo::roomconfigid(int index) const {
  return roomconfigid_.Get(index);
}
inline void AckCustomiedInfo::set_roomconfigid(int index, ::google::protobuf::int32 value) {
  roomconfigid_.Set(index, value);
}
inline void AckCustomiedInfo::add_roomconfigid(::google::protobuf::int32 value) {
  roomconfigid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckCustomiedInfo::roomconfigid() const {
  return roomconfigid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckCustomiedInfo::mutable_roomconfigid() {
  return &roomconfigid_;
}

// optional .proto.game.hunanmj.tagBanPai banpai = 11;
inline bool AckCustomiedInfo::has_banpai() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AckCustomiedInfo::set_has_banpai() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AckCustomiedInfo::clear_has_banpai() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AckCustomiedInfo::clear_banpai() {
  if (banpai_ != NULL) banpai_->::proto::game::hunanmj::tagBanPai::Clear();
  clear_has_banpai();
}
inline const ::proto::game::hunanmj::tagBanPai& AckCustomiedInfo::banpai() const {
  return banpai_ != NULL ? *banpai_ : *default_instance_->banpai_;
}
inline ::proto::game::hunanmj::tagBanPai* AckCustomiedInfo::mutable_banpai() {
  set_has_banpai();
  if (banpai_ == NULL) banpai_ = new ::proto::game::hunanmj::tagBanPai;
  return banpai_;
}
inline ::proto::game::hunanmj::tagBanPai* AckCustomiedInfo::release_banpai() {
  clear_has_banpai();
  ::proto::game::hunanmj::tagBanPai* temp = banpai_;
  banpai_ = NULL;
  return temp;
}
inline void AckCustomiedInfo::set_allocated_banpai(::proto::game::hunanmj::tagBanPai* banpai) {
  delete banpai_;
  banpai_ = banpai;
  if (banpai) {
    set_has_banpai();
  } else {
    clear_has_banpai();
  }
}

// optional .proto.game.hunanmj.tagGang_Zhuapai zhuapai = 12;
inline bool AckCustomiedInfo::has_zhuapai() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AckCustomiedInfo::set_has_zhuapai() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AckCustomiedInfo::clear_has_zhuapai() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AckCustomiedInfo::clear_zhuapai() {
  if (zhuapai_ != NULL) zhuapai_->::proto::game::hunanmj::tagGang_Zhuapai::Clear();
  clear_has_zhuapai();
}
inline const ::proto::game::hunanmj::tagGang_Zhuapai& AckCustomiedInfo::zhuapai() const {
  return zhuapai_ != NULL ? *zhuapai_ : *default_instance_->zhuapai_;
}
inline ::proto::game::hunanmj::tagGang_Zhuapai* AckCustomiedInfo::mutable_zhuapai() {
  set_has_zhuapai();
  if (zhuapai_ == NULL) zhuapai_ = new ::proto::game::hunanmj::tagGang_Zhuapai;
  return zhuapai_;
}
inline ::proto::game::hunanmj::tagGang_Zhuapai* AckCustomiedInfo::release_zhuapai() {
  clear_has_zhuapai();
  ::proto::game::hunanmj::tagGang_Zhuapai* temp = zhuapai_;
  zhuapai_ = NULL;
  return temp;
}
inline void AckCustomiedInfo::set_allocated_zhuapai(::proto::game::hunanmj::tagGang_Zhuapai* zhuapai) {
  delete zhuapai_;
  zhuapai_ = zhuapai;
  if (zhuapai) {
    set_has_zhuapai();
  } else {
    clear_has_zhuapai();
  }
}

// optional .proto.game.hunanmj.AckEnSureJoker Joker = 13;
inline bool AckCustomiedInfo::has_joker() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AckCustomiedInfo::set_has_joker() {
  _has_bits_[0] |= 0x00001000u;
}
inline void AckCustomiedInfo::clear_has_joker() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void AckCustomiedInfo::clear_joker() {
  if (joker_ != NULL) joker_->::proto::game::hunanmj::AckEnSureJoker::Clear();
  clear_has_joker();
}
inline const ::proto::game::hunanmj::AckEnSureJoker& AckCustomiedInfo::joker() const {
  return joker_ != NULL ? *joker_ : *default_instance_->joker_;
}
inline ::proto::game::hunanmj::AckEnSureJoker* AckCustomiedInfo::mutable_joker() {
  set_has_joker();
  if (joker_ == NULL) joker_ = new ::proto::game::hunanmj::AckEnSureJoker;
  return joker_;
}
inline ::proto::game::hunanmj::AckEnSureJoker* AckCustomiedInfo::release_joker() {
  clear_has_joker();
  ::proto::game::hunanmj::AckEnSureJoker* temp = joker_;
  joker_ = NULL;
  return temp;
}
inline void AckCustomiedInfo::set_allocated_joker(::proto::game::hunanmj::AckEnSureJoker* joker) {
  delete joker_;
  joker_ = joker;
  if (joker) {
    set_has_joker();
  } else {
    clear_has_joker();
  }
}

// optional bool GangCalcImm = 14;
inline bool AckCustomiedInfo::has_gangcalcimm() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void AckCustomiedInfo::set_has_gangcalcimm() {
  _has_bits_[0] |= 0x00002000u;
}
inline void AckCustomiedInfo::clear_has_gangcalcimm() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void AckCustomiedInfo::clear_gangcalcimm() {
  gangcalcimm_ = false;
  clear_has_gangcalcimm();
}
inline bool AckCustomiedInfo::gangcalcimm() const {
  return gangcalcimm_;
}
inline void AckCustomiedInfo::set_gangcalcimm(bool value) {
  set_has_gangcalcimm();
  gangcalcimm_ = value;
}

// optional int32 OpType2 = 15;
inline bool AckCustomiedInfo::has_optype2() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void AckCustomiedInfo::set_has_optype2() {
  _has_bits_[0] |= 0x00004000u;
}
inline void AckCustomiedInfo::clear_has_optype2() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void AckCustomiedInfo::clear_optype2() {
  optype2_ = 0;
  clear_has_optype2();
}
inline ::google::protobuf::int32 AckCustomiedInfo::optype2() const {
  return optype2_;
}
inline void AckCustomiedInfo::set_optype2(::google::protobuf::int32 value) {
  set_has_optype2();
  optype2_ = value;
}

// optional int32 CurOutCardSeat = 16;
inline bool AckCustomiedInfo::has_curoutcardseat() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void AckCustomiedInfo::set_has_curoutcardseat() {
  _has_bits_[0] |= 0x00008000u;
}
inline void AckCustomiedInfo::clear_has_curoutcardseat() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void AckCustomiedInfo::clear_curoutcardseat() {
  curoutcardseat_ = 0;
  clear_has_curoutcardseat();
}
inline ::google::protobuf::int32 AckCustomiedInfo::curoutcardseat() const {
  return curoutcardseat_;
}
inline void AckCustomiedInfo::set_curoutcardseat(::google::protobuf::int32 value) {
  set_has_curoutcardseat();
  curoutcardseat_ = value;
}

// optional int32 lianZhuangCount = 17;
inline bool AckCustomiedInfo::has_lianzhuangcount() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void AckCustomiedInfo::set_has_lianzhuangcount() {
  _has_bits_[0] |= 0x00010000u;
}
inline void AckCustomiedInfo::clear_has_lianzhuangcount() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void AckCustomiedInfo::clear_lianzhuangcount() {
  lianzhuangcount_ = 0;
  clear_has_lianzhuangcount();
}
inline ::google::protobuf::int32 AckCustomiedInfo::lianzhuangcount() const {
  return lianzhuangcount_;
}
inline void AckCustomiedInfo::set_lianzhuangcount(::google::protobuf::int32 value) {
  set_has_lianzhuangcount();
  lianzhuangcount_ = value;
}

// optional int32 fz_type = 18;
inline bool AckCustomiedInfo::has_fz_type() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void AckCustomiedInfo::set_has_fz_type() {
  _has_bits_[0] |= 0x00020000u;
}
inline void AckCustomiedInfo::clear_has_fz_type() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void AckCustomiedInfo::clear_fz_type() {
  fz_type_ = 0;
  clear_has_fz_type();
}
inline ::google::protobuf::int32 AckCustomiedInfo::fz_type() const {
  return fz_type_;
}
inline void AckCustomiedInfo::set_fz_type(::google::protobuf::int32 value) {
  set_has_fz_type();
  fz_type_ = value;
}

// optional int32 hu_type = 19;
inline bool AckCustomiedInfo::has_hu_type() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void AckCustomiedInfo::set_has_hu_type() {
  _has_bits_[0] |= 0x00040000u;
}
inline void AckCustomiedInfo::clear_has_hu_type() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void AckCustomiedInfo::clear_hu_type() {
  hu_type_ = 0;
  clear_has_hu_type();
}
inline ::google::protobuf::int32 AckCustomiedInfo::hu_type() const {
  return hu_type_;
}
inline void AckCustomiedInfo::set_hu_type(::google::protobuf::int32 value) {
  set_has_hu_type();
  hu_type_ = value;
}

// optional .proto.game.hunanmj.tagExternalMsg msg = 20;
inline bool AckCustomiedInfo::has_msg() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void AckCustomiedInfo::set_has_msg() {
  _has_bits_[0] |= 0x00080000u;
}
inline void AckCustomiedInfo::clear_has_msg() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void AckCustomiedInfo::clear_msg() {
  if (msg_ != NULL) msg_->::proto::game::hunanmj::tagExternalMsg::Clear();
  clear_has_msg();
}
inline const ::proto::game::hunanmj::tagExternalMsg& AckCustomiedInfo::msg() const {
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
inline ::proto::game::hunanmj::tagExternalMsg* AckCustomiedInfo::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) msg_ = new ::proto::game::hunanmj::tagExternalMsg;
  return msg_;
}
inline ::proto::game::hunanmj::tagExternalMsg* AckCustomiedInfo::release_msg() {
  clear_has_msg();
  ::proto::game::hunanmj::tagExternalMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void AckCustomiedInfo::set_allocated_msg(::proto::game::hunanmj::tagExternalMsg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
}

// repeated .proto.game.hunanmj.tagDaShaiPaiCount shaiPaiCounts = 21;
inline int AckCustomiedInfo::shaipaicounts_size() const {
  return shaipaicounts_.size();
}
inline void AckCustomiedInfo::clear_shaipaicounts() {
  shaipaicounts_.Clear();
}
inline const ::proto::game::hunanmj::tagDaShaiPaiCount& AckCustomiedInfo::shaipaicounts(int index) const {
  return shaipaicounts_.Get(index);
}
inline ::proto::game::hunanmj::tagDaShaiPaiCount* AckCustomiedInfo::mutable_shaipaicounts(int index) {
  return shaipaicounts_.Mutable(index);
}
inline ::proto::game::hunanmj::tagDaShaiPaiCount* AckCustomiedInfo::add_shaipaicounts() {
  return shaipaicounts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagDaShaiPaiCount >&
AckCustomiedInfo::shaipaicounts() const {
  return shaipaicounts_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagDaShaiPaiCount >*
AckCustomiedInfo::mutable_shaipaicounts() {
  return &shaipaicounts_;
}

// -------------------------------------------------------------------

// tagHuNanGameEnd

// repeated .proto.game.hunanmj.FanInfo faninfo = 1;
inline int tagHuNanGameEnd::faninfo_size() const {
  return faninfo_.size();
}
inline void tagHuNanGameEnd::clear_faninfo() {
  faninfo_.Clear();
}
inline const ::proto::game::hunanmj::FanInfo& tagHuNanGameEnd::faninfo(int index) const {
  return faninfo_.Get(index);
}
inline ::proto::game::hunanmj::FanInfo* tagHuNanGameEnd::mutable_faninfo(int index) {
  return faninfo_.Mutable(index);
}
inline ::proto::game::hunanmj::FanInfo* tagHuNanGameEnd::add_faninfo() {
  return faninfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::FanInfo >&
tagHuNanGameEnd::faninfo() const {
  return faninfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::FanInfo >*
tagHuNanGameEnd::mutable_faninfo() {
  return &faninfo_;
}

// repeated int32 piaoNum = 2;
inline int tagHuNanGameEnd::piaonum_size() const {
  return piaonum_.size();
}
inline void tagHuNanGameEnd::clear_piaonum() {
  piaonum_.Clear();
}
inline ::google::protobuf::int32 tagHuNanGameEnd::piaonum(int index) const {
  return piaonum_.Get(index);
}
inline void tagHuNanGameEnd::set_piaonum(int index, ::google::protobuf::int32 value) {
  piaonum_.Set(index, value);
}
inline void tagHuNanGameEnd::add_piaonum(::google::protobuf::int32 value) {
  piaonum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagHuNanGameEnd::piaonum() const {
  return piaonum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagHuNanGameEnd::mutable_piaonum() {
  return &piaonum_;
}

// optional .proto.game.hunanmj.tagJiangma Niao = 3;
inline bool tagHuNanGameEnd::has_niao() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tagHuNanGameEnd::set_has_niao() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tagHuNanGameEnd::clear_has_niao() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tagHuNanGameEnd::clear_niao() {
  if (niao_ != NULL) niao_->::proto::game::hunanmj::tagJiangma::Clear();
  clear_has_niao();
}
inline const ::proto::game::hunanmj::tagJiangma& tagHuNanGameEnd::niao() const {
  return niao_ != NULL ? *niao_ : *default_instance_->niao_;
}
inline ::proto::game::hunanmj::tagJiangma* tagHuNanGameEnd::mutable_niao() {
  set_has_niao();
  if (niao_ == NULL) niao_ = new ::proto::game::hunanmj::tagJiangma;
  return niao_;
}
inline ::proto::game::hunanmj::tagJiangma* tagHuNanGameEnd::release_niao() {
  clear_has_niao();
  ::proto::game::hunanmj::tagJiangma* temp = niao_;
  niao_ = NULL;
  return temp;
}
inline void tagHuNanGameEnd::set_allocated_niao(::proto::game::hunanmj::tagJiangma* niao) {
  delete niao_;
  niao_ = niao;
  if (niao) {
    set_has_niao();
  } else {
    clear_has_niao();
  }
}

// repeated .proto.game.hunanmj.tagMultiHuInfo huinfo = 4;
inline int tagHuNanGameEnd::huinfo_size() const {
  return huinfo_.size();
}
inline void tagHuNanGameEnd::clear_huinfo() {
  huinfo_.Clear();
}
inline const ::proto::game::hunanmj::tagMultiHuInfo& tagHuNanGameEnd::huinfo(int index) const {
  return huinfo_.Get(index);
}
inline ::proto::game::hunanmj::tagMultiHuInfo* tagHuNanGameEnd::mutable_huinfo(int index) {
  return huinfo_.Mutable(index);
}
inline ::proto::game::hunanmj::tagMultiHuInfo* tagHuNanGameEnd::add_huinfo() {
  return huinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagMultiHuInfo >&
tagHuNanGameEnd::huinfo() const {
  return huinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::tagMultiHuInfo >*
tagHuNanGameEnd::mutable_huinfo() {
  return &huinfo_;
}

// optional int32 LeftCardNum = 5;
inline bool tagHuNanGameEnd::has_leftcardnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void tagHuNanGameEnd::set_has_leftcardnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void tagHuNanGameEnd::clear_has_leftcardnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void tagHuNanGameEnd::clear_leftcardnum() {
  leftcardnum_ = 0;
  clear_has_leftcardnum();
}
inline ::google::protobuf::int32 tagHuNanGameEnd::leftcardnum() const {
  return leftcardnum_;
}
inline void tagHuNanGameEnd::set_leftcardnum(::google::protobuf::int32 value) {
  set_has_leftcardnum();
  leftcardnum_ = value;
}

// repeated int32 ContinuousBankerNum = 6;
inline int tagHuNanGameEnd::continuousbankernum_size() const {
  return continuousbankernum_.size();
}
inline void tagHuNanGameEnd::clear_continuousbankernum() {
  continuousbankernum_.Clear();
}
inline ::google::protobuf::int32 tagHuNanGameEnd::continuousbankernum(int index) const {
  return continuousbankernum_.Get(index);
}
inline void tagHuNanGameEnd::set_continuousbankernum(int index, ::google::protobuf::int32 value) {
  continuousbankernum_.Set(index, value);
}
inline void tagHuNanGameEnd::add_continuousbankernum(::google::protobuf::int32 value) {
  continuousbankernum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagHuNanGameEnd::continuousbankernum() const {
  return continuousbankernum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagHuNanGameEnd::mutable_continuousbankernum() {
  return &continuousbankernum_;
}

// repeated int32 RemainderCards = 7;
inline int tagHuNanGameEnd::remaindercards_size() const {
  return remaindercards_.size();
}
inline void tagHuNanGameEnd::clear_remaindercards() {
  remaindercards_.Clear();
}
inline ::google::protobuf::int32 tagHuNanGameEnd::remaindercards(int index) const {
  return remaindercards_.Get(index);
}
inline void tagHuNanGameEnd::set_remaindercards(int index, ::google::protobuf::int32 value) {
  remaindercards_.Set(index, value);
}
inline void tagHuNanGameEnd::add_remaindercards(::google::protobuf::int32 value) {
  remaindercards_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagHuNanGameEnd::remaindercards() const {
  return remaindercards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagHuNanGameEnd::mutable_remaindercards() {
  return &remaindercards_;
}

// -------------------------------------------------------------------

// tagMultiHuInfo

// required int32 Chairid = 1;
inline bool tagMultiHuInfo::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagMultiHuInfo::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagMultiHuInfo::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagMultiHuInfo::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 tagMultiHuInfo::chairid() const {
  return chairid_;
}
inline void tagMultiHuInfo::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// repeated int32 HuCard = 2;
inline int tagMultiHuInfo::hucard_size() const {
  return hucard_.size();
}
inline void tagMultiHuInfo::clear_hucard() {
  hucard_.Clear();
}
inline ::google::protobuf::int32 tagMultiHuInfo::hucard(int index) const {
  return hucard_.Get(index);
}
inline void tagMultiHuInfo::set_hucard(int index, ::google::protobuf::int32 value) {
  hucard_.Set(index, value);
}
inline void tagMultiHuInfo::add_hucard(::google::protobuf::int32 value) {
  hucard_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagMultiHuInfo::hucard() const {
  return hucard_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagMultiHuInfo::mutable_hucard() {
  return &hucard_;
}

// -------------------------------------------------------------------

// AddFanInfo

// optional int32 AddType = 1;
inline bool AddFanInfo::has_addtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFanInfo::set_has_addtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFanInfo::clear_has_addtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFanInfo::clear_addtype() {
  addtype_ = 0;
  clear_has_addtype();
}
inline ::google::protobuf::int32 AddFanInfo::addtype() const {
  return addtype_;
}
inline void AddFanInfo::set_addtype(::google::protobuf::int32 value) {
  set_has_addtype();
  addtype_ = value;
}

// optional int32 AddNum = 2;
inline bool AddFanInfo::has_addnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddFanInfo::set_has_addnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddFanInfo::clear_has_addnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddFanInfo::clear_addnum() {
  addnum_ = 0;
  clear_has_addnum();
}
inline ::google::protobuf::int32 AddFanInfo::addnum() const {
  return addnum_;
}
inline void AddFanInfo::set_addnum(::google::protobuf::int32 value) {
  set_has_addnum();
  addnum_ = value;
}

// optional int32 FenNum = 3;
inline bool AddFanInfo::has_fennum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddFanInfo::set_has_fennum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddFanInfo::clear_has_fennum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddFanInfo::clear_fennum() {
  fennum_ = 0;
  clear_has_fennum();
}
inline ::google::protobuf::int32 AddFanInfo::fennum() const {
  return fennum_;
}
inline void AddFanInfo::set_fennum(::google::protobuf::int32 value) {
  set_has_fennum();
  fennum_ = value;
}

// -------------------------------------------------------------------

// FanInfo

// required int32 chairID = 1;
inline bool FanInfo::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FanInfo::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FanInfo::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FanInfo::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 FanInfo::chairid() const {
  return chairid_;
}
inline void FanInfo::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// required int32 SpecialType = 2;
inline bool FanInfo::has_specialtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FanInfo::set_has_specialtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FanInfo::clear_has_specialtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FanInfo::clear_specialtype() {
  specialtype_ = 0;
  clear_has_specialtype();
}
inline ::google::protobuf::int32 FanInfo::specialtype() const {
  return specialtype_;
}
inline void FanInfo::set_specialtype(::google::protobuf::int32 value) {
  set_has_specialtype();
  specialtype_ = value;
}

// required int32 FanNum = 3;
inline bool FanInfo::has_fannum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FanInfo::set_has_fannum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FanInfo::clear_has_fannum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FanInfo::clear_fannum() {
  fannum_ = 0;
  clear_has_fannum();
}
inline ::google::protobuf::int32 FanInfo::fannum() const {
  return fannum_;
}
inline void FanInfo::set_fannum(::google::protobuf::int32 value) {
  set_has_fannum();
  fannum_ = value;
}

// repeated .proto.game.hunanmj.AddFanInfo addfan = 4;
inline int FanInfo::addfan_size() const {
  return addfan_.size();
}
inline void FanInfo::clear_addfan() {
  addfan_.Clear();
}
inline const ::proto::game::hunanmj::AddFanInfo& FanInfo::addfan(int index) const {
  return addfan_.Get(index);
}
inline ::proto::game::hunanmj::AddFanInfo* FanInfo::mutable_addfan(int index) {
  return addfan_.Mutable(index);
}
inline ::proto::game::hunanmj::AddFanInfo* FanInfo::add_addfan() {
  return addfan_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::AddFanInfo >&
FanInfo::addfan() const {
  return addfan_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::AddFanInfo >*
FanInfo::mutable_addfan() {
  return &addfan_;
}

// -------------------------------------------------------------------

// tagBuZhangOpResult

// required int32 BuzhangOpType = 1;
inline bool tagBuZhangOpResult::has_buzhangoptype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagBuZhangOpResult::set_has_buzhangoptype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagBuZhangOpResult::clear_has_buzhangoptype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagBuZhangOpResult::clear_buzhangoptype() {
  buzhangoptype_ = 0;
  clear_has_buzhangoptype();
}
inline ::google::protobuf::int32 tagBuZhangOpResult::buzhangoptype() const {
  return buzhangoptype_;
}
inline void tagBuZhangOpResult::set_buzhangoptype(::google::protobuf::int32 value) {
  set_has_buzhangoptype();
  buzhangoptype_ = value;
}

// -------------------------------------------------------------------

// ReordInfo

// optional int32 banker_num = 1;
inline bool ReordInfo::has_banker_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReordInfo::set_has_banker_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReordInfo::clear_has_banker_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReordInfo::clear_banker_num() {
  banker_num_ = 0;
  clear_has_banker_num();
}
inline ::google::protobuf::int32 ReordInfo::banker_num() const {
  return banker_num_;
}
inline void ReordInfo::set_banker_num(::google::protobuf::int32 value) {
  set_has_banker_num();
  banker_num_ = value;
}

// optional int32 hu_num = 2;
inline bool ReordInfo::has_hu_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReordInfo::set_has_hu_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReordInfo::clear_has_hu_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReordInfo::clear_hu_num() {
  hu_num_ = 0;
  clear_has_hu_num();
}
inline ::google::protobuf::int32 ReordInfo::hu_num() const {
  return hu_num_;
}
inline void ReordInfo::set_hu_num(::google::protobuf::int32 value) {
  set_has_hu_num();
  hu_num_ = value;
}

// optional int32 piaolaizi_num = 3;
inline bool ReordInfo::has_piaolaizi_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReordInfo::set_has_piaolaizi_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReordInfo::clear_has_piaolaizi_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReordInfo::clear_piaolaizi_num() {
  piaolaizi_num_ = 0;
  clear_has_piaolaizi_num();
}
inline ::google::protobuf::int32 ReordInfo::piaolaizi_num() const {
  return piaolaizi_num_;
}
inline void ReordInfo::set_piaolaizi_num(::google::protobuf::int32 value) {
  set_has_piaolaizi_num();
  piaolaizi_num_ = value;
}

// optional int32 outtime_num = 4;
inline bool ReordInfo::has_outtime_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReordInfo::set_has_outtime_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReordInfo::clear_has_outtime_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReordInfo::clear_outtime_num() {
  outtime_num_ = 0;
  clear_has_outtime_num();
}
inline ::google::protobuf::int32 ReordInfo::outtime_num() const {
  return outtime_num_;
}
inline void ReordInfo::set_outtime_num(::google::protobuf::int32 value) {
  set_has_outtime_num();
  outtime_num_ = value;
}

// optional int32 totalscore = 5;
inline bool ReordInfo::has_totalscore() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReordInfo::set_has_totalscore() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReordInfo::clear_has_totalscore() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReordInfo::clear_totalscore() {
  totalscore_ = 0;
  clear_has_totalscore();
}
inline ::google::protobuf::int32 ReordInfo::totalscore() const {
  return totalscore_;
}
inline void ReordInfo::set_totalscore(::google::protobuf::int32 value) {
  set_has_totalscore();
  totalscore_ = value;
}

// optional int32 WinCounts = 6;
inline bool ReordInfo::has_wincounts() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReordInfo::set_has_wincounts() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReordInfo::clear_has_wincounts() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReordInfo::clear_wincounts() {
  wincounts_ = 0;
  clear_has_wincounts();
}
inline ::google::protobuf::int32 ReordInfo::wincounts() const {
  return wincounts_;
}
inline void ReordInfo::set_wincounts(::google::protobuf::int32 value) {
  set_has_wincounts();
  wincounts_ = value;
}

// optional int32 GangTimes = 7;
inline bool ReordInfo::has_gangtimes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ReordInfo::set_has_gangtimes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ReordInfo::clear_has_gangtimes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ReordInfo::clear_gangtimes() {
  gangtimes_ = 0;
  clear_has_gangtimes();
}
inline ::google::protobuf::int32 ReordInfo::gangtimes() const {
  return gangtimes_;
}
inline void ReordInfo::set_gangtimes(::google::protobuf::int32 value) {
  set_has_gangtimes();
  gangtimes_ = value;
}

// optional int32 DianGangTimes = 8;
inline bool ReordInfo::has_diangangtimes() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ReordInfo::set_has_diangangtimes() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ReordInfo::clear_has_diangangtimes() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ReordInfo::clear_diangangtimes() {
  diangangtimes_ = 0;
  clear_has_diangangtimes();
}
inline ::google::protobuf::int32 ReordInfo::diangangtimes() const {
  return diangangtimes_;
}
inline void ReordInfo::set_diangangtimes(::google::protobuf::int32 value) {
  set_has_diangangtimes();
  diangangtimes_ = value;
}

// optional int32 Ex1 = 9;
inline bool ReordInfo::has_ex1() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ReordInfo::set_has_ex1() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ReordInfo::clear_has_ex1() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ReordInfo::clear_ex1() {
  ex1_ = 0;
  clear_has_ex1();
}
inline ::google::protobuf::int32 ReordInfo::ex1() const {
  return ex1_;
}
inline void ReordInfo::set_ex1(::google::protobuf::int32 value) {
  set_has_ex1();
  ex1_ = value;
}

// optional int32 Ex2 = 10;
inline bool ReordInfo::has_ex2() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ReordInfo::set_has_ex2() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ReordInfo::clear_has_ex2() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ReordInfo::clear_ex2() {
  ex2_ = 0;
  clear_has_ex2();
}
inline ::google::protobuf::int32 ReordInfo::ex2() const {
  return ex2_;
}
inline void ReordInfo::set_ex2(::google::protobuf::int32 value) {
  set_has_ex2();
  ex2_ = value;
}

// optional int32 zimo_num = 11;
inline bool ReordInfo::has_zimo_num() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ReordInfo::set_has_zimo_num() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ReordInfo::clear_has_zimo_num() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ReordInfo::clear_zimo_num() {
  zimo_num_ = 0;
  clear_has_zimo_num();
}
inline ::google::protobuf::int32 ReordInfo::zimo_num() const {
  return zimo_num_;
}
inline void ReordInfo::set_zimo_num(::google::protobuf::int32 value) {
  set_has_zimo_num();
  zimo_num_ = value;
}

// optional int32 jiepao_num = 12;
inline bool ReordInfo::has_jiepao_num() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ReordInfo::set_has_jiepao_num() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ReordInfo::clear_has_jiepao_num() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ReordInfo::clear_jiepao_num() {
  jiepao_num_ = 0;
  clear_has_jiepao_num();
}
inline ::google::protobuf::int32 ReordInfo::jiepao_num() const {
  return jiepao_num_;
}
inline void ReordInfo::set_jiepao_num(::google::protobuf::int32 value) {
  set_has_jiepao_num();
  jiepao_num_ = value;
}

// optional int32 dianpao_num = 13;
inline bool ReordInfo::has_dianpao_num() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ReordInfo::set_has_dianpao_num() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ReordInfo::clear_has_dianpao_num() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ReordInfo::clear_dianpao_num() {
  dianpao_num_ = 0;
  clear_has_dianpao_num();
}
inline ::google::protobuf::int32 ReordInfo::dianpao_num() const {
  return dianpao_num_;
}
inline void ReordInfo::set_dianpao_num(::google::protobuf::int32 value) {
  set_has_dianpao_num();
  dianpao_num_ = value;
}

// optional int32 minggang_num = 14;
inline bool ReordInfo::has_minggang_num() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ReordInfo::set_has_minggang_num() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ReordInfo::clear_has_minggang_num() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ReordInfo::clear_minggang_num() {
  minggang_num_ = 0;
  clear_has_minggang_num();
}
inline ::google::protobuf::int32 ReordInfo::minggang_num() const {
  return minggang_num_;
}
inline void ReordInfo::set_minggang_num(::google::protobuf::int32 value) {
  set_has_minggang_num();
  minggang_num_ = value;
}

// optional int32 angang_num = 15;
inline bool ReordInfo::has_angang_num() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ReordInfo::set_has_angang_num() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ReordInfo::clear_has_angang_num() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ReordInfo::clear_angang_num() {
  angang_num_ = 0;
  clear_has_angang_num();
}
inline ::google::protobuf::int32 ReordInfo::angang_num() const {
  return angang_num_;
}
inline void ReordInfo::set_angang_num(::google::protobuf::int32 value) {
  set_has_angang_num();
  angang_num_ = value;
}

// -------------------------------------------------------------------

// GameEndRecord

// repeated .proto.game.hunanmj.ReordInfo UserRecoreInfo = 1;
inline int GameEndRecord::userrecoreinfo_size() const {
  return userrecoreinfo_.size();
}
inline void GameEndRecord::clear_userrecoreinfo() {
  userrecoreinfo_.Clear();
}
inline const ::proto::game::hunanmj::ReordInfo& GameEndRecord::userrecoreinfo(int index) const {
  return userrecoreinfo_.Get(index);
}
inline ::proto::game::hunanmj::ReordInfo* GameEndRecord::mutable_userrecoreinfo(int index) {
  return userrecoreinfo_.Mutable(index);
}
inline ::proto::game::hunanmj::ReordInfo* GameEndRecord::add_userrecoreinfo() {
  return userrecoreinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::ReordInfo >&
GameEndRecord::userrecoreinfo() const {
  return userrecoreinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::ReordInfo >*
GameEndRecord::mutable_userrecoreinfo() {
  return &userrecoreinfo_;
}

// repeated int32 MostDianPaoUser = 2;
inline int GameEndRecord::mostdianpaouser_size() const {
  return mostdianpaouser_.size();
}
inline void GameEndRecord::clear_mostdianpaouser() {
  mostdianpaouser_.Clear();
}
inline ::google::protobuf::int32 GameEndRecord::mostdianpaouser(int index) const {
  return mostdianpaouser_.Get(index);
}
inline void GameEndRecord::set_mostdianpaouser(int index, ::google::protobuf::int32 value) {
  mostdianpaouser_.Set(index, value);
}
inline void GameEndRecord::add_mostdianpaouser(::google::protobuf::int32 value) {
  mostdianpaouser_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameEndRecord::mostdianpaouser() const {
  return mostdianpaouser_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameEndRecord::mutable_mostdianpaouser() {
  return &mostdianpaouser_;
}

// repeated int32 MostWinScoreUser = 3;
inline int GameEndRecord::mostwinscoreuser_size() const {
  return mostwinscoreuser_.size();
}
inline void GameEndRecord::clear_mostwinscoreuser() {
  mostwinscoreuser_.Clear();
}
inline ::google::protobuf::int32 GameEndRecord::mostwinscoreuser(int index) const {
  return mostwinscoreuser_.Get(index);
}
inline void GameEndRecord::set_mostwinscoreuser(int index, ::google::protobuf::int32 value) {
  mostwinscoreuser_.Set(index, value);
}
inline void GameEndRecord::add_mostwinscoreuser(::google::protobuf::int32 value) {
  mostwinscoreuser_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameEndRecord::mostwinscoreuser() const {
  return mostwinscoreuser_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameEndRecord::mutable_mostwinscoreuser() {
  return &mostwinscoreuser_;
}

// optional int32 DataTime = 4;
inline bool GameEndRecord::has_datatime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameEndRecord::set_has_datatime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameEndRecord::clear_has_datatime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameEndRecord::clear_datatime() {
  datatime_ = 0;
  clear_has_datatime();
}
inline ::google::protobuf::int32 GameEndRecord::datatime() const {
  return datatime_;
}
inline void GameEndRecord::set_datatime(::google::protobuf::int32 value) {
  set_has_datatime();
  datatime_ = value;
}

// repeated int32 uid = 5;
inline int GameEndRecord::uid_size() const {
  return uid_.size();
}
inline void GameEndRecord::clear_uid() {
  uid_.Clear();
}
inline ::google::protobuf::int32 GameEndRecord::uid(int index) const {
  return uid_.Get(index);
}
inline void GameEndRecord::set_uid(int index, ::google::protobuf::int32 value) {
  uid_.Set(index, value);
}
inline void GameEndRecord::add_uid(::google::protobuf::int32 value) {
  uid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameEndRecord::uid() const {
  return uid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameEndRecord::mutable_uid() {
  return &uid_;
}

// repeated string name = 6;
inline int GameEndRecord::name_size() const {
  return name_.size();
}
inline void GameEndRecord::clear_name() {
  name_.Clear();
}
inline const ::std::string& GameEndRecord::name(int index) const {
  return name_.Get(index);
}
inline ::std::string* GameEndRecord::mutable_name(int index) {
  return name_.Mutable(index);
}
inline void GameEndRecord::set_name(int index, const ::std::string& value) {
  name_.Mutable(index)->assign(value);
}
inline void GameEndRecord::set_name(int index, const char* value) {
  name_.Mutable(index)->assign(value);
}
inline void GameEndRecord::set_name(int index, const char* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameEndRecord::add_name() {
  return name_.Add();
}
inline void GameEndRecord::add_name(const ::std::string& value) {
  name_.Add()->assign(value);
}
inline void GameEndRecord::add_name(const char* value) {
  name_.Add()->assign(value);
}
inline void GameEndRecord::add_name(const char* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GameEndRecord::name() const {
  return name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GameEndRecord::mutable_name() {
  return &name_;
}

// repeated string avatar = 7;
inline int GameEndRecord::avatar_size() const {
  return avatar_.size();
}
inline void GameEndRecord::clear_avatar() {
  avatar_.Clear();
}
inline const ::std::string& GameEndRecord::avatar(int index) const {
  return avatar_.Get(index);
}
inline ::std::string* GameEndRecord::mutable_avatar(int index) {
  return avatar_.Mutable(index);
}
inline void GameEndRecord::set_avatar(int index, const ::std::string& value) {
  avatar_.Mutable(index)->assign(value);
}
inline void GameEndRecord::set_avatar(int index, const char* value) {
  avatar_.Mutable(index)->assign(value);
}
inline void GameEndRecord::set_avatar(int index, const char* value, size_t size) {
  avatar_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameEndRecord::add_avatar() {
  return avatar_.Add();
}
inline void GameEndRecord::add_avatar(const ::std::string& value) {
  avatar_.Add()->assign(value);
}
inline void GameEndRecord::add_avatar(const char* value) {
  avatar_.Add()->assign(value);
}
inline void GameEndRecord::add_avatar(const char* value, size_t size) {
  avatar_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GameEndRecord::avatar() const {
  return avatar_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GameEndRecord::mutable_avatar() {
  return &avatar_;
}

// -------------------------------------------------------------------

// RoundScore

// repeated int32 Score = 1;
inline int RoundScore::score_size() const {
  return score_.size();
}
inline void RoundScore::clear_score() {
  score_.Clear();
}
inline ::google::protobuf::int32 RoundScore::score(int index) const {
  return score_.Get(index);
}
inline void RoundScore::set_score(int index, ::google::protobuf::int32 value) {
  score_.Set(index, value);
}
inline void RoundScore::add_score(::google::protobuf::int32 value) {
  score_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RoundScore::score() const {
  return score_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RoundScore::mutable_score() {
  return &score_;
}

// -------------------------------------------------------------------

// TotalRoundScore

// repeated .proto.game.hunanmj.RoundScore round = 1;
inline int TotalRoundScore::round_size() const {
  return round_.size();
}
inline void TotalRoundScore::clear_round() {
  round_.Clear();
}
inline const ::proto::game::hunanmj::RoundScore& TotalRoundScore::round(int index) const {
  return round_.Get(index);
}
inline ::proto::game::hunanmj::RoundScore* TotalRoundScore::mutable_round(int index) {
  return round_.Mutable(index);
}
inline ::proto::game::hunanmj::RoundScore* TotalRoundScore::add_round() {
  return round_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::RoundScore >&
TotalRoundScore::round() const {
  return round_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::hunanmj::RoundScore >*
TotalRoundScore::mutable_round() {
  return &round_;
}

// optional int32 roundcount = 2;
inline bool TotalRoundScore::has_roundcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TotalRoundScore::set_has_roundcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TotalRoundScore::clear_has_roundcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TotalRoundScore::clear_roundcount() {
  roundcount_ = 0;
  clear_has_roundcount();
}
inline ::google::protobuf::int32 TotalRoundScore::roundcount() const {
  return roundcount_;
}
inline void TotalRoundScore::set_roundcount(::google::protobuf::int32 value) {
  set_has_roundcount();
  roundcount_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace hunanmj
}  // namespace game
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::game::hunanmj::E_BUZHANG>() {
  return ::proto::game::hunanmj::E_BUZHANG_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::game::hunanmj::E_GUI>() {
  return ::proto::game::hunanmj::E_GUI_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::game::hunanmj::HUGANG>() {
  return ::proto::game::hunanmj::HUGANG_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::game::hunanmj::JiangmaType>() {
  return ::proto::game::hunanmj::JiangmaType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::game::hunanmj::HunanLocation>() {
  return ::proto::game::hunanmj::HunanLocation_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hunangameproto_2eproto__INCLUDED
