// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: longyanmj.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "longyanmj.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace game {
namespace longyanmj {

namespace {

const ::google::protobuf::Descriptor* LongYanGameend_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LongYanGameend_reflection_ = NULL;
const ::google::protobuf::Descriptor* AckYouJin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AckYouJin_reflection_ = NULL;
const ::google::protobuf::Descriptor* AckLockCard_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AckLockCard_reflection_ = NULL;
const ::google::protobuf::Descriptor* GamsSence_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GamsSence_reflection_ = NULL;
const ::google::protobuf::Descriptor* YouJinAnimation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YouJinAnimation_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_longyanmj_2eproto() {
  protobuf_AddDesc_longyanmj_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "longyanmj.proto");
  GOOGLE_CHECK(file != NULL);
  LongYanGameend_descriptor_ = file->message_type(0);
  static const int LongYanGameend_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LongYanGameend, huagang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LongYanGameend, gangfen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LongYanGameend, fenbing_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LongYanGameend, hua_sum_),
  };
  LongYanGameend_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LongYanGameend_descriptor_,
      LongYanGameend::default_instance_,
      LongYanGameend_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LongYanGameend, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LongYanGameend, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LongYanGameend));
  AckYouJin_descriptor_ = file->message_type(1);
  static const int AckYouJin_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AckYouJin, charid_),
  };
  AckYouJin_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AckYouJin_descriptor_,
      AckYouJin::default_instance_,
      AckYouJin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AckYouJin, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AckYouJin, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AckYouJin));
  AckLockCard_descriptor_ = file->message_type(2);
  static const int AckLockCard_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AckLockCard, card_),
  };
  AckLockCard_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AckLockCard_descriptor_,
      AckLockCard::default_instance_,
      AckLockCard_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AckLockCard, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AckLockCard, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AckLockCard));
  GamsSence_descriptor_ = file->message_type(3);
  static const int GamsSence_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GamsSence, lock_card_),
  };
  GamsSence_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GamsSence_descriptor_,
      GamsSence::default_instance_,
      GamsSence_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GamsSence, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GamsSence, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GamsSence));
  YouJinAnimation_descriptor_ = file->message_type(4);
  static const int YouJinAnimation_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YouJinAnimation, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YouJinAnimation, youjin_status_),
  };
  YouJinAnimation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      YouJinAnimation_descriptor_,
      YouJinAnimation::default_instance_,
      YouJinAnimation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YouJinAnimation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YouJinAnimation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(YouJinAnimation));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_longyanmj_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LongYanGameend_descriptor_, &LongYanGameend::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AckYouJin_descriptor_, &AckYouJin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AckLockCard_descriptor_, &AckLockCard::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GamsSence_descriptor_, &GamsSence::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    YouJinAnimation_descriptor_, &YouJinAnimation::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_longyanmj_2eproto() {
  delete LongYanGameend::default_instance_;
  delete LongYanGameend_reflection_;
  delete AckYouJin::default_instance_;
  delete AckYouJin_reflection_;
  delete AckLockCard::default_instance_;
  delete AckLockCard_reflection_;
  delete GamsSence::default_instance_;
  delete GamsSence_reflection_;
  delete YouJinAnimation::default_instance_;
  delete YouJinAnimation_reflection_;
}

void protobuf_AddDesc_longyanmj_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017longyanmj.proto\022\024proto.game.longyanmj\""
    "T\n\016LongYanGameend\022\017\n\007huagang\030\001 \003(\005\022\017\n\007ga"
    "ngfen\030\002 \003(\005\022\017\n\007fenbing\030\003 \003(\005\022\017\n\007hua_sum\030"
    "\004 \003(\005\"\033\n\tAckYouJin\022\016\n\006charid\030\001 \002(\005\"\033\n\013Ac"
    "kLockCard\022\014\n\004card\030\001 \003(\005\"A\n\tGamsSence\0224\n\t"
    "lock_card\030\001 \002(\0132!.proto.game.longyanmj.A"
    "ckLockCard\"8\n\017YouJinAnimation\022\016\n\006charid\030"
    "\001 \002(\005\022\025\n\ryoujin_status\030\002 \002(\005", 308);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "longyanmj.proto", &protobuf_RegisterTypes);
  LongYanGameend::default_instance_ = new LongYanGameend();
  AckYouJin::default_instance_ = new AckYouJin();
  AckLockCard::default_instance_ = new AckLockCard();
  GamsSence::default_instance_ = new GamsSence();
  YouJinAnimation::default_instance_ = new YouJinAnimation();
  LongYanGameend::default_instance_->InitAsDefaultInstance();
  AckYouJin::default_instance_->InitAsDefaultInstance();
  AckLockCard::default_instance_->InitAsDefaultInstance();
  GamsSence::default_instance_->InitAsDefaultInstance();
  YouJinAnimation::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_longyanmj_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_longyanmj_2eproto {
  StaticDescriptorInitializer_longyanmj_2eproto() {
    protobuf_AddDesc_longyanmj_2eproto();
  }
} static_descriptor_initializer_longyanmj_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int LongYanGameend::kHuagangFieldNumber;
const int LongYanGameend::kGangfenFieldNumber;
const int LongYanGameend::kFenbingFieldNumber;
const int LongYanGameend::kHuaSumFieldNumber;
#endif  // !_MSC_VER

LongYanGameend::LongYanGameend()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LongYanGameend::InitAsDefaultInstance() {
}

LongYanGameend::LongYanGameend(const LongYanGameend& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LongYanGameend::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LongYanGameend::~LongYanGameend() {
  SharedDtor();
}

void LongYanGameend::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LongYanGameend::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LongYanGameend::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LongYanGameend_descriptor_;
}

const LongYanGameend& LongYanGameend::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_longyanmj_2eproto();
  return *default_instance_;
}

LongYanGameend* LongYanGameend::default_instance_ = NULL;

LongYanGameend* LongYanGameend::New() const {
  return new LongYanGameend;
}

void LongYanGameend::Clear() {
  huagang_.Clear();
  gangfen_.Clear();
  fenbing_.Clear();
  hua_sum_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LongYanGameend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 huagang = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_huagang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_huagang())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_huagang())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_huagang;
        if (input->ExpectTag(16)) goto parse_gangfen;
        break;
      }

      // repeated int32 gangfen = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gangfen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_gangfen())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_gangfen())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gangfen;
        if (input->ExpectTag(24)) goto parse_fenbing;
        break;
      }

      // repeated int32 fenbing = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fenbing:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_fenbing())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_fenbing())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_fenbing;
        if (input->ExpectTag(32)) goto parse_hua_sum;
        break;
      }

      // repeated int32 hua_sum = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hua_sum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_hua_sum())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_hua_sum())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_hua_sum;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LongYanGameend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 huagang = 1;
  for (int i = 0; i < this->huagang_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->huagang(i), output);
  }

  // repeated int32 gangfen = 2;
  for (int i = 0; i < this->gangfen_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->gangfen(i), output);
  }

  // repeated int32 fenbing = 3;
  for (int i = 0; i < this->fenbing_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->fenbing(i), output);
  }

  // repeated int32 hua_sum = 4;
  for (int i = 0; i < this->hua_sum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->hua_sum(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LongYanGameend::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 huagang = 1;
  for (int i = 0; i < this->huagang_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->huagang(i), target);
  }

  // repeated int32 gangfen = 2;
  for (int i = 0; i < this->gangfen_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->gangfen(i), target);
  }

  // repeated int32 fenbing = 3;
  for (int i = 0; i < this->fenbing_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->fenbing(i), target);
  }

  // repeated int32 hua_sum = 4;
  for (int i = 0; i < this->hua_sum_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->hua_sum(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LongYanGameend::ByteSize() const {
  int total_size = 0;

  // repeated int32 huagang = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->huagang_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->huagang(i));
    }
    total_size += 1 * this->huagang_size() + data_size;
  }

  // repeated int32 gangfen = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->gangfen_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->gangfen(i));
    }
    total_size += 1 * this->gangfen_size() + data_size;
  }

  // repeated int32 fenbing = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->fenbing_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->fenbing(i));
    }
    total_size += 1 * this->fenbing_size() + data_size;
  }

  // repeated int32 hua_sum = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->hua_sum_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->hua_sum(i));
    }
    total_size += 1 * this->hua_sum_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LongYanGameend::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LongYanGameend* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LongYanGameend*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LongYanGameend::MergeFrom(const LongYanGameend& from) {
  GOOGLE_CHECK_NE(&from, this);
  huagang_.MergeFrom(from.huagang_);
  gangfen_.MergeFrom(from.gangfen_);
  fenbing_.MergeFrom(from.fenbing_);
  hua_sum_.MergeFrom(from.hua_sum_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LongYanGameend::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LongYanGameend::CopyFrom(const LongYanGameend& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LongYanGameend::IsInitialized() const {

  return true;
}

void LongYanGameend::Swap(LongYanGameend* other) {
  if (other != this) {
    huagang_.Swap(&other->huagang_);
    gangfen_.Swap(&other->gangfen_);
    fenbing_.Swap(&other->fenbing_);
    hua_sum_.Swap(&other->hua_sum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LongYanGameend::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LongYanGameend_descriptor_;
  metadata.reflection = LongYanGameend_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AckYouJin::kCharidFieldNumber;
#endif  // !_MSC_VER

AckYouJin::AckYouJin()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AckYouJin::InitAsDefaultInstance() {
}

AckYouJin::AckYouJin(const AckYouJin& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AckYouJin::SharedCtor() {
  _cached_size_ = 0;
  charid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AckYouJin::~AckYouJin() {
  SharedDtor();
}

void AckYouJin::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AckYouJin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AckYouJin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AckYouJin_descriptor_;
}

const AckYouJin& AckYouJin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_longyanmj_2eproto();
  return *default_instance_;
}

AckYouJin* AckYouJin::default_instance_ = NULL;

AckYouJin* AckYouJin::New() const {
  return new AckYouJin;
}

void AckYouJin::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    charid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AckYouJin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 charid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AckYouJin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 charid = 1;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->charid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AckYouJin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 charid = 1;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->charid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AckYouJin::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 charid = 1;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->charid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AckYouJin::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AckYouJin* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AckYouJin*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AckYouJin::MergeFrom(const AckYouJin& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_charid()) {
      set_charid(from.charid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AckYouJin::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AckYouJin::CopyFrom(const AckYouJin& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AckYouJin::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AckYouJin::Swap(AckYouJin* other) {
  if (other != this) {
    std::swap(charid_, other->charid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AckYouJin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AckYouJin_descriptor_;
  metadata.reflection = AckYouJin_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AckLockCard::kCardFieldNumber;
#endif  // !_MSC_VER

AckLockCard::AckLockCard()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AckLockCard::InitAsDefaultInstance() {
}

AckLockCard::AckLockCard(const AckLockCard& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AckLockCard::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AckLockCard::~AckLockCard() {
  SharedDtor();
}

void AckLockCard::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AckLockCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AckLockCard::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AckLockCard_descriptor_;
}

const AckLockCard& AckLockCard::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_longyanmj_2eproto();
  return *default_instance_;
}

AckLockCard* AckLockCard::default_instance_ = NULL;

AckLockCard* AckLockCard::New() const {
  return new AckLockCard;
}

void AckLockCard::Clear() {
  card_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AckLockCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 card = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_card())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_card())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_card;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AckLockCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 card = 1;
  for (int i = 0; i < this->card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->card(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AckLockCard::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 card = 1;
  for (int i = 0; i < this->card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->card(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AckLockCard::ByteSize() const {
  int total_size = 0;

  // repeated int32 card = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->card(i));
    }
    total_size += 1 * this->card_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AckLockCard::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AckLockCard* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AckLockCard*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AckLockCard::MergeFrom(const AckLockCard& from) {
  GOOGLE_CHECK_NE(&from, this);
  card_.MergeFrom(from.card_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AckLockCard::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AckLockCard::CopyFrom(const AckLockCard& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AckLockCard::IsInitialized() const {

  return true;
}

void AckLockCard::Swap(AckLockCard* other) {
  if (other != this) {
    card_.Swap(&other->card_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AckLockCard::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AckLockCard_descriptor_;
  metadata.reflection = AckLockCard_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GamsSence::kLockCardFieldNumber;
#endif  // !_MSC_VER

GamsSence::GamsSence()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GamsSence::InitAsDefaultInstance() {
  lock_card_ = const_cast< ::proto::game::longyanmj::AckLockCard*>(&::proto::game::longyanmj::AckLockCard::default_instance());
}

GamsSence::GamsSence(const GamsSence& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GamsSence::SharedCtor() {
  _cached_size_ = 0;
  lock_card_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GamsSence::~GamsSence() {
  SharedDtor();
}

void GamsSence::SharedDtor() {
  if (this != default_instance_) {
    delete lock_card_;
  }
}

void GamsSence::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GamsSence::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GamsSence_descriptor_;
}

const GamsSence& GamsSence::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_longyanmj_2eproto();
  return *default_instance_;
}

GamsSence* GamsSence::default_instance_ = NULL;

GamsSence* GamsSence::New() const {
  return new GamsSence;
}

void GamsSence::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_lock_card()) {
      if (lock_card_ != NULL) lock_card_->::proto::game::longyanmj::AckLockCard::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GamsSence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto.game.longyanmj.AckLockCard lock_card = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lock_card()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GamsSence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .proto.game.longyanmj.AckLockCard lock_card = 1;
  if (has_lock_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->lock_card(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GamsSence::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .proto.game.longyanmj.AckLockCard lock_card = 1;
  if (has_lock_card()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->lock_card(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GamsSence::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .proto.game.longyanmj.AckLockCard lock_card = 1;
    if (has_lock_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lock_card());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GamsSence::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GamsSence* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GamsSence*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GamsSence::MergeFrom(const GamsSence& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lock_card()) {
      mutable_lock_card()->::proto::game::longyanmj::AckLockCard::MergeFrom(from.lock_card());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GamsSence::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GamsSence::CopyFrom(const GamsSence& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GamsSence::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GamsSence::Swap(GamsSence* other) {
  if (other != this) {
    std::swap(lock_card_, other->lock_card_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GamsSence::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GamsSence_descriptor_;
  metadata.reflection = GamsSence_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int YouJinAnimation::kCharidFieldNumber;
const int YouJinAnimation::kYoujinStatusFieldNumber;
#endif  // !_MSC_VER

YouJinAnimation::YouJinAnimation()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void YouJinAnimation::InitAsDefaultInstance() {
}

YouJinAnimation::YouJinAnimation(const YouJinAnimation& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void YouJinAnimation::SharedCtor() {
  _cached_size_ = 0;
  charid_ = 0;
  youjin_status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouJinAnimation::~YouJinAnimation() {
  SharedDtor();
}

void YouJinAnimation::SharedDtor() {
  if (this != default_instance_) {
  }
}

void YouJinAnimation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YouJinAnimation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YouJinAnimation_descriptor_;
}

const YouJinAnimation& YouJinAnimation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_longyanmj_2eproto();
  return *default_instance_;
}

YouJinAnimation* YouJinAnimation::default_instance_ = NULL;

YouJinAnimation* YouJinAnimation::New() const {
  return new YouJinAnimation;
}

void YouJinAnimation::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    charid_ = 0;
    youjin_status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool YouJinAnimation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 charid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_youjin_status;
        break;
      }

      // required int32 youjin_status = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_youjin_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &youjin_status_)));
          set_has_youjin_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void YouJinAnimation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 charid = 1;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->charid(), output);
  }

  // required int32 youjin_status = 2;
  if (has_youjin_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->youjin_status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* YouJinAnimation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 charid = 1;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->charid(), target);
  }

  // required int32 youjin_status = 2;
  if (has_youjin_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->youjin_status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int YouJinAnimation::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 charid = 1;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->charid());
    }

    // required int32 youjin_status = 2;
    if (has_youjin_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->youjin_status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouJinAnimation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const YouJinAnimation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const YouJinAnimation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void YouJinAnimation::MergeFrom(const YouJinAnimation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_youjin_status()) {
      set_youjin_status(from.youjin_status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void YouJinAnimation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YouJinAnimation::CopyFrom(const YouJinAnimation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouJinAnimation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void YouJinAnimation::Swap(YouJinAnimation* other) {
  if (other != this) {
    std::swap(charid_, other->charid_);
    std::swap(youjin_status_, other->youjin_status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata YouJinAnimation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YouJinAnimation_descriptor_;
  metadata.reflection = YouJinAnimation_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace longyanmj
}  // namespace game
}  // namespace proto

// @@protoc_insertion_point(global_scope)
