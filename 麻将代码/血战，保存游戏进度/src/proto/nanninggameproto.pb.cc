// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nanninggameproto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "nanninggameproto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace game {
namespace nanningmj {

namespace {

const ::google::protobuf::Descriptor* AckSanBiFengHu_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AckSanBiFengHu_reflection_ = NULL;
const ::google::protobuf::Descriptor* nngamescene_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  nngamescene_reflection_ = NULL;
const ::google::protobuf::Descriptor* tagNanNingGameEnd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  tagNanNingGameEnd_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_nanninggameproto_2eproto() {
  protobuf_AddDesc_nanninggameproto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "nanninggameproto.proto");
  GOOGLE_CHECK(file != NULL);
  AckSanBiFengHu_descriptor_ = file->message_type(0);
  static const int AckSanBiFengHu_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AckSanBiFengHu, sanbi_chairid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AckSanBiFengHu, peng_sanbi_chairid_),
  };
  AckSanBiFengHu_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AckSanBiFengHu_descriptor_,
      AckSanBiFengHu::default_instance_,
      AckSanBiFengHu_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AckSanBiFengHu, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AckSanBiFengHu, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AckSanBiFengHu));
  nngamescene_descriptor_ = file->message_type(1);
  static const int nngamescene_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(nngamescene, san_bi_feng_hu_),
  };
  nngamescene_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      nngamescene_descriptor_,
      nngamescene::default_instance_,
      nngamescene_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(nngamescene, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(nngamescene, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(nngamescene));
  tagNanNingGameEnd_descriptor_ = file->message_type(2);
  static const int tagNanNingGameEnd_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagNanNingGameEnd, san_bi_feng_hu_),
  };
  tagNanNingGameEnd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      tagNanNingGameEnd_descriptor_,
      tagNanNingGameEnd::default_instance_,
      tagNanNingGameEnd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagNanNingGameEnd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagNanNingGameEnd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(tagNanNingGameEnd));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_nanninggameproto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AckSanBiFengHu_descriptor_, &AckSanBiFengHu::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    nngamescene_descriptor_, &nngamescene::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    tagNanNingGameEnd_descriptor_, &tagNanNingGameEnd::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_nanninggameproto_2eproto() {
  delete AckSanBiFengHu::default_instance_;
  delete AckSanBiFengHu_reflection_;
  delete nngamescene::default_instance_;
  delete nngamescene_reflection_;
  delete tagNanNingGameEnd::default_instance_;
  delete tagNanNingGameEnd_reflection_;
}

void protobuf_AddDesc_nanninggameproto_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026nanninggameproto.proto\022\024proto.game.nan"
    "ningmj\"C\n\016AckSanBiFengHu\022\025\n\rsanbi_chairi"
    "d\030\001 \001(\005\022\032\n\022peng_sanbi_chairid\030\002 \001(\005\"%\n\013n"
    "ngamescene\022\026\n\016san_bi_feng_hu\030\001 \003(\005\"+\n\021ta"
    "gNanNingGameEnd\022\026\n\016san_bi_feng_hu\030\001 \003(\005", 199);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "nanninggameproto.proto", &protobuf_RegisterTypes);
  AckSanBiFengHu::default_instance_ = new AckSanBiFengHu();
  nngamescene::default_instance_ = new nngamescene();
  tagNanNingGameEnd::default_instance_ = new tagNanNingGameEnd();
  AckSanBiFengHu::default_instance_->InitAsDefaultInstance();
  nngamescene::default_instance_->InitAsDefaultInstance();
  tagNanNingGameEnd::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_nanninggameproto_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_nanninggameproto_2eproto {
  StaticDescriptorInitializer_nanninggameproto_2eproto() {
    protobuf_AddDesc_nanninggameproto_2eproto();
  }
} static_descriptor_initializer_nanninggameproto_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int AckSanBiFengHu::kSanbiChairidFieldNumber;
const int AckSanBiFengHu::kPengSanbiChairidFieldNumber;
#endif  // !_MSC_VER

AckSanBiFengHu::AckSanBiFengHu()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AckSanBiFengHu::InitAsDefaultInstance() {
}

AckSanBiFengHu::AckSanBiFengHu(const AckSanBiFengHu& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AckSanBiFengHu::SharedCtor() {
  _cached_size_ = 0;
  sanbi_chairid_ = 0;
  peng_sanbi_chairid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AckSanBiFengHu::~AckSanBiFengHu() {
  SharedDtor();
}

void AckSanBiFengHu::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AckSanBiFengHu::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AckSanBiFengHu::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AckSanBiFengHu_descriptor_;
}

const AckSanBiFengHu& AckSanBiFengHu::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nanninggameproto_2eproto();
  return *default_instance_;
}

AckSanBiFengHu* AckSanBiFengHu::default_instance_ = NULL;

AckSanBiFengHu* AckSanBiFengHu::New() const {
  return new AckSanBiFengHu;
}

void AckSanBiFengHu::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    sanbi_chairid_ = 0;
    peng_sanbi_chairid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AckSanBiFengHu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sanbi_chairid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sanbi_chairid_)));
          set_has_sanbi_chairid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_peng_sanbi_chairid;
        break;
      }

      // optional int32 peng_sanbi_chairid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_peng_sanbi_chairid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &peng_sanbi_chairid_)));
          set_has_peng_sanbi_chairid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AckSanBiFengHu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 sanbi_chairid = 1;
  if (has_sanbi_chairid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sanbi_chairid(), output);
  }

  // optional int32 peng_sanbi_chairid = 2;
  if (has_peng_sanbi_chairid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->peng_sanbi_chairid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AckSanBiFengHu::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 sanbi_chairid = 1;
  if (has_sanbi_chairid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sanbi_chairid(), target);
  }

  // optional int32 peng_sanbi_chairid = 2;
  if (has_peng_sanbi_chairid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->peng_sanbi_chairid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AckSanBiFengHu::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 sanbi_chairid = 1;
    if (has_sanbi_chairid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sanbi_chairid());
    }

    // optional int32 peng_sanbi_chairid = 2;
    if (has_peng_sanbi_chairid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->peng_sanbi_chairid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AckSanBiFengHu::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AckSanBiFengHu* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AckSanBiFengHu*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AckSanBiFengHu::MergeFrom(const AckSanBiFengHu& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sanbi_chairid()) {
      set_sanbi_chairid(from.sanbi_chairid());
    }
    if (from.has_peng_sanbi_chairid()) {
      set_peng_sanbi_chairid(from.peng_sanbi_chairid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AckSanBiFengHu::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AckSanBiFengHu::CopyFrom(const AckSanBiFengHu& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AckSanBiFengHu::IsInitialized() const {

  return true;
}

void AckSanBiFengHu::Swap(AckSanBiFengHu* other) {
  if (other != this) {
    std::swap(sanbi_chairid_, other->sanbi_chairid_);
    std::swap(peng_sanbi_chairid_, other->peng_sanbi_chairid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AckSanBiFengHu::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AckSanBiFengHu_descriptor_;
  metadata.reflection = AckSanBiFengHu_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int nngamescene::kSanBiFengHuFieldNumber;
#endif  // !_MSC_VER

nngamescene::nngamescene()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void nngamescene::InitAsDefaultInstance() {
}

nngamescene::nngamescene(const nngamescene& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void nngamescene::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

nngamescene::~nngamescene() {
  SharedDtor();
}

void nngamescene::SharedDtor() {
  if (this != default_instance_) {
  }
}

void nngamescene::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* nngamescene::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return nngamescene_descriptor_;
}

const nngamescene& nngamescene::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nanninggameproto_2eproto();
  return *default_instance_;
}

nngamescene* nngamescene::default_instance_ = NULL;

nngamescene* nngamescene::New() const {
  return new nngamescene;
}

void nngamescene::Clear() {
  san_bi_feng_hu_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool nngamescene::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 san_bi_feng_hu = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_san_bi_feng_hu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_san_bi_feng_hu())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_san_bi_feng_hu())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_san_bi_feng_hu;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void nngamescene::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 san_bi_feng_hu = 1;
  for (int i = 0; i < this->san_bi_feng_hu_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->san_bi_feng_hu(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* nngamescene::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 san_bi_feng_hu = 1;
  for (int i = 0; i < this->san_bi_feng_hu_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->san_bi_feng_hu(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int nngamescene::ByteSize() const {
  int total_size = 0;

  // repeated int32 san_bi_feng_hu = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->san_bi_feng_hu_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->san_bi_feng_hu(i));
    }
    total_size += 1 * this->san_bi_feng_hu_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void nngamescene::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const nngamescene* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const nngamescene*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void nngamescene::MergeFrom(const nngamescene& from) {
  GOOGLE_CHECK_NE(&from, this);
  san_bi_feng_hu_.MergeFrom(from.san_bi_feng_hu_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void nngamescene::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void nngamescene::CopyFrom(const nngamescene& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool nngamescene::IsInitialized() const {

  return true;
}

void nngamescene::Swap(nngamescene* other) {
  if (other != this) {
    san_bi_feng_hu_.Swap(&other->san_bi_feng_hu_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata nngamescene::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = nngamescene_descriptor_;
  metadata.reflection = nngamescene_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int tagNanNingGameEnd::kSanBiFengHuFieldNumber;
#endif  // !_MSC_VER

tagNanNingGameEnd::tagNanNingGameEnd()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void tagNanNingGameEnd::InitAsDefaultInstance() {
}

tagNanNingGameEnd::tagNanNingGameEnd(const tagNanNingGameEnd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void tagNanNingGameEnd::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

tagNanNingGameEnd::~tagNanNingGameEnd() {
  SharedDtor();
}

void tagNanNingGameEnd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void tagNanNingGameEnd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tagNanNingGameEnd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return tagNanNingGameEnd_descriptor_;
}

const tagNanNingGameEnd& tagNanNingGameEnd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nanninggameproto_2eproto();
  return *default_instance_;
}

tagNanNingGameEnd* tagNanNingGameEnd::default_instance_ = NULL;

tagNanNingGameEnd* tagNanNingGameEnd::New() const {
  return new tagNanNingGameEnd;
}

void tagNanNingGameEnd::Clear() {
  san_bi_feng_hu_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool tagNanNingGameEnd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 san_bi_feng_hu = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_san_bi_feng_hu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_san_bi_feng_hu())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_san_bi_feng_hu())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_san_bi_feng_hu;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void tagNanNingGameEnd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 san_bi_feng_hu = 1;
  for (int i = 0; i < this->san_bi_feng_hu_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->san_bi_feng_hu(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* tagNanNingGameEnd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 san_bi_feng_hu = 1;
  for (int i = 0; i < this->san_bi_feng_hu_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->san_bi_feng_hu(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int tagNanNingGameEnd::ByteSize() const {
  int total_size = 0;

  // repeated int32 san_bi_feng_hu = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->san_bi_feng_hu_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->san_bi_feng_hu(i));
    }
    total_size += 1 * this->san_bi_feng_hu_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tagNanNingGameEnd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const tagNanNingGameEnd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const tagNanNingGameEnd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void tagNanNingGameEnd::MergeFrom(const tagNanNingGameEnd& from) {
  GOOGLE_CHECK_NE(&from, this);
  san_bi_feng_hu_.MergeFrom(from.san_bi_feng_hu_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void tagNanNingGameEnd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tagNanNingGameEnd::CopyFrom(const tagNanNingGameEnd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tagNanNingGameEnd::IsInitialized() const {

  return true;
}

void tagNanNingGameEnd::Swap(tagNanNingGameEnd* other) {
  if (other != this) {
    san_bi_feng_hu_.Swap(&other->san_bi_feng_hu_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata tagNanNingGameEnd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = tagNanNingGameEnd_descriptor_;
  metadata.reflection = tagNanNingGameEnd_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace nanningmj
}  // namespace game
}  // namespace proto

// @@protoc_insertion_point(global_scope)
