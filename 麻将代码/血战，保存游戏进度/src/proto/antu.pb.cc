// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: antu.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "antu.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace game {
namespace antu {

namespace {

const ::google::protobuf::Descriptor* AnTuGameEnd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnTuGameEnd_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_antu_2eproto() {
  protobuf_AddDesc_antu_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "antu.proto");
  GOOGLE_CHECK(file != NULL);
  AnTuGameEnd_descriptor_ = file->message_type(0);
  static const int AnTuGameEnd_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnTuGameEnd, huafen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnTuGameEnd, huacard_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnTuGameEnd, piaofen_),
  };
  AnTuGameEnd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AnTuGameEnd_descriptor_,
      AnTuGameEnd::default_instance_,
      AnTuGameEnd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnTuGameEnd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnTuGameEnd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AnTuGameEnd));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_antu_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AnTuGameEnd_descriptor_, &AnTuGameEnd::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_antu_2eproto() {
  delete AnTuGameEnd::default_instance_;
  delete AnTuGameEnd_reflection_;
}

void protobuf_AddDesc_antu_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nantu.proto\022\017proto.game.antu\"\?\n\013AnTuGam"
    "eEnd\022\016\n\006huafen\030\001 \002(\005\022\017\n\007huacard\030\002 \003(\005\022\017\n"
    "\007piaofen\030\003 \003(\005", 94);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "antu.proto", &protobuf_RegisterTypes);
  AnTuGameEnd::default_instance_ = new AnTuGameEnd();
  AnTuGameEnd::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_antu_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_antu_2eproto {
  StaticDescriptorInitializer_antu_2eproto() {
    protobuf_AddDesc_antu_2eproto();
  }
} static_descriptor_initializer_antu_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int AnTuGameEnd::kHuafenFieldNumber;
const int AnTuGameEnd::kHuacardFieldNumber;
const int AnTuGameEnd::kPiaofenFieldNumber;
#endif  // !_MSC_VER

AnTuGameEnd::AnTuGameEnd()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AnTuGameEnd::InitAsDefaultInstance() {
}

AnTuGameEnd::AnTuGameEnd(const AnTuGameEnd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AnTuGameEnd::SharedCtor() {
  _cached_size_ = 0;
  huafen_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AnTuGameEnd::~AnTuGameEnd() {
  SharedDtor();
}

void AnTuGameEnd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AnTuGameEnd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnTuGameEnd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnTuGameEnd_descriptor_;
}

const AnTuGameEnd& AnTuGameEnd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_antu_2eproto();
  return *default_instance_;
}

AnTuGameEnd* AnTuGameEnd::default_instance_ = NULL;

AnTuGameEnd* AnTuGameEnd::New() const {
  return new AnTuGameEnd;
}

void AnTuGameEnd::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    huafen_ = 0;
  }
  huacard_.Clear();
  piaofen_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AnTuGameEnd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 huafen = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &huafen_)));
          set_has_huafen();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_huacard;
        break;
      }

      // repeated int32 huacard = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_huacard:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_huacard())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_huacard())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_huacard;
        if (input->ExpectTag(24)) goto parse_piaofen;
        break;
      }

      // repeated int32 piaofen = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_piaofen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_piaofen())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_piaofen())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_piaofen;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AnTuGameEnd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 huafen = 1;
  if (has_huafen()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->huafen(), output);
  }

  // repeated int32 huacard = 2;
  for (int i = 0; i < this->huacard_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->huacard(i), output);
  }

  // repeated int32 piaofen = 3;
  for (int i = 0; i < this->piaofen_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->piaofen(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AnTuGameEnd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 huafen = 1;
  if (has_huafen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->huafen(), target);
  }

  // repeated int32 huacard = 2;
  for (int i = 0; i < this->huacard_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->huacard(i), target);
  }

  // repeated int32 piaofen = 3;
  for (int i = 0; i < this->piaofen_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->piaofen(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AnTuGameEnd::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 huafen = 1;
    if (has_huafen()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->huafen());
    }

  }
  // repeated int32 huacard = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->huacard_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->huacard(i));
    }
    total_size += 1 * this->huacard_size() + data_size;
  }

  // repeated int32 piaofen = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->piaofen_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->piaofen(i));
    }
    total_size += 1 * this->piaofen_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnTuGameEnd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AnTuGameEnd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AnTuGameEnd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AnTuGameEnd::MergeFrom(const AnTuGameEnd& from) {
  GOOGLE_CHECK_NE(&from, this);
  huacard_.MergeFrom(from.huacard_);
  piaofen_.MergeFrom(from.piaofen_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_huafen()) {
      set_huafen(from.huafen());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AnTuGameEnd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnTuGameEnd::CopyFrom(const AnTuGameEnd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnTuGameEnd::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AnTuGameEnd::Swap(AnTuGameEnd* other) {
  if (other != this) {
    std::swap(huafen_, other->huafen_);
    huacard_.Swap(&other->huacard_);
    piaofen_.Swap(&other->piaofen_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AnTuGameEnd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnTuGameEnd_descriptor_;
  metadata.reflection = AnTuGameEnd_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace antu
}  // namespace game
}  // namespace proto

// @@protoc_insertion_point(global_scope)
