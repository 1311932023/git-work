// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xiangyanggameproto.proto

#ifndef PROTOBUF_xiangyanggameproto_2eproto__INCLUDED
#define PROTOBUF_xiangyanggameproto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace game {
namespace xiangyangmj {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_xiangyanggameproto_2eproto();
void protobuf_AssignDesc_xiangyanggameproto_2eproto();
void protobuf_ShutdownFile_xiangyanggameproto_2eproto();

class FixedCard;
class HandCards;
class tagHuInfo;
class tagListenInfo;
class tagPreGangs;
class tagShowCards;
class tagPiaoScore;
class tagPiaoInfo;
class tagGameScene;
class tagEndInfo;
class tagXYGameEnd;
class ReqChoosePiao;
class AckStartPiao;
class AckBroadPiao;

// ===================================================================

class FixedCard : public ::google::protobuf::Message {
 public:
  FixedCard();
  virtual ~FixedCard();

  FixedCard(const FixedCard& from);

  inline FixedCard& operator=(const FixedCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FixedCard& default_instance();

  void Swap(FixedCard* other);

  // implements Message ----------------------------------------------

  FixedCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FixedCard& from);
  void MergeFrom(const FixedCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 CardData = 1;
  inline bool has_carddata() const;
  inline void clear_carddata();
  static const int kCardDataFieldNumber = 1;
  inline ::google::protobuf::int32 carddata() const;
  inline void set_carddata(::google::protobuf::int32 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 chairID = 3;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairIDFieldNumber = 3;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.xiangyangmj.FixedCard)
 private:
  inline void set_has_carddata();
  inline void clear_has_carddata();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_chairid();
  inline void clear_has_chairid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 carddata_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 chairid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_xiangyanggameproto_2eproto();
  friend void protobuf_AssignDesc_xiangyanggameproto_2eproto();
  friend void protobuf_ShutdownFile_xiangyanggameproto_2eproto();

  void InitAsDefaultInstance();
  static FixedCard* default_instance_;
};
// -------------------------------------------------------------------

class HandCards : public ::google::protobuf::Message {
 public:
  HandCards();
  virtual ~HandCards();

  HandCards(const HandCards& from);

  inline HandCards& operator=(const HandCards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HandCards& default_instance();

  void Swap(HandCards* other);

  // implements Message ----------------------------------------------

  HandCards* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HandCards& from);
  void MergeFrom(const HandCards& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ChangeableCardsLen = 1;
  inline bool has_changeablecardslen() const;
  inline void clear_changeablecardslen();
  static const int kChangeableCardsLenFieldNumber = 1;
  inline ::google::protobuf::int32 changeablecardslen() const;
  inline void set_changeablecardslen(::google::protobuf::int32 value);

  // repeated int32 ChangeableCards = 2;
  inline int changeablecards_size() const;
  inline void clear_changeablecards();
  static const int kChangeableCardsFieldNumber = 2;
  inline ::google::protobuf::int32 changeablecards(int index) const;
  inline void set_changeablecards(int index, ::google::protobuf::int32 value);
  inline void add_changeablecards(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      changeablecards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_changeablecards();

  // optional int32 FixedCardsLen = 3;
  inline bool has_fixedcardslen() const;
  inline void clear_fixedcardslen();
  static const int kFixedCardsLenFieldNumber = 3;
  inline ::google::protobuf::int32 fixedcardslen() const;
  inline void set_fixedcardslen(::google::protobuf::int32 value);

  // repeated .proto.game.xiangyangmj.FixedCard stFixedCards = 4;
  inline int stfixedcards_size() const;
  inline void clear_stfixedcards();
  static const int kStFixedCardsFieldNumber = 4;
  inline const ::proto::game::xiangyangmj::FixedCard& stfixedcards(int index) const;
  inline ::proto::game::xiangyangmj::FixedCard* mutable_stfixedcards(int index);
  inline ::proto::game::xiangyangmj::FixedCard* add_stfixedcards();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::FixedCard >&
      stfixedcards() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::FixedCard >*
      mutable_stfixedcards();

  // @@protoc_insertion_point(class_scope:proto.game.xiangyangmj.HandCards)
 private:
  inline void set_has_changeablecardslen();
  inline void clear_has_changeablecardslen();
  inline void set_has_fixedcardslen();
  inline void clear_has_fixedcardslen();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > changeablecards_;
  ::google::protobuf::int32 changeablecardslen_;
  ::google::protobuf::int32 fixedcardslen_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::FixedCard > stfixedcards_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_xiangyanggameproto_2eproto();
  friend void protobuf_AssignDesc_xiangyanggameproto_2eproto();
  friend void protobuf_ShutdownFile_xiangyanggameproto_2eproto();

  void InitAsDefaultInstance();
  static HandCards* default_instance_;
};
// -------------------------------------------------------------------

class tagHuInfo : public ::google::protobuf::Message {
 public:
  tagHuInfo();
  virtual ~tagHuInfo();

  tagHuInfo(const tagHuInfo& from);

  inline tagHuInfo& operator=(const tagHuInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagHuInfo& default_instance();

  void Swap(tagHuInfo* other);

  // implements Message ----------------------------------------------

  tagHuInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagHuInfo& from);
  void MergeFrom(const tagHuInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Card = 1;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 1;
  inline ::google::protobuf::int32 card() const;
  inline void set_card(::google::protobuf::int32 value);

  // optional int32 LeftNum = 2;
  inline bool has_leftnum() const;
  inline void clear_leftnum();
  static const int kLeftNumFieldNumber = 2;
  inline ::google::protobuf::int32 leftnum() const;
  inline void set_leftnum(::google::protobuf::int32 value);

  // optional int32 HuFanNum = 3;
  inline bool has_hufannum() const;
  inline void clear_hufannum();
  static const int kHuFanNumFieldNumber = 3;
  inline ::google::protobuf::int32 hufannum() const;
  inline void set_hufannum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.xiangyangmj.tagHuInfo)
 private:
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_leftnum();
  inline void clear_has_leftnum();
  inline void set_has_hufannum();
  inline void clear_has_hufannum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 card_;
  ::google::protobuf::int32 leftnum_;
  ::google::protobuf::int32 hufannum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_xiangyanggameproto_2eproto();
  friend void protobuf_AssignDesc_xiangyanggameproto_2eproto();
  friend void protobuf_ShutdownFile_xiangyanggameproto_2eproto();

  void InitAsDefaultInstance();
  static tagHuInfo* default_instance_;
};
// -------------------------------------------------------------------

class tagListenInfo : public ::google::protobuf::Message {
 public:
  tagListenInfo();
  virtual ~tagListenInfo();

  tagListenInfo(const tagListenInfo& from);

  inline tagListenInfo& operator=(const tagListenInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagListenInfo& default_instance();

  void Swap(tagListenInfo* other);

  // implements Message ----------------------------------------------

  tagListenInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagListenInfo& from);
  void MergeFrom(const tagListenInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 OutCard = 1;
  inline bool has_outcard() const;
  inline void clear_outcard();
  static const int kOutCardFieldNumber = 1;
  inline ::google::protobuf::int32 outcard() const;
  inline void set_outcard(::google::protobuf::int32 value);

  // repeated .proto.game.xiangyangmj.tagHuInfo HuInfo = 2;
  inline int huinfo_size() const;
  inline void clear_huinfo();
  static const int kHuInfoFieldNumber = 2;
  inline const ::proto::game::xiangyangmj::tagHuInfo& huinfo(int index) const;
  inline ::proto::game::xiangyangmj::tagHuInfo* mutable_huinfo(int index);
  inline ::proto::game::xiangyangmj::tagHuInfo* add_huinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagHuInfo >&
      huinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagHuInfo >*
      mutable_huinfo();

  // @@protoc_insertion_point(class_scope:proto.game.xiangyangmj.tagListenInfo)
 private:
  inline void set_has_outcard();
  inline void clear_has_outcard();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagHuInfo > huinfo_;
  ::google::protobuf::int32 outcard_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_xiangyanggameproto_2eproto();
  friend void protobuf_AssignDesc_xiangyanggameproto_2eproto();
  friend void protobuf_ShutdownFile_xiangyanggameproto_2eproto();

  void InitAsDefaultInstance();
  static tagListenInfo* default_instance_;
};
// -------------------------------------------------------------------

class tagPreGangs : public ::google::protobuf::Message {
 public:
  tagPreGangs();
  virtual ~tagPreGangs();

  tagPreGangs(const tagPreGangs& from);

  inline tagPreGangs& operator=(const tagPreGangs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagPreGangs& default_instance();

  void Swap(tagPreGangs* other);

  // implements Message ----------------------------------------------

  tagPreGangs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagPreGangs& from);
  void MergeFrom(const tagPreGangs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 OutCard = 1;
  inline bool has_outcard() const;
  inline void clear_outcard();
  static const int kOutCardFieldNumber = 1;
  inline ::google::protobuf::int32 outcard() const;
  inline void set_outcard(::google::protobuf::int32 value);

  // repeated int32 GangInfo = 2;
  inline int ganginfo_size() const;
  inline void clear_ganginfo();
  static const int kGangInfoFieldNumber = 2;
  inline ::google::protobuf::int32 ganginfo(int index) const;
  inline void set_ganginfo(int index, ::google::protobuf::int32 value);
  inline void add_ganginfo(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ganginfo() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ganginfo();

  // @@protoc_insertion_point(class_scope:proto.game.xiangyangmj.tagPreGangs)
 private:
  inline void set_has_outcard();
  inline void clear_has_outcard();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ganginfo_;
  ::google::protobuf::int32 outcard_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_xiangyanggameproto_2eproto();
  friend void protobuf_AssignDesc_xiangyanggameproto_2eproto();
  friend void protobuf_ShutdownFile_xiangyanggameproto_2eproto();

  void InitAsDefaultInstance();
  static tagPreGangs* default_instance_;
};
// -------------------------------------------------------------------

class tagShowCards : public ::google::protobuf::Message {
 public:
  tagShowCards();
  virtual ~tagShowCards();

  tagShowCards(const tagShowCards& from);

  inline tagShowCards& operator=(const tagShowCards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagShowCards& default_instance();

  void Swap(tagShowCards* other);

  // implements Message ----------------------------------------------

  tagShowCards* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagShowCards& from);
  void MergeFrom(const tagShowCards& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool show_card = 1;
  inline bool has_show_card() const;
  inline void clear_show_card();
  static const int kShowCardFieldNumber = 1;
  inline bool show_card() const;
  inline void set_show_card(bool value);

  // optional .proto.game.xiangyangmj.HandCards UserCard = 2;
  inline bool has_usercard() const;
  inline void clear_usercard();
  static const int kUserCardFieldNumber = 2;
  inline const ::proto::game::xiangyangmj::HandCards& usercard() const;
  inline ::proto::game::xiangyangmj::HandCards* mutable_usercard();
  inline ::proto::game::xiangyangmj::HandCards* release_usercard();
  inline void set_allocated_usercard(::proto::game::xiangyangmj::HandCards* usercard);

  // optional int32 seatid = 3;
  inline bool has_seatid() const;
  inline void clear_seatid();
  static const int kSeatidFieldNumber = 3;
  inline ::google::protobuf::int32 seatid() const;
  inline void set_seatid(::google::protobuf::int32 value);

  // optional bool show_card_op = 4;
  inline bool has_show_card_op() const;
  inline void clear_show_card_op();
  static const int kShowCardOpFieldNumber = 4;
  inline bool show_card_op() const;
  inline void set_show_card_op(bool value);

  // repeated .proto.game.xiangyangmj.tagListenInfo ListenInfo = 5;
  inline int listeninfo_size() const;
  inline void clear_listeninfo();
  static const int kListenInfoFieldNumber = 5;
  inline const ::proto::game::xiangyangmj::tagListenInfo& listeninfo(int index) const;
  inline ::proto::game::xiangyangmj::tagListenInfo* mutable_listeninfo(int index);
  inline ::proto::game::xiangyangmj::tagListenInfo* add_listeninfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagListenInfo >&
      listeninfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagListenInfo >*
      mutable_listeninfo();

  // repeated .proto.game.xiangyangmj.tagPreGangs xy_pregang = 6;
  inline int xy_pregang_size() const;
  inline void clear_xy_pregang();
  static const int kXyPregangFieldNumber = 6;
  inline const ::proto::game::xiangyangmj::tagPreGangs& xy_pregang(int index) const;
  inline ::proto::game::xiangyangmj::tagPreGangs* mutable_xy_pregang(int index);
  inline ::proto::game::xiangyangmj::tagPreGangs* add_xy_pregang();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagPreGangs >&
      xy_pregang() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagPreGangs >*
      mutable_xy_pregang();

  // @@protoc_insertion_point(class_scope:proto.game.xiangyangmj.tagShowCards)
 private:
  inline void set_has_show_card();
  inline void clear_has_show_card();
  inline void set_has_usercard();
  inline void clear_has_usercard();
  inline void set_has_seatid();
  inline void clear_has_seatid();
  inline void set_has_show_card_op();
  inline void clear_has_show_card_op();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto::game::xiangyangmj::HandCards* usercard_;
  bool show_card_;
  bool show_card_op_;
  ::google::protobuf::int32 seatid_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagListenInfo > listeninfo_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagPreGangs > xy_pregang_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_xiangyanggameproto_2eproto();
  friend void protobuf_AssignDesc_xiangyanggameproto_2eproto();
  friend void protobuf_ShutdownFile_xiangyanggameproto_2eproto();

  void InitAsDefaultInstance();
  static tagShowCards* default_instance_;
};
// -------------------------------------------------------------------

class tagPiaoScore : public ::google::protobuf::Message {
 public:
  tagPiaoScore();
  virtual ~tagPiaoScore();

  tagPiaoScore(const tagPiaoScore& from);

  inline tagPiaoScore& operator=(const tagPiaoScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagPiaoScore& default_instance();

  void Swap(tagPiaoScore* other);

  // implements Message ----------------------------------------------

  tagPiaoScore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagPiaoScore& from);
  void MergeFrom(const tagPiaoScore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 seatid = 1;
  inline bool has_seatid() const;
  inline void clear_seatid();
  static const int kSeatidFieldNumber = 1;
  inline ::google::protobuf::int32 seatid() const;
  inline void set_seatid(::google::protobuf::int32 value);

  // optional int32 piao_score = 2;
  inline bool has_piao_score() const;
  inline void clear_piao_score();
  static const int kPiaoScoreFieldNumber = 2;
  inline ::google::protobuf::int32 piao_score() const;
  inline void set_piao_score(::google::protobuf::int32 value);

  // optional bool already_piao = 3;
  inline bool has_already_piao() const;
  inline void clear_already_piao();
  static const int kAlreadyPiaoFieldNumber = 3;
  inline bool already_piao() const;
  inline void set_already_piao(bool value);

  // @@protoc_insertion_point(class_scope:proto.game.xiangyangmj.tagPiaoScore)
 private:
  inline void set_has_seatid();
  inline void clear_has_seatid();
  inline void set_has_piao_score();
  inline void clear_has_piao_score();
  inline void set_has_already_piao();
  inline void clear_has_already_piao();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seatid_;
  ::google::protobuf::int32 piao_score_;
  bool already_piao_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_xiangyanggameproto_2eproto();
  friend void protobuf_AssignDesc_xiangyanggameproto_2eproto();
  friend void protobuf_ShutdownFile_xiangyanggameproto_2eproto();

  void InitAsDefaultInstance();
  static tagPiaoScore* default_instance_;
};
// -------------------------------------------------------------------

class tagPiaoInfo : public ::google::protobuf::Message {
 public:
  tagPiaoInfo();
  virtual ~tagPiaoInfo();

  tagPiaoInfo(const tagPiaoInfo& from);

  inline tagPiaoInfo& operator=(const tagPiaoInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagPiaoInfo& default_instance();

  void Swap(tagPiaoInfo* other);

  // implements Message ----------------------------------------------

  tagPiaoInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagPiaoInfo& from);
  void MergeFrom(const tagPiaoInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_piao = 1;
  inline bool has_is_piao() const;
  inline void clear_is_piao();
  static const int kIsPiaoFieldNumber = 1;
  inline bool is_piao() const;
  inline void set_is_piao(bool value);

  // repeated int32 can_piao_scores = 2;
  inline int can_piao_scores_size() const;
  inline void clear_can_piao_scores();
  static const int kCanPiaoScoresFieldNumber = 2;
  inline ::google::protobuf::int32 can_piao_scores(int index) const;
  inline void set_can_piao_scores(int index, ::google::protobuf::int32 value);
  inline void add_can_piao_scores(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      can_piao_scores() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_can_piao_scores();

  // repeated .proto.game.xiangyangmj.tagPiaoScore piao_scores = 3;
  inline int piao_scores_size() const;
  inline void clear_piao_scores();
  static const int kPiaoScoresFieldNumber = 3;
  inline const ::proto::game::xiangyangmj::tagPiaoScore& piao_scores(int index) const;
  inline ::proto::game::xiangyangmj::tagPiaoScore* mutable_piao_scores(int index);
  inline ::proto::game::xiangyangmj::tagPiaoScore* add_piao_scores();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagPiaoScore >&
      piao_scores() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagPiaoScore >*
      mutable_piao_scores();

  // @@protoc_insertion_point(class_scope:proto.game.xiangyangmj.tagPiaoInfo)
 private:
  inline void set_has_is_piao();
  inline void clear_has_is_piao();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > can_piao_scores_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagPiaoScore > piao_scores_;
  bool is_piao_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_xiangyanggameproto_2eproto();
  friend void protobuf_AssignDesc_xiangyanggameproto_2eproto();
  friend void protobuf_ShutdownFile_xiangyanggameproto_2eproto();

  void InitAsDefaultInstance();
  static tagPiaoInfo* default_instance_;
};
// -------------------------------------------------------------------

class tagGameScene : public ::google::protobuf::Message {
 public:
  tagGameScene();
  virtual ~tagGameScene();

  tagGameScene(const tagGameScene& from);

  inline tagGameScene& operator=(const tagGameScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagGameScene& default_instance();

  void Swap(tagGameScene* other);

  // implements Message ----------------------------------------------

  tagGameScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagGameScene& from);
  void MergeFrom(const tagGameScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.game.xiangyangmj.tagShowCards ShowCards = 1;
  inline int showcards_size() const;
  inline void clear_showcards();
  static const int kShowCardsFieldNumber = 1;
  inline const ::proto::game::xiangyangmj::tagShowCards& showcards(int index) const;
  inline ::proto::game::xiangyangmj::tagShowCards* mutable_showcards(int index);
  inline ::proto::game::xiangyangmj::tagShowCards* add_showcards();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagShowCards >&
      showcards() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagShowCards >*
      mutable_showcards();

  // optional .proto.game.xiangyangmj.tagPiaoInfo piao_info = 2;
  inline bool has_piao_info() const;
  inline void clear_piao_info();
  static const int kPiaoInfoFieldNumber = 2;
  inline const ::proto::game::xiangyangmj::tagPiaoInfo& piao_info() const;
  inline ::proto::game::xiangyangmj::tagPiaoInfo* mutable_piao_info();
  inline ::proto::game::xiangyangmj::tagPiaoInfo* release_piao_info();
  inline void set_allocated_piao_info(::proto::game::xiangyangmj::tagPiaoInfo* piao_info);

  // optional int32 room_user_id = 3;
  inline bool has_room_user_id() const;
  inline void clear_room_user_id();
  static const int kRoomUserIdFieldNumber = 3;
  inline ::google::protobuf::int32 room_user_id() const;
  inline void set_room_user_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.xiangyangmj.tagGameScene)
 private:
  inline void set_has_piao_info();
  inline void clear_has_piao_info();
  inline void set_has_room_user_id();
  inline void clear_has_room_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagShowCards > showcards_;
  ::proto::game::xiangyangmj::tagPiaoInfo* piao_info_;
  ::google::protobuf::int32 room_user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_xiangyanggameproto_2eproto();
  friend void protobuf_AssignDesc_xiangyanggameproto_2eproto();
  friend void protobuf_ShutdownFile_xiangyanggameproto_2eproto();

  void InitAsDefaultInstance();
  static tagGameScene* default_instance_;
};
// -------------------------------------------------------------------

class tagEndInfo : public ::google::protobuf::Message {
 public:
  tagEndInfo();
  virtual ~tagEndInfo();

  tagEndInfo(const tagEndInfo& from);

  inline tagEndInfo& operator=(const tagEndInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagEndInfo& default_instance();

  void Swap(tagEndInfo* other);

  // implements Message ----------------------------------------------

  tagEndInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagEndInfo& from);
  void MergeFrom(const tagEndInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 seatid = 1;
  inline bool has_seatid() const;
  inline void clear_seatid();
  static const int kSeatidFieldNumber = 1;
  inline ::google::protobuf::int32 seatid() const;
  inline void set_seatid(::google::protobuf::int32 value);

  // optional int32 piao_score = 2;
  inline bool has_piao_score() const;
  inline void clear_piao_score();
  static const int kPiaoScoreFieldNumber = 2;
  inline ::google::protobuf::int32 piao_score() const;
  inline void set_piao_score(::google::protobuf::int32 value);

  // optional int32 piao_totalscore = 3;
  inline bool has_piao_totalscore() const;
  inline void clear_piao_totalscore();
  static const int kPiaoTotalscoreFieldNumber = 3;
  inline ::google::protobuf::int32 piao_totalscore() const;
  inline void set_piao_totalscore(::google::protobuf::int32 value);

  // optional int32 hu_score = 4;
  inline bool has_hu_score() const;
  inline void clear_hu_score();
  static const int kHuScoreFieldNumber = 4;
  inline ::google::protobuf::int32 hu_score() const;
  inline void set_hu_score(::google::protobuf::int32 value);

  // optional bool show_card = 5;
  inline bool has_show_card() const;
  inline void clear_show_card();
  static const int kShowCardFieldNumber = 5;
  inline bool show_card() const;
  inline void set_show_card(bool value);

  // @@protoc_insertion_point(class_scope:proto.game.xiangyangmj.tagEndInfo)
 private:
  inline void set_has_seatid();
  inline void clear_has_seatid();
  inline void set_has_piao_score();
  inline void clear_has_piao_score();
  inline void set_has_piao_totalscore();
  inline void clear_has_piao_totalscore();
  inline void set_has_hu_score();
  inline void clear_has_hu_score();
  inline void set_has_show_card();
  inline void clear_has_show_card();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seatid_;
  ::google::protobuf::int32 piao_score_;
  ::google::protobuf::int32 piao_totalscore_;
  ::google::protobuf::int32 hu_score_;
  bool show_card_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_xiangyanggameproto_2eproto();
  friend void protobuf_AssignDesc_xiangyanggameproto_2eproto();
  friend void protobuf_ShutdownFile_xiangyanggameproto_2eproto();

  void InitAsDefaultInstance();
  static tagEndInfo* default_instance_;
};
// -------------------------------------------------------------------

class tagXYGameEnd : public ::google::protobuf::Message {
 public:
  tagXYGameEnd();
  virtual ~tagXYGameEnd();

  tagXYGameEnd(const tagXYGameEnd& from);

  inline tagXYGameEnd& operator=(const tagXYGameEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagXYGameEnd& default_instance();

  void Swap(tagXYGameEnd* other);

  // implements Message ----------------------------------------------

  tagXYGameEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagXYGameEnd& from);
  void MergeFrom(const tagXYGameEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.game.xiangyangmj.tagEndInfo endinfo = 1;
  inline int endinfo_size() const;
  inline void clear_endinfo();
  static const int kEndinfoFieldNumber = 1;
  inline const ::proto::game::xiangyangmj::tagEndInfo& endinfo(int index) const;
  inline ::proto::game::xiangyangmj::tagEndInfo* mutable_endinfo(int index);
  inline ::proto::game::xiangyangmj::tagEndInfo* add_endinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagEndInfo >&
      endinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagEndInfo >*
      mutable_endinfo();

  // optional bool is_piao = 2;
  inline bool has_is_piao() const;
  inline void clear_is_piao();
  static const int kIsPiaoFieldNumber = 2;
  inline bool is_piao() const;
  inline void set_is_piao(bool value);

  // @@protoc_insertion_point(class_scope:proto.game.xiangyangmj.tagXYGameEnd)
 private:
  inline void set_has_is_piao();
  inline void clear_has_is_piao();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagEndInfo > endinfo_;
  bool is_piao_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_xiangyanggameproto_2eproto();
  friend void protobuf_AssignDesc_xiangyanggameproto_2eproto();
  friend void protobuf_ShutdownFile_xiangyanggameproto_2eproto();

  void InitAsDefaultInstance();
  static tagXYGameEnd* default_instance_;
};
// -------------------------------------------------------------------

class ReqChoosePiao : public ::google::protobuf::Message {
 public:
  ReqChoosePiao();
  virtual ~ReqChoosePiao();

  ReqChoosePiao(const ReqChoosePiao& from);

  inline ReqChoosePiao& operator=(const ReqChoosePiao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqChoosePiao& default_instance();

  void Swap(ReqChoosePiao* other);

  // implements Message ----------------------------------------------

  ReqChoosePiao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqChoosePiao& from);
  void MergeFrom(const ReqChoosePiao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 PiaoNum = 1;
  inline bool has_piaonum() const;
  inline void clear_piaonum();
  static const int kPiaoNumFieldNumber = 1;
  inline ::google::protobuf::int32 piaonum() const;
  inline void set_piaonum(::google::protobuf::int32 value);

  // optional int32 IsGouxuan = 2;
  inline bool has_isgouxuan() const;
  inline void clear_isgouxuan();
  static const int kIsGouxuanFieldNumber = 2;
  inline ::google::protobuf::int32 isgouxuan() const;
  inline void set_isgouxuan(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.xiangyangmj.ReqChoosePiao)
 private:
  inline void set_has_piaonum();
  inline void clear_has_piaonum();
  inline void set_has_isgouxuan();
  inline void clear_has_isgouxuan();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 piaonum_;
  ::google::protobuf::int32 isgouxuan_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_xiangyanggameproto_2eproto();
  friend void protobuf_AssignDesc_xiangyanggameproto_2eproto();
  friend void protobuf_ShutdownFile_xiangyanggameproto_2eproto();

  void InitAsDefaultInstance();
  static ReqChoosePiao* default_instance_;
};
// -------------------------------------------------------------------

class AckStartPiao : public ::google::protobuf::Message {
 public:
  AckStartPiao();
  virtual ~AckStartPiao();

  AckStartPiao(const AckStartPiao& from);

  inline AckStartPiao& operator=(const AckStartPiao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckStartPiao& default_instance();

  void Swap(AckStartPiao* other);

  // implements Message ----------------------------------------------

  AckStartPiao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckStartPiao& from);
  void MergeFrom(const AckStartPiao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 piaoNum = 1;
  inline int piaonum_size() const;
  inline void clear_piaonum();
  static const int kPiaoNumFieldNumber = 1;
  inline ::google::protobuf::int32 piaonum(int index) const;
  inline void set_piaonum(int index, ::google::protobuf::int32 value);
  inline void add_piaonum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      piaonum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_piaonum();

  // @@protoc_insertion_point(class_scope:proto.game.xiangyangmj.AckStartPiao)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > piaonum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_xiangyanggameproto_2eproto();
  friend void protobuf_AssignDesc_xiangyanggameproto_2eproto();
  friend void protobuf_ShutdownFile_xiangyanggameproto_2eproto();

  void InitAsDefaultInstance();
  static AckStartPiao* default_instance_;
};
// -------------------------------------------------------------------

class AckBroadPiao : public ::google::protobuf::Message {
 public:
  AckBroadPiao();
  virtual ~AckBroadPiao();

  AckBroadPiao(const AckBroadPiao& from);

  inline AckBroadPiao& operator=(const AckBroadPiao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckBroadPiao& default_instance();

  void Swap(AckBroadPiao* other);

  // implements Message ----------------------------------------------

  AckBroadPiao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckBroadPiao& from);
  void MergeFrom(const AckBroadPiao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chariid = 1;
  inline bool has_chariid() const;
  inline void clear_chariid();
  static const int kChariidFieldNumber = 1;
  inline ::google::protobuf::int32 chariid() const;
  inline void set_chariid(::google::protobuf::int32 value);

  // optional int32 UserPiao = 2;
  inline bool has_userpiao() const;
  inline void clear_userpiao();
  static const int kUserPiaoFieldNumber = 2;
  inline ::google::protobuf::int32 userpiao() const;
  inline void set_userpiao(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.xiangyangmj.AckBroadPiao)
 private:
  inline void set_has_chariid();
  inline void clear_has_chariid();
  inline void set_has_userpiao();
  inline void clear_has_userpiao();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chariid_;
  ::google::protobuf::int32 userpiao_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_xiangyanggameproto_2eproto();
  friend void protobuf_AssignDesc_xiangyanggameproto_2eproto();
  friend void protobuf_ShutdownFile_xiangyanggameproto_2eproto();

  void InitAsDefaultInstance();
  static AckBroadPiao* default_instance_;
};
// ===================================================================


// ===================================================================

// FixedCard

// required int32 CardData = 1;
inline bool FixedCard::has_carddata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FixedCard::set_has_carddata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FixedCard::clear_has_carddata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FixedCard::clear_carddata() {
  carddata_ = 0;
  clear_has_carddata();
}
inline ::google::protobuf::int32 FixedCard::carddata() const {
  return carddata_;
}
inline void FixedCard::set_carddata(::google::protobuf::int32 value) {
  set_has_carddata();
  carddata_ = value;
}

// optional int32 state = 2;
inline bool FixedCard::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FixedCard::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FixedCard::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FixedCard::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 FixedCard::state() const {
  return state_;
}
inline void FixedCard::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 chairID = 3;
inline bool FixedCard::has_chairid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FixedCard::set_has_chairid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FixedCard::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FixedCard::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 FixedCard::chairid() const {
  return chairid_;
}
inline void FixedCard::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// -------------------------------------------------------------------

// HandCards

// required int32 ChangeableCardsLen = 1;
inline bool HandCards::has_changeablecardslen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HandCards::set_has_changeablecardslen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HandCards::clear_has_changeablecardslen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HandCards::clear_changeablecardslen() {
  changeablecardslen_ = 0;
  clear_has_changeablecardslen();
}
inline ::google::protobuf::int32 HandCards::changeablecardslen() const {
  return changeablecardslen_;
}
inline void HandCards::set_changeablecardslen(::google::protobuf::int32 value) {
  set_has_changeablecardslen();
  changeablecardslen_ = value;
}

// repeated int32 ChangeableCards = 2;
inline int HandCards::changeablecards_size() const {
  return changeablecards_.size();
}
inline void HandCards::clear_changeablecards() {
  changeablecards_.Clear();
}
inline ::google::protobuf::int32 HandCards::changeablecards(int index) const {
  return changeablecards_.Get(index);
}
inline void HandCards::set_changeablecards(int index, ::google::protobuf::int32 value) {
  changeablecards_.Set(index, value);
}
inline void HandCards::add_changeablecards(::google::protobuf::int32 value) {
  changeablecards_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HandCards::changeablecards() const {
  return changeablecards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HandCards::mutable_changeablecards() {
  return &changeablecards_;
}

// optional int32 FixedCardsLen = 3;
inline bool HandCards::has_fixedcardslen() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HandCards::set_has_fixedcardslen() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HandCards::clear_has_fixedcardslen() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HandCards::clear_fixedcardslen() {
  fixedcardslen_ = 0;
  clear_has_fixedcardslen();
}
inline ::google::protobuf::int32 HandCards::fixedcardslen() const {
  return fixedcardslen_;
}
inline void HandCards::set_fixedcardslen(::google::protobuf::int32 value) {
  set_has_fixedcardslen();
  fixedcardslen_ = value;
}

// repeated .proto.game.xiangyangmj.FixedCard stFixedCards = 4;
inline int HandCards::stfixedcards_size() const {
  return stfixedcards_.size();
}
inline void HandCards::clear_stfixedcards() {
  stfixedcards_.Clear();
}
inline const ::proto::game::xiangyangmj::FixedCard& HandCards::stfixedcards(int index) const {
  return stfixedcards_.Get(index);
}
inline ::proto::game::xiangyangmj::FixedCard* HandCards::mutable_stfixedcards(int index) {
  return stfixedcards_.Mutable(index);
}
inline ::proto::game::xiangyangmj::FixedCard* HandCards::add_stfixedcards() {
  return stfixedcards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::FixedCard >&
HandCards::stfixedcards() const {
  return stfixedcards_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::FixedCard >*
HandCards::mutable_stfixedcards() {
  return &stfixedcards_;
}

// -------------------------------------------------------------------

// tagHuInfo

// required int32 Card = 1;
inline bool tagHuInfo::has_card() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagHuInfo::set_has_card() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagHuInfo::clear_has_card() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagHuInfo::clear_card() {
  card_ = 0;
  clear_has_card();
}
inline ::google::protobuf::int32 tagHuInfo::card() const {
  return card_;
}
inline void tagHuInfo::set_card(::google::protobuf::int32 value) {
  set_has_card();
  card_ = value;
}

// optional int32 LeftNum = 2;
inline bool tagHuInfo::has_leftnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagHuInfo::set_has_leftnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagHuInfo::clear_has_leftnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagHuInfo::clear_leftnum() {
  leftnum_ = 0;
  clear_has_leftnum();
}
inline ::google::protobuf::int32 tagHuInfo::leftnum() const {
  return leftnum_;
}
inline void tagHuInfo::set_leftnum(::google::protobuf::int32 value) {
  set_has_leftnum();
  leftnum_ = value;
}

// optional int32 HuFanNum = 3;
inline bool tagHuInfo::has_hufannum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tagHuInfo::set_has_hufannum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tagHuInfo::clear_has_hufannum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tagHuInfo::clear_hufannum() {
  hufannum_ = 0;
  clear_has_hufannum();
}
inline ::google::protobuf::int32 tagHuInfo::hufannum() const {
  return hufannum_;
}
inline void tagHuInfo::set_hufannum(::google::protobuf::int32 value) {
  set_has_hufannum();
  hufannum_ = value;
}

// -------------------------------------------------------------------

// tagListenInfo

// required int32 OutCard = 1;
inline bool tagListenInfo::has_outcard() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagListenInfo::set_has_outcard() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagListenInfo::clear_has_outcard() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagListenInfo::clear_outcard() {
  outcard_ = 0;
  clear_has_outcard();
}
inline ::google::protobuf::int32 tagListenInfo::outcard() const {
  return outcard_;
}
inline void tagListenInfo::set_outcard(::google::protobuf::int32 value) {
  set_has_outcard();
  outcard_ = value;
}

// repeated .proto.game.xiangyangmj.tagHuInfo HuInfo = 2;
inline int tagListenInfo::huinfo_size() const {
  return huinfo_.size();
}
inline void tagListenInfo::clear_huinfo() {
  huinfo_.Clear();
}
inline const ::proto::game::xiangyangmj::tagHuInfo& tagListenInfo::huinfo(int index) const {
  return huinfo_.Get(index);
}
inline ::proto::game::xiangyangmj::tagHuInfo* tagListenInfo::mutable_huinfo(int index) {
  return huinfo_.Mutable(index);
}
inline ::proto::game::xiangyangmj::tagHuInfo* tagListenInfo::add_huinfo() {
  return huinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagHuInfo >&
tagListenInfo::huinfo() const {
  return huinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagHuInfo >*
tagListenInfo::mutable_huinfo() {
  return &huinfo_;
}

// -------------------------------------------------------------------

// tagPreGangs

// required int32 OutCard = 1;
inline bool tagPreGangs::has_outcard() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagPreGangs::set_has_outcard() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagPreGangs::clear_has_outcard() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagPreGangs::clear_outcard() {
  outcard_ = 0;
  clear_has_outcard();
}
inline ::google::protobuf::int32 tagPreGangs::outcard() const {
  return outcard_;
}
inline void tagPreGangs::set_outcard(::google::protobuf::int32 value) {
  set_has_outcard();
  outcard_ = value;
}

// repeated int32 GangInfo = 2;
inline int tagPreGangs::ganginfo_size() const {
  return ganginfo_.size();
}
inline void tagPreGangs::clear_ganginfo() {
  ganginfo_.Clear();
}
inline ::google::protobuf::int32 tagPreGangs::ganginfo(int index) const {
  return ganginfo_.Get(index);
}
inline void tagPreGangs::set_ganginfo(int index, ::google::protobuf::int32 value) {
  ganginfo_.Set(index, value);
}
inline void tagPreGangs::add_ganginfo(::google::protobuf::int32 value) {
  ganginfo_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagPreGangs::ganginfo() const {
  return ganginfo_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagPreGangs::mutable_ganginfo() {
  return &ganginfo_;
}

// -------------------------------------------------------------------

// tagShowCards

// optional bool show_card = 1;
inline bool tagShowCards::has_show_card() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagShowCards::set_has_show_card() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagShowCards::clear_has_show_card() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagShowCards::clear_show_card() {
  show_card_ = false;
  clear_has_show_card();
}
inline bool tagShowCards::show_card() const {
  return show_card_;
}
inline void tagShowCards::set_show_card(bool value) {
  set_has_show_card();
  show_card_ = value;
}

// optional .proto.game.xiangyangmj.HandCards UserCard = 2;
inline bool tagShowCards::has_usercard() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagShowCards::set_has_usercard() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagShowCards::clear_has_usercard() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagShowCards::clear_usercard() {
  if (usercard_ != NULL) usercard_->::proto::game::xiangyangmj::HandCards::Clear();
  clear_has_usercard();
}
inline const ::proto::game::xiangyangmj::HandCards& tagShowCards::usercard() const {
  return usercard_ != NULL ? *usercard_ : *default_instance_->usercard_;
}
inline ::proto::game::xiangyangmj::HandCards* tagShowCards::mutable_usercard() {
  set_has_usercard();
  if (usercard_ == NULL) usercard_ = new ::proto::game::xiangyangmj::HandCards;
  return usercard_;
}
inline ::proto::game::xiangyangmj::HandCards* tagShowCards::release_usercard() {
  clear_has_usercard();
  ::proto::game::xiangyangmj::HandCards* temp = usercard_;
  usercard_ = NULL;
  return temp;
}
inline void tagShowCards::set_allocated_usercard(::proto::game::xiangyangmj::HandCards* usercard) {
  delete usercard_;
  usercard_ = usercard;
  if (usercard) {
    set_has_usercard();
  } else {
    clear_has_usercard();
  }
}

// optional int32 seatid = 3;
inline bool tagShowCards::has_seatid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tagShowCards::set_has_seatid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tagShowCards::clear_has_seatid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tagShowCards::clear_seatid() {
  seatid_ = 0;
  clear_has_seatid();
}
inline ::google::protobuf::int32 tagShowCards::seatid() const {
  return seatid_;
}
inline void tagShowCards::set_seatid(::google::protobuf::int32 value) {
  set_has_seatid();
  seatid_ = value;
}

// optional bool show_card_op = 4;
inline bool tagShowCards::has_show_card_op() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void tagShowCards::set_has_show_card_op() {
  _has_bits_[0] |= 0x00000008u;
}
inline void tagShowCards::clear_has_show_card_op() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void tagShowCards::clear_show_card_op() {
  show_card_op_ = false;
  clear_has_show_card_op();
}
inline bool tagShowCards::show_card_op() const {
  return show_card_op_;
}
inline void tagShowCards::set_show_card_op(bool value) {
  set_has_show_card_op();
  show_card_op_ = value;
}

// repeated .proto.game.xiangyangmj.tagListenInfo ListenInfo = 5;
inline int tagShowCards::listeninfo_size() const {
  return listeninfo_.size();
}
inline void tagShowCards::clear_listeninfo() {
  listeninfo_.Clear();
}
inline const ::proto::game::xiangyangmj::tagListenInfo& tagShowCards::listeninfo(int index) const {
  return listeninfo_.Get(index);
}
inline ::proto::game::xiangyangmj::tagListenInfo* tagShowCards::mutable_listeninfo(int index) {
  return listeninfo_.Mutable(index);
}
inline ::proto::game::xiangyangmj::tagListenInfo* tagShowCards::add_listeninfo() {
  return listeninfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagListenInfo >&
tagShowCards::listeninfo() const {
  return listeninfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagListenInfo >*
tagShowCards::mutable_listeninfo() {
  return &listeninfo_;
}

// repeated .proto.game.xiangyangmj.tagPreGangs xy_pregang = 6;
inline int tagShowCards::xy_pregang_size() const {
  return xy_pregang_.size();
}
inline void tagShowCards::clear_xy_pregang() {
  xy_pregang_.Clear();
}
inline const ::proto::game::xiangyangmj::tagPreGangs& tagShowCards::xy_pregang(int index) const {
  return xy_pregang_.Get(index);
}
inline ::proto::game::xiangyangmj::tagPreGangs* tagShowCards::mutable_xy_pregang(int index) {
  return xy_pregang_.Mutable(index);
}
inline ::proto::game::xiangyangmj::tagPreGangs* tagShowCards::add_xy_pregang() {
  return xy_pregang_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagPreGangs >&
tagShowCards::xy_pregang() const {
  return xy_pregang_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagPreGangs >*
tagShowCards::mutable_xy_pregang() {
  return &xy_pregang_;
}

// -------------------------------------------------------------------

// tagPiaoScore

// optional int32 seatid = 1;
inline bool tagPiaoScore::has_seatid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagPiaoScore::set_has_seatid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagPiaoScore::clear_has_seatid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagPiaoScore::clear_seatid() {
  seatid_ = 0;
  clear_has_seatid();
}
inline ::google::protobuf::int32 tagPiaoScore::seatid() const {
  return seatid_;
}
inline void tagPiaoScore::set_seatid(::google::protobuf::int32 value) {
  set_has_seatid();
  seatid_ = value;
}

// optional int32 piao_score = 2;
inline bool tagPiaoScore::has_piao_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagPiaoScore::set_has_piao_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagPiaoScore::clear_has_piao_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagPiaoScore::clear_piao_score() {
  piao_score_ = 0;
  clear_has_piao_score();
}
inline ::google::protobuf::int32 tagPiaoScore::piao_score() const {
  return piao_score_;
}
inline void tagPiaoScore::set_piao_score(::google::protobuf::int32 value) {
  set_has_piao_score();
  piao_score_ = value;
}

// optional bool already_piao = 3;
inline bool tagPiaoScore::has_already_piao() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tagPiaoScore::set_has_already_piao() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tagPiaoScore::clear_has_already_piao() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tagPiaoScore::clear_already_piao() {
  already_piao_ = false;
  clear_has_already_piao();
}
inline bool tagPiaoScore::already_piao() const {
  return already_piao_;
}
inline void tagPiaoScore::set_already_piao(bool value) {
  set_has_already_piao();
  already_piao_ = value;
}

// -------------------------------------------------------------------

// tagPiaoInfo

// optional bool is_piao = 1;
inline bool tagPiaoInfo::has_is_piao() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagPiaoInfo::set_has_is_piao() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagPiaoInfo::clear_has_is_piao() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagPiaoInfo::clear_is_piao() {
  is_piao_ = false;
  clear_has_is_piao();
}
inline bool tagPiaoInfo::is_piao() const {
  return is_piao_;
}
inline void tagPiaoInfo::set_is_piao(bool value) {
  set_has_is_piao();
  is_piao_ = value;
}

// repeated int32 can_piao_scores = 2;
inline int tagPiaoInfo::can_piao_scores_size() const {
  return can_piao_scores_.size();
}
inline void tagPiaoInfo::clear_can_piao_scores() {
  can_piao_scores_.Clear();
}
inline ::google::protobuf::int32 tagPiaoInfo::can_piao_scores(int index) const {
  return can_piao_scores_.Get(index);
}
inline void tagPiaoInfo::set_can_piao_scores(int index, ::google::protobuf::int32 value) {
  can_piao_scores_.Set(index, value);
}
inline void tagPiaoInfo::add_can_piao_scores(::google::protobuf::int32 value) {
  can_piao_scores_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagPiaoInfo::can_piao_scores() const {
  return can_piao_scores_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagPiaoInfo::mutable_can_piao_scores() {
  return &can_piao_scores_;
}

// repeated .proto.game.xiangyangmj.tagPiaoScore piao_scores = 3;
inline int tagPiaoInfo::piao_scores_size() const {
  return piao_scores_.size();
}
inline void tagPiaoInfo::clear_piao_scores() {
  piao_scores_.Clear();
}
inline const ::proto::game::xiangyangmj::tagPiaoScore& tagPiaoInfo::piao_scores(int index) const {
  return piao_scores_.Get(index);
}
inline ::proto::game::xiangyangmj::tagPiaoScore* tagPiaoInfo::mutable_piao_scores(int index) {
  return piao_scores_.Mutable(index);
}
inline ::proto::game::xiangyangmj::tagPiaoScore* tagPiaoInfo::add_piao_scores() {
  return piao_scores_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagPiaoScore >&
tagPiaoInfo::piao_scores() const {
  return piao_scores_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagPiaoScore >*
tagPiaoInfo::mutable_piao_scores() {
  return &piao_scores_;
}

// -------------------------------------------------------------------

// tagGameScene

// repeated .proto.game.xiangyangmj.tagShowCards ShowCards = 1;
inline int tagGameScene::showcards_size() const {
  return showcards_.size();
}
inline void tagGameScene::clear_showcards() {
  showcards_.Clear();
}
inline const ::proto::game::xiangyangmj::tagShowCards& tagGameScene::showcards(int index) const {
  return showcards_.Get(index);
}
inline ::proto::game::xiangyangmj::tagShowCards* tagGameScene::mutable_showcards(int index) {
  return showcards_.Mutable(index);
}
inline ::proto::game::xiangyangmj::tagShowCards* tagGameScene::add_showcards() {
  return showcards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagShowCards >&
tagGameScene::showcards() const {
  return showcards_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagShowCards >*
tagGameScene::mutable_showcards() {
  return &showcards_;
}

// optional .proto.game.xiangyangmj.tagPiaoInfo piao_info = 2;
inline bool tagGameScene::has_piao_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagGameScene::set_has_piao_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagGameScene::clear_has_piao_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagGameScene::clear_piao_info() {
  if (piao_info_ != NULL) piao_info_->::proto::game::xiangyangmj::tagPiaoInfo::Clear();
  clear_has_piao_info();
}
inline const ::proto::game::xiangyangmj::tagPiaoInfo& tagGameScene::piao_info() const {
  return piao_info_ != NULL ? *piao_info_ : *default_instance_->piao_info_;
}
inline ::proto::game::xiangyangmj::tagPiaoInfo* tagGameScene::mutable_piao_info() {
  set_has_piao_info();
  if (piao_info_ == NULL) piao_info_ = new ::proto::game::xiangyangmj::tagPiaoInfo;
  return piao_info_;
}
inline ::proto::game::xiangyangmj::tagPiaoInfo* tagGameScene::release_piao_info() {
  clear_has_piao_info();
  ::proto::game::xiangyangmj::tagPiaoInfo* temp = piao_info_;
  piao_info_ = NULL;
  return temp;
}
inline void tagGameScene::set_allocated_piao_info(::proto::game::xiangyangmj::tagPiaoInfo* piao_info) {
  delete piao_info_;
  piao_info_ = piao_info;
  if (piao_info) {
    set_has_piao_info();
  } else {
    clear_has_piao_info();
  }
}

// optional int32 room_user_id = 3;
inline bool tagGameScene::has_room_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tagGameScene::set_has_room_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tagGameScene::clear_has_room_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tagGameScene::clear_room_user_id() {
  room_user_id_ = 0;
  clear_has_room_user_id();
}
inline ::google::protobuf::int32 tagGameScene::room_user_id() const {
  return room_user_id_;
}
inline void tagGameScene::set_room_user_id(::google::protobuf::int32 value) {
  set_has_room_user_id();
  room_user_id_ = value;
}

// -------------------------------------------------------------------

// tagEndInfo

// optional int32 seatid = 1;
inline bool tagEndInfo::has_seatid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagEndInfo::set_has_seatid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagEndInfo::clear_has_seatid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagEndInfo::clear_seatid() {
  seatid_ = 0;
  clear_has_seatid();
}
inline ::google::protobuf::int32 tagEndInfo::seatid() const {
  return seatid_;
}
inline void tagEndInfo::set_seatid(::google::protobuf::int32 value) {
  set_has_seatid();
  seatid_ = value;
}

// optional int32 piao_score = 2;
inline bool tagEndInfo::has_piao_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagEndInfo::set_has_piao_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagEndInfo::clear_has_piao_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagEndInfo::clear_piao_score() {
  piao_score_ = 0;
  clear_has_piao_score();
}
inline ::google::protobuf::int32 tagEndInfo::piao_score() const {
  return piao_score_;
}
inline void tagEndInfo::set_piao_score(::google::protobuf::int32 value) {
  set_has_piao_score();
  piao_score_ = value;
}

// optional int32 piao_totalscore = 3;
inline bool tagEndInfo::has_piao_totalscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tagEndInfo::set_has_piao_totalscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tagEndInfo::clear_has_piao_totalscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tagEndInfo::clear_piao_totalscore() {
  piao_totalscore_ = 0;
  clear_has_piao_totalscore();
}
inline ::google::protobuf::int32 tagEndInfo::piao_totalscore() const {
  return piao_totalscore_;
}
inline void tagEndInfo::set_piao_totalscore(::google::protobuf::int32 value) {
  set_has_piao_totalscore();
  piao_totalscore_ = value;
}

// optional int32 hu_score = 4;
inline bool tagEndInfo::has_hu_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void tagEndInfo::set_has_hu_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void tagEndInfo::clear_has_hu_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void tagEndInfo::clear_hu_score() {
  hu_score_ = 0;
  clear_has_hu_score();
}
inline ::google::protobuf::int32 tagEndInfo::hu_score() const {
  return hu_score_;
}
inline void tagEndInfo::set_hu_score(::google::protobuf::int32 value) {
  set_has_hu_score();
  hu_score_ = value;
}

// optional bool show_card = 5;
inline bool tagEndInfo::has_show_card() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void tagEndInfo::set_has_show_card() {
  _has_bits_[0] |= 0x00000010u;
}
inline void tagEndInfo::clear_has_show_card() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void tagEndInfo::clear_show_card() {
  show_card_ = false;
  clear_has_show_card();
}
inline bool tagEndInfo::show_card() const {
  return show_card_;
}
inline void tagEndInfo::set_show_card(bool value) {
  set_has_show_card();
  show_card_ = value;
}

// -------------------------------------------------------------------

// tagXYGameEnd

// repeated .proto.game.xiangyangmj.tagEndInfo endinfo = 1;
inline int tagXYGameEnd::endinfo_size() const {
  return endinfo_.size();
}
inline void tagXYGameEnd::clear_endinfo() {
  endinfo_.Clear();
}
inline const ::proto::game::xiangyangmj::tagEndInfo& tagXYGameEnd::endinfo(int index) const {
  return endinfo_.Get(index);
}
inline ::proto::game::xiangyangmj::tagEndInfo* tagXYGameEnd::mutable_endinfo(int index) {
  return endinfo_.Mutable(index);
}
inline ::proto::game::xiangyangmj::tagEndInfo* tagXYGameEnd::add_endinfo() {
  return endinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagEndInfo >&
tagXYGameEnd::endinfo() const {
  return endinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::xiangyangmj::tagEndInfo >*
tagXYGameEnd::mutable_endinfo() {
  return &endinfo_;
}

// optional bool is_piao = 2;
inline bool tagXYGameEnd::has_is_piao() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagXYGameEnd::set_has_is_piao() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagXYGameEnd::clear_has_is_piao() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagXYGameEnd::clear_is_piao() {
  is_piao_ = false;
  clear_has_is_piao();
}
inline bool tagXYGameEnd::is_piao() const {
  return is_piao_;
}
inline void tagXYGameEnd::set_is_piao(bool value) {
  set_has_is_piao();
  is_piao_ = value;
}

// -------------------------------------------------------------------

// ReqChoosePiao

// optional int32 PiaoNum = 1;
inline bool ReqChoosePiao::has_piaonum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqChoosePiao::set_has_piaonum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqChoosePiao::clear_has_piaonum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqChoosePiao::clear_piaonum() {
  piaonum_ = 0;
  clear_has_piaonum();
}
inline ::google::protobuf::int32 ReqChoosePiao::piaonum() const {
  return piaonum_;
}
inline void ReqChoosePiao::set_piaonum(::google::protobuf::int32 value) {
  set_has_piaonum();
  piaonum_ = value;
}

// optional int32 IsGouxuan = 2;
inline bool ReqChoosePiao::has_isgouxuan() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqChoosePiao::set_has_isgouxuan() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqChoosePiao::clear_has_isgouxuan() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqChoosePiao::clear_isgouxuan() {
  isgouxuan_ = 0;
  clear_has_isgouxuan();
}
inline ::google::protobuf::int32 ReqChoosePiao::isgouxuan() const {
  return isgouxuan_;
}
inline void ReqChoosePiao::set_isgouxuan(::google::protobuf::int32 value) {
  set_has_isgouxuan();
  isgouxuan_ = value;
}

// -------------------------------------------------------------------

// AckStartPiao

// repeated int32 piaoNum = 1;
inline int AckStartPiao::piaonum_size() const {
  return piaonum_.size();
}
inline void AckStartPiao::clear_piaonum() {
  piaonum_.Clear();
}
inline ::google::protobuf::int32 AckStartPiao::piaonum(int index) const {
  return piaonum_.Get(index);
}
inline void AckStartPiao::set_piaonum(int index, ::google::protobuf::int32 value) {
  piaonum_.Set(index, value);
}
inline void AckStartPiao::add_piaonum(::google::protobuf::int32 value) {
  piaonum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckStartPiao::piaonum() const {
  return piaonum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckStartPiao::mutable_piaonum() {
  return &piaonum_;
}

// -------------------------------------------------------------------

// AckBroadPiao

// optional int32 chariid = 1;
inline bool AckBroadPiao::has_chariid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckBroadPiao::set_has_chariid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckBroadPiao::clear_has_chariid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckBroadPiao::clear_chariid() {
  chariid_ = 0;
  clear_has_chariid();
}
inline ::google::protobuf::int32 AckBroadPiao::chariid() const {
  return chariid_;
}
inline void AckBroadPiao::set_chariid(::google::protobuf::int32 value) {
  set_has_chariid();
  chariid_ = value;
}

// optional int32 UserPiao = 2;
inline bool AckBroadPiao::has_userpiao() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckBroadPiao::set_has_userpiao() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckBroadPiao::clear_has_userpiao() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckBroadPiao::clear_userpiao() {
  userpiao_ = 0;
  clear_has_userpiao();
}
inline ::google::protobuf::int32 AckBroadPiao::userpiao() const {
  return userpiao_;
}
inline void AckBroadPiao::set_userpiao(::google::protobuf::int32 value) {
  set_has_userpiao();
  userpiao_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace xiangyangmj
}  // namespace game
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_xiangyanggameproto_2eproto__INCLUDED
