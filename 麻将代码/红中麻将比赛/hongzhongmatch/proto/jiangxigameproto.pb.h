// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jiangxigameproto.proto

#ifndef PROTOBUF_jiangxigameproto_2eproto__INCLUDED
#define PROTOBUF_jiangxigameproto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace game {
namespace jxmahjonggame {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_jiangxigameproto_2eproto();
void protobuf_AssignDesc_jiangxigameproto_2eproto();
void protobuf_ShutdownFile_jiangxigameproto_2eproto();

class jxgamescene;
class AckGameStart;
class FanInfo;
class jxmjGameEndInfo;

// ===================================================================

class jxgamescene : public ::google::protobuf::Message {
 public:
  jxgamescene();
  virtual ~jxgamescene();

  jxgamescene(const jxgamescene& from);

  inline jxgamescene& operator=(const jxgamescene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const jxgamescene& default_instance();

  void Swap(jxgamescene* other);

  // implements Message ----------------------------------------------

  jxgamescene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const jxgamescene& from);
  void MergeFrom(const jxgamescene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 roomType = 1;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomTypeFieldNumber = 1;
  inline ::google::protobuf::int32 roomtype() const;
  inline void set_roomtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.jxmahjonggame.jxgamescene)
 private:
  inline void set_has_roomtype();
  inline void clear_has_roomtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roomtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jiangxigameproto_2eproto();
  friend void protobuf_AssignDesc_jiangxigameproto_2eproto();
  friend void protobuf_ShutdownFile_jiangxigameproto_2eproto();

  void InitAsDefaultInstance();
  static jxgamescene* default_instance_;
};
// -------------------------------------------------------------------

class AckGameStart : public ::google::protobuf::Message {
 public:
  AckGameStart();
  virtual ~AckGameStart();

  AckGameStart(const AckGameStart& from);

  inline AckGameStart& operator=(const AckGameStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckGameStart& default_instance();

  void Swap(AckGameStart* other);

  // implements Message ----------------------------------------------

  AckGameStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckGameStart& from);
  void MergeFrom(const AckGameStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 bankerid = 1;
  inline bool has_bankerid() const;
  inline void clear_bankerid();
  static const int kBankeridFieldNumber = 1;
  inline ::google::protobuf::int32 bankerid() const;
  inline void set_bankerid(::google::protobuf::int32 value);

  // optional int32 quanfeng = 2;
  inline bool has_quanfeng() const;
  inline void clear_quanfeng();
  static const int kQuanfengFieldNumber = 2;
  inline ::google::protobuf::int32 quanfeng() const;
  inline void set_quanfeng(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.jxmahjonggame.AckGameStart)
 private:
  inline void set_has_bankerid();
  inline void clear_has_bankerid();
  inline void set_has_quanfeng();
  inline void clear_has_quanfeng();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bankerid_;
  ::google::protobuf::int32 quanfeng_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jiangxigameproto_2eproto();
  friend void protobuf_AssignDesc_jiangxigameproto_2eproto();
  friend void protobuf_ShutdownFile_jiangxigameproto_2eproto();

  void InitAsDefaultInstance();
  static AckGameStart* default_instance_;
};
// -------------------------------------------------------------------

class FanInfo : public ::google::protobuf::Message {
 public:
  FanInfo();
  virtual ~FanInfo();

  FanInfo(const FanInfo& from);

  inline FanInfo& operator=(const FanInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FanInfo& default_instance();

  void Swap(FanInfo* other);

  // implements Message ----------------------------------------------

  FanInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FanInfo& from);
  void MergeFrom(const FanInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chairID = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairIDFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // optional int32 EndType = 2;
  inline bool has_endtype() const;
  inline void clear_endtype();
  static const int kEndTypeFieldNumber = 2;
  inline ::google::protobuf::int32 endtype() const;
  inline void set_endtype(::google::protobuf::int32 value);

  // optional int32 SpecialType = 3;
  inline bool has_specialtype() const;
  inline void clear_specialtype();
  static const int kSpecialTypeFieldNumber = 3;
  inline ::google::protobuf::int32 specialtype() const;
  inline void set_specialtype(::google::protobuf::int32 value);

  // optional int32 FanType = 4;
  inline bool has_fantype() const;
  inline void clear_fantype();
  static const int kFanTypeFieldNumber = 4;
  inline ::google::protobuf::int32 fantype() const;
  inline void set_fantype(::google::protobuf::int32 value);

  // optional int32 FanNum = 5;
  inline bool has_fannum() const;
  inline void clear_fannum();
  static const int kFanNumFieldNumber = 5;
  inline ::google::protobuf::int32 fannum() const;
  inline void set_fannum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.jxmahjonggame.FanInfo)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_endtype();
  inline void clear_has_endtype();
  inline void set_has_specialtype();
  inline void clear_has_specialtype();
  inline void set_has_fantype();
  inline void clear_has_fantype();
  inline void set_has_fannum();
  inline void clear_has_fannum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chairid_;
  ::google::protobuf::int32 endtype_;
  ::google::protobuf::int32 specialtype_;
  ::google::protobuf::int32 fantype_;
  ::google::protobuf::int32 fannum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_jiangxigameproto_2eproto();
  friend void protobuf_AssignDesc_jiangxigameproto_2eproto();
  friend void protobuf_ShutdownFile_jiangxigameproto_2eproto();

  void InitAsDefaultInstance();
  static FanInfo* default_instance_;
};
// -------------------------------------------------------------------

class jxmjGameEndInfo : public ::google::protobuf::Message {
 public:
  jxmjGameEndInfo();
  virtual ~jxmjGameEndInfo();

  jxmjGameEndInfo(const jxmjGameEndInfo& from);

  inline jxmjGameEndInfo& operator=(const jxmjGameEndInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const jxmjGameEndInfo& default_instance();

  void Swap(jxmjGameEndInfo* other);

  // implements Message ----------------------------------------------

  jxmjGameEndInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const jxmjGameEndInfo& from);
  void MergeFrom(const jxmjGameEndInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.game.jxmahjonggame.FanInfo faninfo = 1;
  inline int faninfo_size() const;
  inline void clear_faninfo();
  static const int kFaninfoFieldNumber = 1;
  inline const ::proto::game::jxmahjonggame::FanInfo& faninfo(int index) const;
  inline ::proto::game::jxmahjonggame::FanInfo* mutable_faninfo(int index);
  inline ::proto::game::jxmahjonggame::FanInfo* add_faninfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::jxmahjonggame::FanInfo >&
      faninfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::jxmahjonggame::FanInfo >*
      mutable_faninfo();

  // repeated int32 HuScore = 2;
  inline int huscore_size() const;
  inline void clear_huscore();
  static const int kHuScoreFieldNumber = 2;
  inline ::google::protobuf::int32 huscore(int index) const;
  inline void set_huscore(int index, ::google::protobuf::int32 value);
  inline void add_huscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      huscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_huscore();

  // @@protoc_insertion_point(class_scope:proto.game.jxmahjonggame.jxmjGameEndInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::game::jxmahjonggame::FanInfo > faninfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > huscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jiangxigameproto_2eproto();
  friend void protobuf_AssignDesc_jiangxigameproto_2eproto();
  friend void protobuf_ShutdownFile_jiangxigameproto_2eproto();

  void InitAsDefaultInstance();
  static jxmjGameEndInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// jxgamescene

// optional int32 roomType = 1;
inline bool jxgamescene::has_roomtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void jxgamescene::set_has_roomtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void jxgamescene::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void jxgamescene::clear_roomtype() {
  roomtype_ = 0;
  clear_has_roomtype();
}
inline ::google::protobuf::int32 jxgamescene::roomtype() const {
  return roomtype_;
}
inline void jxgamescene::set_roomtype(::google::protobuf::int32 value) {
  set_has_roomtype();
  roomtype_ = value;
}

// -------------------------------------------------------------------

// AckGameStart

// required int32 bankerid = 1;
inline bool AckGameStart::has_bankerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckGameStart::set_has_bankerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckGameStart::clear_has_bankerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckGameStart::clear_bankerid() {
  bankerid_ = 0;
  clear_has_bankerid();
}
inline ::google::protobuf::int32 AckGameStart::bankerid() const {
  return bankerid_;
}
inline void AckGameStart::set_bankerid(::google::protobuf::int32 value) {
  set_has_bankerid();
  bankerid_ = value;
}

// optional int32 quanfeng = 2;
inline bool AckGameStart::has_quanfeng() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckGameStart::set_has_quanfeng() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckGameStart::clear_has_quanfeng() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckGameStart::clear_quanfeng() {
  quanfeng_ = 0;
  clear_has_quanfeng();
}
inline ::google::protobuf::int32 AckGameStart::quanfeng() const {
  return quanfeng_;
}
inline void AckGameStart::set_quanfeng(::google::protobuf::int32 value) {
  set_has_quanfeng();
  quanfeng_ = value;
}

// -------------------------------------------------------------------

// FanInfo

// optional int32 chairID = 1;
inline bool FanInfo::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FanInfo::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FanInfo::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FanInfo::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 FanInfo::chairid() const {
  return chairid_;
}
inline void FanInfo::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// optional int32 EndType = 2;
inline bool FanInfo::has_endtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FanInfo::set_has_endtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FanInfo::clear_has_endtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FanInfo::clear_endtype() {
  endtype_ = 0;
  clear_has_endtype();
}
inline ::google::protobuf::int32 FanInfo::endtype() const {
  return endtype_;
}
inline void FanInfo::set_endtype(::google::protobuf::int32 value) {
  set_has_endtype();
  endtype_ = value;
}

// optional int32 SpecialType = 3;
inline bool FanInfo::has_specialtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FanInfo::set_has_specialtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FanInfo::clear_has_specialtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FanInfo::clear_specialtype() {
  specialtype_ = 0;
  clear_has_specialtype();
}
inline ::google::protobuf::int32 FanInfo::specialtype() const {
  return specialtype_;
}
inline void FanInfo::set_specialtype(::google::protobuf::int32 value) {
  set_has_specialtype();
  specialtype_ = value;
}

// optional int32 FanType = 4;
inline bool FanInfo::has_fantype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FanInfo::set_has_fantype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FanInfo::clear_has_fantype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FanInfo::clear_fantype() {
  fantype_ = 0;
  clear_has_fantype();
}
inline ::google::protobuf::int32 FanInfo::fantype() const {
  return fantype_;
}
inline void FanInfo::set_fantype(::google::protobuf::int32 value) {
  set_has_fantype();
  fantype_ = value;
}

// optional int32 FanNum = 5;
inline bool FanInfo::has_fannum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FanInfo::set_has_fannum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FanInfo::clear_has_fannum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FanInfo::clear_fannum() {
  fannum_ = 0;
  clear_has_fannum();
}
inline ::google::protobuf::int32 FanInfo::fannum() const {
  return fannum_;
}
inline void FanInfo::set_fannum(::google::protobuf::int32 value) {
  set_has_fannum();
  fannum_ = value;
}

// -------------------------------------------------------------------

// jxmjGameEndInfo

// repeated .proto.game.jxmahjonggame.FanInfo faninfo = 1;
inline int jxmjGameEndInfo::faninfo_size() const {
  return faninfo_.size();
}
inline void jxmjGameEndInfo::clear_faninfo() {
  faninfo_.Clear();
}
inline const ::proto::game::jxmahjonggame::FanInfo& jxmjGameEndInfo::faninfo(int index) const {
  return faninfo_.Get(index);
}
inline ::proto::game::jxmahjonggame::FanInfo* jxmjGameEndInfo::mutable_faninfo(int index) {
  return faninfo_.Mutable(index);
}
inline ::proto::game::jxmahjonggame::FanInfo* jxmjGameEndInfo::add_faninfo() {
  return faninfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::jxmahjonggame::FanInfo >&
jxmjGameEndInfo::faninfo() const {
  return faninfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::jxmahjonggame::FanInfo >*
jxmjGameEndInfo::mutable_faninfo() {
  return &faninfo_;
}

// repeated int32 HuScore = 2;
inline int jxmjGameEndInfo::huscore_size() const {
  return huscore_.size();
}
inline void jxmjGameEndInfo::clear_huscore() {
  huscore_.Clear();
}
inline ::google::protobuf::int32 jxmjGameEndInfo::huscore(int index) const {
  return huscore_.Get(index);
}
inline void jxmjGameEndInfo::set_huscore(int index, ::google::protobuf::int32 value) {
  huscore_.Set(index, value);
}
inline void jxmjGameEndInfo::add_huscore(::google::protobuf::int32 value) {
  huscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
jxmjGameEndInfo::huscore() const {
  return huscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
jxmjGameEndInfo::mutable_huscore() {
  return &huscore_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace jxmahjonggame
}  // namespace game
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_jiangxigameproto_2eproto__INCLUDED
