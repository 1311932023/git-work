// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gdgameproto.proto

#ifndef PROTOBUF_gdgameproto_2eproto__INCLUDED
#define PROTOBUF_gdgameproto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace game {
namespace gdmahjonggame {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_gdgameproto_2eproto();
void protobuf_AssignDesc_gdgameproto_2eproto();
void protobuf_ShutdownFile_gdgameproto_2eproto();

class AckBeginQuanFeng;
class gdgamescene;
class AckGameStart;
class AckCopyBankerReack;
class HuaPaiInfo;
class AddFanInfo;
class FanInfo;
class CopyBankerInfo;
class gdmjGameEndInfo;

// ===================================================================

class AckBeginQuanFeng : public ::google::protobuf::Message {
 public:
  AckBeginQuanFeng();
  virtual ~AckBeginQuanFeng();

  AckBeginQuanFeng(const AckBeginQuanFeng& from);

  inline AckBeginQuanFeng& operator=(const AckBeginQuanFeng& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckBeginQuanFeng& default_instance();

  void Swap(AckBeginQuanFeng* other);

  // implements Message ----------------------------------------------

  AckBeginQuanFeng* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckBeginQuanFeng& from);
  void MergeFrom(const AckBeginQuanFeng& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 QuanFengCard = 1;
  inline int quanfengcard_size() const;
  inline void clear_quanfengcard();
  static const int kQuanFengCardFieldNumber = 1;
  inline ::google::protobuf::int32 quanfengcard(int index) const;
  inline void set_quanfengcard(int index, ::google::protobuf::int32 value);
  inline void add_quanfengcard(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      quanfengcard() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_quanfengcard();

  // @@protoc_insertion_point(class_scope:proto.game.gdmahjonggame.AckBeginQuanFeng)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > quanfengcard_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gdgameproto_2eproto();
  friend void protobuf_AssignDesc_gdgameproto_2eproto();
  friend void protobuf_ShutdownFile_gdgameproto_2eproto();

  void InitAsDefaultInstance();
  static AckBeginQuanFeng* default_instance_;
};
// -------------------------------------------------------------------

class gdgamescene : public ::google::protobuf::Message {
 public:
  gdgamescene();
  virtual ~gdgamescene();

  gdgamescene(const gdgamescene& from);

  inline gdgamescene& operator=(const gdgamescene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gdgamescene& default_instance();

  void Swap(gdgamescene* other);

  // implements Message ----------------------------------------------

  gdgamescene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gdgamescene& from);
  void MergeFrom(const gdgamescene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 QuanFengCard = 1;
  inline int quanfengcard_size() const;
  inline void clear_quanfengcard();
  static const int kQuanFengCardFieldNumber = 1;
  inline ::google::protobuf::int32 quanfengcard(int index) const;
  inline void set_quanfengcard(int index, ::google::protobuf::int32 value);
  inline void add_quanfengcard(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      quanfengcard() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_quanfengcard();

  // optional int32 QuanFeng = 2;
  inline bool has_quanfeng() const;
  inline void clear_quanfeng();
  static const int kQuanFengFieldNumber = 2;
  inline ::google::protobuf::int32 quanfeng() const;
  inline void set_quanfeng(::google::protobuf::int32 value);

  // repeated .proto.game.gdmahjonggame.HuaPaiInfo HuaPai = 3;
  inline int huapai_size() const;
  inline void clear_huapai();
  static const int kHuaPaiFieldNumber = 3;
  inline const ::proto::game::gdmahjonggame::HuaPaiInfo& huapai(int index) const;
  inline ::proto::game::gdmahjonggame::HuaPaiInfo* mutable_huapai(int index);
  inline ::proto::game::gdmahjonggame::HuaPaiInfo* add_huapai();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::HuaPaiInfo >&
      huapai() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::HuaPaiInfo >*
      mutable_huapai();

  // optional int32 PlayID = 4;
  inline bool has_playid() const;
  inline void clear_playid();
  static const int kPlayIDFieldNumber = 4;
  inline ::google::protobuf::int32 playid() const;
  inline void set_playid(::google::protobuf::int32 value);

  // optional int32 CurJoker = 5;
  inline bool has_curjoker() const;
  inline void clear_curjoker();
  static const int kCurJokerFieldNumber = 5;
  inline ::google::protobuf::int32 curjoker() const;
  inline void set_curjoker(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.gdmahjonggame.gdgamescene)
 private:
  inline void set_has_quanfeng();
  inline void clear_has_quanfeng();
  inline void set_has_playid();
  inline void clear_has_playid();
  inline void set_has_curjoker();
  inline void clear_has_curjoker();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > quanfengcard_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::HuaPaiInfo > huapai_;
  ::google::protobuf::int32 quanfeng_;
  ::google::protobuf::int32 playid_;
  ::google::protobuf::int32 curjoker_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_gdgameproto_2eproto();
  friend void protobuf_AssignDesc_gdgameproto_2eproto();
  friend void protobuf_ShutdownFile_gdgameproto_2eproto();

  void InitAsDefaultInstance();
  static gdgamescene* default_instance_;
};
// -------------------------------------------------------------------

class AckGameStart : public ::google::protobuf::Message {
 public:
  AckGameStart();
  virtual ~AckGameStart();

  AckGameStart(const AckGameStart& from);

  inline AckGameStart& operator=(const AckGameStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckGameStart& default_instance();

  void Swap(AckGameStart* other);

  // implements Message ----------------------------------------------

  AckGameStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckGameStart& from);
  void MergeFrom(const AckGameStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 bankerid = 1;
  inline bool has_bankerid() const;
  inline void clear_bankerid();
  static const int kBankeridFieldNumber = 1;
  inline ::google::protobuf::int32 bankerid() const;
  inline void set_bankerid(::google::protobuf::int32 value);

  // optional int32 quanfeng = 2;
  inline bool has_quanfeng() const;
  inline void clear_quanfeng();
  static const int kQuanfengFieldNumber = 2;
  inline ::google::protobuf::int32 quanfeng() const;
  inline void set_quanfeng(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.gdmahjonggame.AckGameStart)
 private:
  inline void set_has_bankerid();
  inline void clear_has_bankerid();
  inline void set_has_quanfeng();
  inline void clear_has_quanfeng();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bankerid_;
  ::google::protobuf::int32 quanfeng_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gdgameproto_2eproto();
  friend void protobuf_AssignDesc_gdgameproto_2eproto();
  friend void protobuf_ShutdownFile_gdgameproto_2eproto();

  void InitAsDefaultInstance();
  static AckGameStart* default_instance_;
};
// -------------------------------------------------------------------

class AckCopyBankerReack : public ::google::protobuf::Message {
 public:
  AckCopyBankerReack();
  virtual ~AckCopyBankerReack();

  AckCopyBankerReack(const AckCopyBankerReack& from);

  inline AckCopyBankerReack& operator=(const AckCopyBankerReack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckCopyBankerReack& default_instance();

  void Swap(AckCopyBankerReack* other);

  // implements Message ----------------------------------------------

  AckCopyBankerReack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckCopyBankerReack& from);
  void MergeFrom(const AckCopyBankerReack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 CopyBanker = 1;
  inline bool has_copybanker() const;
  inline void clear_copybanker();
  static const int kCopyBankerFieldNumber = 1;
  inline ::google::protobuf::int32 copybanker() const;
  inline void set_copybanker(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.gdmahjonggame.AckCopyBankerReack)
 private:
  inline void set_has_copybanker();
  inline void clear_has_copybanker();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 copybanker_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gdgameproto_2eproto();
  friend void protobuf_AssignDesc_gdgameproto_2eproto();
  friend void protobuf_ShutdownFile_gdgameproto_2eproto();

  void InitAsDefaultInstance();
  static AckCopyBankerReack* default_instance_;
};
// -------------------------------------------------------------------

class HuaPaiInfo : public ::google::protobuf::Message {
 public:
  HuaPaiInfo();
  virtual ~HuaPaiInfo();

  HuaPaiInfo(const HuaPaiInfo& from);

  inline HuaPaiInfo& operator=(const HuaPaiInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HuaPaiInfo& default_instance();

  void Swap(HuaPaiInfo* other);

  // implements Message ----------------------------------------------

  HuaPaiInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HuaPaiInfo& from);
  void MergeFrom(const HuaPaiInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 HuaCount = 1;
  inline bool has_huacount() const;
  inline void clear_huacount();
  static const int kHuaCountFieldNumber = 1;
  inline ::google::protobuf::int32 huacount() const;
  inline void set_huacount(::google::protobuf::int32 value);

  // repeated int32 HuaCard = 2;
  inline int huacard_size() const;
  inline void clear_huacard();
  static const int kHuaCardFieldNumber = 2;
  inline ::google::protobuf::int32 huacard(int index) const;
  inline void set_huacard(int index, ::google::protobuf::int32 value);
  inline void add_huacard(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      huacard() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_huacard();

  // @@protoc_insertion_point(class_scope:proto.game.gdmahjonggame.HuaPaiInfo)
 private:
  inline void set_has_huacount();
  inline void clear_has_huacount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > huacard_;
  ::google::protobuf::int32 huacount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gdgameproto_2eproto();
  friend void protobuf_AssignDesc_gdgameproto_2eproto();
  friend void protobuf_ShutdownFile_gdgameproto_2eproto();

  void InitAsDefaultInstance();
  static HuaPaiInfo* default_instance_;
};
// -------------------------------------------------------------------

class AddFanInfo : public ::google::protobuf::Message {
 public:
  AddFanInfo();
  virtual ~AddFanInfo();

  AddFanInfo(const AddFanInfo& from);

  inline AddFanInfo& operator=(const AddFanInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFanInfo& default_instance();

  void Swap(AddFanInfo* other);

  // implements Message ----------------------------------------------

  AddFanInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddFanInfo& from);
  void MergeFrom(const AddFanInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 AddType = 1;
  inline bool has_addtype() const;
  inline void clear_addtype();
  static const int kAddTypeFieldNumber = 1;
  inline ::google::protobuf::int32 addtype() const;
  inline void set_addtype(::google::protobuf::int32 value);

  // optional int32 AddNum = 2;
  inline bool has_addnum() const;
  inline void clear_addnum();
  static const int kAddNumFieldNumber = 2;
  inline ::google::protobuf::int32 addnum() const;
  inline void set_addnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.gdmahjonggame.AddFanInfo)
 private:
  inline void set_has_addtype();
  inline void clear_has_addtype();
  inline void set_has_addnum();
  inline void clear_has_addnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 addtype_;
  ::google::protobuf::int32 addnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gdgameproto_2eproto();
  friend void protobuf_AssignDesc_gdgameproto_2eproto();
  friend void protobuf_ShutdownFile_gdgameproto_2eproto();

  void InitAsDefaultInstance();
  static AddFanInfo* default_instance_;
};
// -------------------------------------------------------------------

class FanInfo : public ::google::protobuf::Message {
 public:
  FanInfo();
  virtual ~FanInfo();

  FanInfo(const FanInfo& from);

  inline FanInfo& operator=(const FanInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FanInfo& default_instance();

  void Swap(FanInfo* other);

  // implements Message ----------------------------------------------

  FanInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FanInfo& from);
  void MergeFrom(const FanInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chairID = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairIDFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // optional int32 isBaoHu = 2;
  inline bool has_isbaohu() const;
  inline void clear_isbaohu();
  static const int kIsBaoHuFieldNumber = 2;
  inline ::google::protobuf::int32 isbaohu() const;
  inline void set_isbaohu(::google::protobuf::int32 value);

  // optional int32 BaoPai = 3;
  inline bool has_baopai() const;
  inline void clear_baopai();
  static const int kBaoPaiFieldNumber = 3;
  inline ::google::protobuf::int32 baopai() const;
  inline void set_baopai(::google::protobuf::int32 value);

  // optional int32 EndType = 4;
  inline bool has_endtype() const;
  inline void clear_endtype();
  static const int kEndTypeFieldNumber = 4;
  inline ::google::protobuf::int32 endtype() const;
  inline void set_endtype(::google::protobuf::int32 value);

  // optional int32 SpecialType = 5;
  inline bool has_specialtype() const;
  inline void clear_specialtype();
  static const int kSpecialTypeFieldNumber = 5;
  inline ::google::protobuf::int32 specialtype() const;
  inline void set_specialtype(::google::protobuf::int32 value);

  // optional int32 FanType = 6;
  inline bool has_fantype() const;
  inline void clear_fantype();
  static const int kFanTypeFieldNumber = 6;
  inline ::google::protobuf::int32 fantype() const;
  inline void set_fantype(::google::protobuf::int32 value);

  // optional int32 FanNum = 7;
  inline bool has_fannum() const;
  inline void clear_fannum();
  static const int kFanNumFieldNumber = 7;
  inline ::google::protobuf::int32 fannum() const;
  inline void set_fannum(::google::protobuf::int32 value);

  // repeated .proto.game.gdmahjonggame.AddFanInfo addfan = 8;
  inline int addfan_size() const;
  inline void clear_addfan();
  static const int kAddfanFieldNumber = 8;
  inline const ::proto::game::gdmahjonggame::AddFanInfo& addfan(int index) const;
  inline ::proto::game::gdmahjonggame::AddFanInfo* mutable_addfan(int index);
  inline ::proto::game::gdmahjonggame::AddFanInfo* add_addfan();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::AddFanInfo >&
      addfan() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::AddFanInfo >*
      mutable_addfan();

  // @@protoc_insertion_point(class_scope:proto.game.gdmahjonggame.FanInfo)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_isbaohu();
  inline void clear_has_isbaohu();
  inline void set_has_baopai();
  inline void clear_has_baopai();
  inline void set_has_endtype();
  inline void clear_has_endtype();
  inline void set_has_specialtype();
  inline void clear_has_specialtype();
  inline void set_has_fantype();
  inline void clear_has_fantype();
  inline void set_has_fannum();
  inline void clear_has_fannum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chairid_;
  ::google::protobuf::int32 isbaohu_;
  ::google::protobuf::int32 baopai_;
  ::google::protobuf::int32 endtype_;
  ::google::protobuf::int32 specialtype_;
  ::google::protobuf::int32 fantype_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::AddFanInfo > addfan_;
  ::google::protobuf::int32 fannum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_gdgameproto_2eproto();
  friend void protobuf_AssignDesc_gdgameproto_2eproto();
  friend void protobuf_ShutdownFile_gdgameproto_2eproto();

  void InitAsDefaultInstance();
  static FanInfo* default_instance_;
};
// -------------------------------------------------------------------

class CopyBankerInfo : public ::google::protobuf::Message {
 public:
  CopyBankerInfo();
  virtual ~CopyBankerInfo();

  CopyBankerInfo(const CopyBankerInfo& from);

  inline CopyBankerInfo& operator=(const CopyBankerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CopyBankerInfo& default_instance();

  void Swap(CopyBankerInfo* other);

  // implements Message ----------------------------------------------

  CopyBankerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CopyBankerInfo& from);
  void MergeFrom(const CopyBankerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 bCopy = 1;
  inline bool has_bcopy() const;
  inline void clear_bcopy();
  static const int kBCopyFieldNumber = 1;
  inline ::google::protobuf::int32 bcopy() const;
  inline void set_bcopy(::google::protobuf::int32 value);

  // optional int32 Score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.gdmahjonggame.CopyBankerInfo)
 private:
  inline void set_has_bcopy();
  inline void clear_has_bcopy();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bcopy_;
  ::google::protobuf::int32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gdgameproto_2eproto();
  friend void protobuf_AssignDesc_gdgameproto_2eproto();
  friend void protobuf_ShutdownFile_gdgameproto_2eproto();

  void InitAsDefaultInstance();
  static CopyBankerInfo* default_instance_;
};
// -------------------------------------------------------------------

class gdmjGameEndInfo : public ::google::protobuf::Message {
 public:
  gdmjGameEndInfo();
  virtual ~gdmjGameEndInfo();

  gdmjGameEndInfo(const gdmjGameEndInfo& from);

  inline gdmjGameEndInfo& operator=(const gdmjGameEndInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gdmjGameEndInfo& default_instance();

  void Swap(gdmjGameEndInfo* other);

  // implements Message ----------------------------------------------

  gdmjGameEndInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gdmjGameEndInfo& from);
  void MergeFrom(const gdmjGameEndInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.game.gdmahjonggame.HuaPaiInfo HuaPai = 1;
  inline int huapai_size() const;
  inline void clear_huapai();
  static const int kHuaPaiFieldNumber = 1;
  inline const ::proto::game::gdmahjonggame::HuaPaiInfo& huapai(int index) const;
  inline ::proto::game::gdmahjonggame::HuaPaiInfo* mutable_huapai(int index);
  inline ::proto::game::gdmahjonggame::HuaPaiInfo* add_huapai();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::HuaPaiInfo >&
      huapai() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::HuaPaiInfo >*
      mutable_huapai();

  // repeated .proto.game.gdmahjonggame.FanInfo faninfo = 2;
  inline int faninfo_size() const;
  inline void clear_faninfo();
  static const int kFaninfoFieldNumber = 2;
  inline const ::proto::game::gdmahjonggame::FanInfo& faninfo(int index) const;
  inline ::proto::game::gdmahjonggame::FanInfo* mutable_faninfo(int index);
  inline ::proto::game::gdmahjonggame::FanInfo* add_faninfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::FanInfo >&
      faninfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::FanInfo >*
      mutable_faninfo();

  // repeated int32 HuaPaiScore = 3;
  inline int huapaiscore_size() const;
  inline void clear_huapaiscore();
  static const int kHuaPaiScoreFieldNumber = 3;
  inline ::google::protobuf::int32 huapaiscore(int index) const;
  inline void set_huapaiscore(int index, ::google::protobuf::int32 value);
  inline void add_huapaiscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      huapaiscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_huapaiscore();

  // repeated int32 HuScore = 4;
  inline int huscore_size() const;
  inline void clear_huscore();
  static const int kHuScoreFieldNumber = 4;
  inline ::google::protobuf::int32 huscore(int index) const;
  inline void set_huscore(int index, ::google::protobuf::int32 value);
  inline void add_huscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      huscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_huscore();

  // repeated .proto.game.gdmahjonggame.CopyBankerInfo CopyBankerScore = 5;
  inline int copybankerscore_size() const;
  inline void clear_copybankerscore();
  static const int kCopyBankerScoreFieldNumber = 5;
  inline const ::proto::game::gdmahjonggame::CopyBankerInfo& copybankerscore(int index) const;
  inline ::proto::game::gdmahjonggame::CopyBankerInfo* mutable_copybankerscore(int index);
  inline ::proto::game::gdmahjonggame::CopyBankerInfo* add_copybankerscore();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::CopyBankerInfo >&
      copybankerscore() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::CopyBankerInfo >*
      mutable_copybankerscore();

  // @@protoc_insertion_point(class_scope:proto.game.gdmahjonggame.gdmjGameEndInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::HuaPaiInfo > huapai_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::FanInfo > faninfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > huapaiscore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > huscore_;
  ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::CopyBankerInfo > copybankerscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_gdgameproto_2eproto();
  friend void protobuf_AssignDesc_gdgameproto_2eproto();
  friend void protobuf_ShutdownFile_gdgameproto_2eproto();

  void InitAsDefaultInstance();
  static gdmjGameEndInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// AckBeginQuanFeng

// repeated int32 QuanFengCard = 1;
inline int AckBeginQuanFeng::quanfengcard_size() const {
  return quanfengcard_.size();
}
inline void AckBeginQuanFeng::clear_quanfengcard() {
  quanfengcard_.Clear();
}
inline ::google::protobuf::int32 AckBeginQuanFeng::quanfengcard(int index) const {
  return quanfengcard_.Get(index);
}
inline void AckBeginQuanFeng::set_quanfengcard(int index, ::google::protobuf::int32 value) {
  quanfengcard_.Set(index, value);
}
inline void AckBeginQuanFeng::add_quanfengcard(::google::protobuf::int32 value) {
  quanfengcard_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckBeginQuanFeng::quanfengcard() const {
  return quanfengcard_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckBeginQuanFeng::mutable_quanfengcard() {
  return &quanfengcard_;
}

// -------------------------------------------------------------------

// gdgamescene

// repeated int32 QuanFengCard = 1;
inline int gdgamescene::quanfengcard_size() const {
  return quanfengcard_.size();
}
inline void gdgamescene::clear_quanfengcard() {
  quanfengcard_.Clear();
}
inline ::google::protobuf::int32 gdgamescene::quanfengcard(int index) const {
  return quanfengcard_.Get(index);
}
inline void gdgamescene::set_quanfengcard(int index, ::google::protobuf::int32 value) {
  quanfengcard_.Set(index, value);
}
inline void gdgamescene::add_quanfengcard(::google::protobuf::int32 value) {
  quanfengcard_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdgamescene::quanfengcard() const {
  return quanfengcard_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdgamescene::mutable_quanfengcard() {
  return &quanfengcard_;
}

// optional int32 QuanFeng = 2;
inline bool gdgamescene::has_quanfeng() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gdgamescene::set_has_quanfeng() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gdgamescene::clear_has_quanfeng() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gdgamescene::clear_quanfeng() {
  quanfeng_ = 0;
  clear_has_quanfeng();
}
inline ::google::protobuf::int32 gdgamescene::quanfeng() const {
  return quanfeng_;
}
inline void gdgamescene::set_quanfeng(::google::protobuf::int32 value) {
  set_has_quanfeng();
  quanfeng_ = value;
}

// repeated .proto.game.gdmahjonggame.HuaPaiInfo HuaPai = 3;
inline int gdgamescene::huapai_size() const {
  return huapai_.size();
}
inline void gdgamescene::clear_huapai() {
  huapai_.Clear();
}
inline const ::proto::game::gdmahjonggame::HuaPaiInfo& gdgamescene::huapai(int index) const {
  return huapai_.Get(index);
}
inline ::proto::game::gdmahjonggame::HuaPaiInfo* gdgamescene::mutable_huapai(int index) {
  return huapai_.Mutable(index);
}
inline ::proto::game::gdmahjonggame::HuaPaiInfo* gdgamescene::add_huapai() {
  return huapai_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::HuaPaiInfo >&
gdgamescene::huapai() const {
  return huapai_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::HuaPaiInfo >*
gdgamescene::mutable_huapai() {
  return &huapai_;
}

// optional int32 PlayID = 4;
inline bool gdgamescene::has_playid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gdgamescene::set_has_playid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gdgamescene::clear_has_playid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gdgamescene::clear_playid() {
  playid_ = 0;
  clear_has_playid();
}
inline ::google::protobuf::int32 gdgamescene::playid() const {
  return playid_;
}
inline void gdgamescene::set_playid(::google::protobuf::int32 value) {
  set_has_playid();
  playid_ = value;
}

// optional int32 CurJoker = 5;
inline bool gdgamescene::has_curjoker() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gdgamescene::set_has_curjoker() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gdgamescene::clear_has_curjoker() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gdgamescene::clear_curjoker() {
  curjoker_ = 0;
  clear_has_curjoker();
}
inline ::google::protobuf::int32 gdgamescene::curjoker() const {
  return curjoker_;
}
inline void gdgamescene::set_curjoker(::google::protobuf::int32 value) {
  set_has_curjoker();
  curjoker_ = value;
}

// -------------------------------------------------------------------

// AckGameStart

// required int32 bankerid = 1;
inline bool AckGameStart::has_bankerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckGameStart::set_has_bankerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckGameStart::clear_has_bankerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckGameStart::clear_bankerid() {
  bankerid_ = 0;
  clear_has_bankerid();
}
inline ::google::protobuf::int32 AckGameStart::bankerid() const {
  return bankerid_;
}
inline void AckGameStart::set_bankerid(::google::protobuf::int32 value) {
  set_has_bankerid();
  bankerid_ = value;
}

// optional int32 quanfeng = 2;
inline bool AckGameStart::has_quanfeng() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckGameStart::set_has_quanfeng() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckGameStart::clear_has_quanfeng() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckGameStart::clear_quanfeng() {
  quanfeng_ = 0;
  clear_has_quanfeng();
}
inline ::google::protobuf::int32 AckGameStart::quanfeng() const {
  return quanfeng_;
}
inline void AckGameStart::set_quanfeng(::google::protobuf::int32 value) {
  set_has_quanfeng();
  quanfeng_ = value;
}

// -------------------------------------------------------------------

// AckCopyBankerReack

// optional int32 CopyBanker = 1;
inline bool AckCopyBankerReack::has_copybanker() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckCopyBankerReack::set_has_copybanker() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckCopyBankerReack::clear_has_copybanker() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckCopyBankerReack::clear_copybanker() {
  copybanker_ = 0;
  clear_has_copybanker();
}
inline ::google::protobuf::int32 AckCopyBankerReack::copybanker() const {
  return copybanker_;
}
inline void AckCopyBankerReack::set_copybanker(::google::protobuf::int32 value) {
  set_has_copybanker();
  copybanker_ = value;
}

// -------------------------------------------------------------------

// HuaPaiInfo

// optional int32 HuaCount = 1;
inline bool HuaPaiInfo::has_huacount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HuaPaiInfo::set_has_huacount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HuaPaiInfo::clear_has_huacount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HuaPaiInfo::clear_huacount() {
  huacount_ = 0;
  clear_has_huacount();
}
inline ::google::protobuf::int32 HuaPaiInfo::huacount() const {
  return huacount_;
}
inline void HuaPaiInfo::set_huacount(::google::protobuf::int32 value) {
  set_has_huacount();
  huacount_ = value;
}

// repeated int32 HuaCard = 2;
inline int HuaPaiInfo::huacard_size() const {
  return huacard_.size();
}
inline void HuaPaiInfo::clear_huacard() {
  huacard_.Clear();
}
inline ::google::protobuf::int32 HuaPaiInfo::huacard(int index) const {
  return huacard_.Get(index);
}
inline void HuaPaiInfo::set_huacard(int index, ::google::protobuf::int32 value) {
  huacard_.Set(index, value);
}
inline void HuaPaiInfo::add_huacard(::google::protobuf::int32 value) {
  huacard_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HuaPaiInfo::huacard() const {
  return huacard_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HuaPaiInfo::mutable_huacard() {
  return &huacard_;
}

// -------------------------------------------------------------------

// AddFanInfo

// optional int32 AddType = 1;
inline bool AddFanInfo::has_addtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFanInfo::set_has_addtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFanInfo::clear_has_addtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFanInfo::clear_addtype() {
  addtype_ = 0;
  clear_has_addtype();
}
inline ::google::protobuf::int32 AddFanInfo::addtype() const {
  return addtype_;
}
inline void AddFanInfo::set_addtype(::google::protobuf::int32 value) {
  set_has_addtype();
  addtype_ = value;
}

// optional int32 AddNum = 2;
inline bool AddFanInfo::has_addnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddFanInfo::set_has_addnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddFanInfo::clear_has_addnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddFanInfo::clear_addnum() {
  addnum_ = 0;
  clear_has_addnum();
}
inline ::google::protobuf::int32 AddFanInfo::addnum() const {
  return addnum_;
}
inline void AddFanInfo::set_addnum(::google::protobuf::int32 value) {
  set_has_addnum();
  addnum_ = value;
}

// -------------------------------------------------------------------

// FanInfo

// optional int32 chairID = 1;
inline bool FanInfo::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FanInfo::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FanInfo::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FanInfo::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 FanInfo::chairid() const {
  return chairid_;
}
inline void FanInfo::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// optional int32 isBaoHu = 2;
inline bool FanInfo::has_isbaohu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FanInfo::set_has_isbaohu() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FanInfo::clear_has_isbaohu() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FanInfo::clear_isbaohu() {
  isbaohu_ = 0;
  clear_has_isbaohu();
}
inline ::google::protobuf::int32 FanInfo::isbaohu() const {
  return isbaohu_;
}
inline void FanInfo::set_isbaohu(::google::protobuf::int32 value) {
  set_has_isbaohu();
  isbaohu_ = value;
}

// optional int32 BaoPai = 3;
inline bool FanInfo::has_baopai() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FanInfo::set_has_baopai() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FanInfo::clear_has_baopai() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FanInfo::clear_baopai() {
  baopai_ = 0;
  clear_has_baopai();
}
inline ::google::protobuf::int32 FanInfo::baopai() const {
  return baopai_;
}
inline void FanInfo::set_baopai(::google::protobuf::int32 value) {
  set_has_baopai();
  baopai_ = value;
}

// optional int32 EndType = 4;
inline bool FanInfo::has_endtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FanInfo::set_has_endtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FanInfo::clear_has_endtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FanInfo::clear_endtype() {
  endtype_ = 0;
  clear_has_endtype();
}
inline ::google::protobuf::int32 FanInfo::endtype() const {
  return endtype_;
}
inline void FanInfo::set_endtype(::google::protobuf::int32 value) {
  set_has_endtype();
  endtype_ = value;
}

// optional int32 SpecialType = 5;
inline bool FanInfo::has_specialtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FanInfo::set_has_specialtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FanInfo::clear_has_specialtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FanInfo::clear_specialtype() {
  specialtype_ = 0;
  clear_has_specialtype();
}
inline ::google::protobuf::int32 FanInfo::specialtype() const {
  return specialtype_;
}
inline void FanInfo::set_specialtype(::google::protobuf::int32 value) {
  set_has_specialtype();
  specialtype_ = value;
}

// optional int32 FanType = 6;
inline bool FanInfo::has_fantype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FanInfo::set_has_fantype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FanInfo::clear_has_fantype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FanInfo::clear_fantype() {
  fantype_ = 0;
  clear_has_fantype();
}
inline ::google::protobuf::int32 FanInfo::fantype() const {
  return fantype_;
}
inline void FanInfo::set_fantype(::google::protobuf::int32 value) {
  set_has_fantype();
  fantype_ = value;
}

// optional int32 FanNum = 7;
inline bool FanInfo::has_fannum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FanInfo::set_has_fannum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FanInfo::clear_has_fannum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FanInfo::clear_fannum() {
  fannum_ = 0;
  clear_has_fannum();
}
inline ::google::protobuf::int32 FanInfo::fannum() const {
  return fannum_;
}
inline void FanInfo::set_fannum(::google::protobuf::int32 value) {
  set_has_fannum();
  fannum_ = value;
}

// repeated .proto.game.gdmahjonggame.AddFanInfo addfan = 8;
inline int FanInfo::addfan_size() const {
  return addfan_.size();
}
inline void FanInfo::clear_addfan() {
  addfan_.Clear();
}
inline const ::proto::game::gdmahjonggame::AddFanInfo& FanInfo::addfan(int index) const {
  return addfan_.Get(index);
}
inline ::proto::game::gdmahjonggame::AddFanInfo* FanInfo::mutable_addfan(int index) {
  return addfan_.Mutable(index);
}
inline ::proto::game::gdmahjonggame::AddFanInfo* FanInfo::add_addfan() {
  return addfan_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::AddFanInfo >&
FanInfo::addfan() const {
  return addfan_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::AddFanInfo >*
FanInfo::mutable_addfan() {
  return &addfan_;
}

// -------------------------------------------------------------------

// CopyBankerInfo

// optional int32 bCopy = 1;
inline bool CopyBankerInfo::has_bcopy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CopyBankerInfo::set_has_bcopy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CopyBankerInfo::clear_has_bcopy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CopyBankerInfo::clear_bcopy() {
  bcopy_ = 0;
  clear_has_bcopy();
}
inline ::google::protobuf::int32 CopyBankerInfo::bcopy() const {
  return bcopy_;
}
inline void CopyBankerInfo::set_bcopy(::google::protobuf::int32 value) {
  set_has_bcopy();
  bcopy_ = value;
}

// optional int32 Score = 2;
inline bool CopyBankerInfo::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CopyBankerInfo::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CopyBankerInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CopyBankerInfo::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 CopyBankerInfo::score() const {
  return score_;
}
inline void CopyBankerInfo::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// gdmjGameEndInfo

// repeated .proto.game.gdmahjonggame.HuaPaiInfo HuaPai = 1;
inline int gdmjGameEndInfo::huapai_size() const {
  return huapai_.size();
}
inline void gdmjGameEndInfo::clear_huapai() {
  huapai_.Clear();
}
inline const ::proto::game::gdmahjonggame::HuaPaiInfo& gdmjGameEndInfo::huapai(int index) const {
  return huapai_.Get(index);
}
inline ::proto::game::gdmahjonggame::HuaPaiInfo* gdmjGameEndInfo::mutable_huapai(int index) {
  return huapai_.Mutable(index);
}
inline ::proto::game::gdmahjonggame::HuaPaiInfo* gdmjGameEndInfo::add_huapai() {
  return huapai_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::HuaPaiInfo >&
gdmjGameEndInfo::huapai() const {
  return huapai_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::HuaPaiInfo >*
gdmjGameEndInfo::mutable_huapai() {
  return &huapai_;
}

// repeated .proto.game.gdmahjonggame.FanInfo faninfo = 2;
inline int gdmjGameEndInfo::faninfo_size() const {
  return faninfo_.size();
}
inline void gdmjGameEndInfo::clear_faninfo() {
  faninfo_.Clear();
}
inline const ::proto::game::gdmahjonggame::FanInfo& gdmjGameEndInfo::faninfo(int index) const {
  return faninfo_.Get(index);
}
inline ::proto::game::gdmahjonggame::FanInfo* gdmjGameEndInfo::mutable_faninfo(int index) {
  return faninfo_.Mutable(index);
}
inline ::proto::game::gdmahjonggame::FanInfo* gdmjGameEndInfo::add_faninfo() {
  return faninfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::FanInfo >&
gdmjGameEndInfo::faninfo() const {
  return faninfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::FanInfo >*
gdmjGameEndInfo::mutable_faninfo() {
  return &faninfo_;
}

// repeated int32 HuaPaiScore = 3;
inline int gdmjGameEndInfo::huapaiscore_size() const {
  return huapaiscore_.size();
}
inline void gdmjGameEndInfo::clear_huapaiscore() {
  huapaiscore_.Clear();
}
inline ::google::protobuf::int32 gdmjGameEndInfo::huapaiscore(int index) const {
  return huapaiscore_.Get(index);
}
inline void gdmjGameEndInfo::set_huapaiscore(int index, ::google::protobuf::int32 value) {
  huapaiscore_.Set(index, value);
}
inline void gdmjGameEndInfo::add_huapaiscore(::google::protobuf::int32 value) {
  huapaiscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjGameEndInfo::huapaiscore() const {
  return huapaiscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjGameEndInfo::mutable_huapaiscore() {
  return &huapaiscore_;
}

// repeated int32 HuScore = 4;
inline int gdmjGameEndInfo::huscore_size() const {
  return huscore_.size();
}
inline void gdmjGameEndInfo::clear_huscore() {
  huscore_.Clear();
}
inline ::google::protobuf::int32 gdmjGameEndInfo::huscore(int index) const {
  return huscore_.Get(index);
}
inline void gdmjGameEndInfo::set_huscore(int index, ::google::protobuf::int32 value) {
  huscore_.Set(index, value);
}
inline void gdmjGameEndInfo::add_huscore(::google::protobuf::int32 value) {
  huscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjGameEndInfo::huscore() const {
  return huscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjGameEndInfo::mutable_huscore() {
  return &huscore_;
}

// repeated .proto.game.gdmahjonggame.CopyBankerInfo CopyBankerScore = 5;
inline int gdmjGameEndInfo::copybankerscore_size() const {
  return copybankerscore_.size();
}
inline void gdmjGameEndInfo::clear_copybankerscore() {
  copybankerscore_.Clear();
}
inline const ::proto::game::gdmahjonggame::CopyBankerInfo& gdmjGameEndInfo::copybankerscore(int index) const {
  return copybankerscore_.Get(index);
}
inline ::proto::game::gdmahjonggame::CopyBankerInfo* gdmjGameEndInfo::mutable_copybankerscore(int index) {
  return copybankerscore_.Mutable(index);
}
inline ::proto::game::gdmahjonggame::CopyBankerInfo* gdmjGameEndInfo::add_copybankerscore() {
  return copybankerscore_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::CopyBankerInfo >&
gdmjGameEndInfo::copybankerscore() const {
  return copybankerscore_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::game::gdmahjonggame::CopyBankerInfo >*
gdmjGameEndInfo::mutable_copybankerscore() {
  return &copybankerscore_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace gdmahjonggame
}  // namespace game
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gdgameproto_2eproto__INCLUDED
