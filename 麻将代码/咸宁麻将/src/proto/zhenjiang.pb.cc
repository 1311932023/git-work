// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zhenjiang.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "zhenjiang.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace game {
namespace zhenjiang {

namespace {

const ::google::protobuf::Descriptor* DaInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DaInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* zhenjiangGameSence_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  zhenjiangGameSence_reflection_ = NULL;
const ::google::protobuf::Descriptor* zhenjiangGameEnd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  zhenjiangGameEnd_reflection_ = NULL;
const ::google::protobuf::Descriptor* zhenjiangGenZhang_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  zhenjiangGenZhang_reflection_ = NULL;
const ::google::protobuf::Descriptor* zhenjiangDaSum_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  zhenjiangDaSum_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_zhenjiang_2eproto() {
  protobuf_AddDesc_zhenjiang_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "zhenjiang.proto");
  GOOGLE_CHECK(file != NULL);
  DaInfo_descriptor_ = file->message_type(0);
  static const int DaInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaInfo, da_type_),
  };
  DaInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DaInfo_descriptor_,
      DaInfo::default_instance_,
      DaInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DaInfo));
  zhenjiangGameSence_descriptor_ = file->message_type(1);
  static const int zhenjiangGameSence_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangGameSence, dainfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangGameSence, da_sum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangGameSence, lock_laizi_),
  };
  zhenjiangGameSence_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      zhenjiangGameSence_descriptor_,
      zhenjiangGameSence::default_instance_,
      zhenjiangGameSence_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangGameSence, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangGameSence, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(zhenjiangGameSence));
  zhenjiangGameEnd_descriptor_ = file->message_type(2);
  static const int zhenjiangGameEnd_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangGameEnd, touda_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangGameEnd, erda_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangGameEnd, beidongda_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangGameEnd, genzhang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangGameEnd, da_fen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangGameEnd, gangfen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangGameEnd, hufen_),
  };
  zhenjiangGameEnd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      zhenjiangGameEnd_descriptor_,
      zhenjiangGameEnd::default_instance_,
      zhenjiangGameEnd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangGameEnd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangGameEnd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(zhenjiangGameEnd));
  zhenjiangGenZhang_descriptor_ = file->message_type(3);
  static const int zhenjiangGenZhang_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangGenZhang, charid_),
  };
  zhenjiangGenZhang_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      zhenjiangGenZhang_descriptor_,
      zhenjiangGenZhang::default_instance_,
      zhenjiangGenZhang_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangGenZhang, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangGenZhang, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(zhenjiangGenZhang));
  zhenjiangDaSum_descriptor_ = file->message_type(4);
  static const int zhenjiangDaSum_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangDaSum, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangDaSum, da_sum_),
  };
  zhenjiangDaSum_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      zhenjiangDaSum_descriptor_,
      zhenjiangDaSum::default_instance_,
      zhenjiangDaSum_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangDaSum, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(zhenjiangDaSum, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(zhenjiangDaSum));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_zhenjiang_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DaInfo_descriptor_, &DaInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    zhenjiangGameSence_descriptor_, &zhenjiangGameSence::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    zhenjiangGameEnd_descriptor_, &zhenjiangGameEnd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    zhenjiangGenZhang_descriptor_, &zhenjiangGenZhang::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    zhenjiangDaSum_descriptor_, &zhenjiangDaSum::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_zhenjiang_2eproto() {
  delete DaInfo::default_instance_;
  delete DaInfo_reflection_;
  delete zhenjiangGameSence::default_instance_;
  delete zhenjiangGameSence_reflection_;
  delete zhenjiangGameEnd::default_instance_;
  delete zhenjiangGameEnd_reflection_;
  delete zhenjiangGenZhang::default_instance_;
  delete zhenjiangGenZhang_reflection_;
  delete zhenjiangDaSum::default_instance_;
  delete zhenjiangDaSum_reflection_;
}

void protobuf_AddDesc_zhenjiang_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017zhenjiang.proto\022\024proto.game.zhenjiang\""
    "\031\n\006DaInfo\022\017\n\007da_type\030\001 \003(\005\"f\n\022zhenjiangG"
    "ameSence\022,\n\006dainfo\030\001 \003(\0132\034.proto.game.zh"
    "enjiang.DaInfo\022\016\n\006da_sum\030\002 \003(\005\022\022\n\nlock_l"
    "aizi\030\003 \002(\005\"\204\001\n\020zhenjiangGameEnd\022\r\n\005touda"
    "\030\001 \003(\005\022\014\n\004erda\030\002 \003(\005\022\021\n\tbeidongda\030\003 \003(\005\022"
    "\020\n\010genzhang\030\004 \003(\005\022\016\n\006da_fen\030\005 \003(\005\022\017\n\007gan"
    "gfen\030\006 \003(\005\022\r\n\005hufen\030\007 \003(\005\"#\n\021zhenjiangGe"
    "nZhang\022\016\n\006charid\030\001 \002(\005\"0\n\016zhenjiangDaSum"
    "\022\016\n\006charid\030\001 \002(\005\022\016\n\006da_sum\030\002 \002(\005", 392);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "zhenjiang.proto", &protobuf_RegisterTypes);
  DaInfo::default_instance_ = new DaInfo();
  zhenjiangGameSence::default_instance_ = new zhenjiangGameSence();
  zhenjiangGameEnd::default_instance_ = new zhenjiangGameEnd();
  zhenjiangGenZhang::default_instance_ = new zhenjiangGenZhang();
  zhenjiangDaSum::default_instance_ = new zhenjiangDaSum();
  DaInfo::default_instance_->InitAsDefaultInstance();
  zhenjiangGameSence::default_instance_->InitAsDefaultInstance();
  zhenjiangGameEnd::default_instance_->InitAsDefaultInstance();
  zhenjiangGenZhang::default_instance_->InitAsDefaultInstance();
  zhenjiangDaSum::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_zhenjiang_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_zhenjiang_2eproto {
  StaticDescriptorInitializer_zhenjiang_2eproto() {
    protobuf_AddDesc_zhenjiang_2eproto();
  }
} static_descriptor_initializer_zhenjiang_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int DaInfo::kDaTypeFieldNumber;
#endif  // !_MSC_VER

DaInfo::DaInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DaInfo::InitAsDefaultInstance() {
}

DaInfo::DaInfo(const DaInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DaInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DaInfo::~DaInfo() {
  SharedDtor();
}

void DaInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DaInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DaInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DaInfo_descriptor_;
}

const DaInfo& DaInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zhenjiang_2eproto();
  return *default_instance_;
}

DaInfo* DaInfo::default_instance_ = NULL;

DaInfo* DaInfo::New() const {
  return new DaInfo;
}

void DaInfo::Clear() {
  da_type_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DaInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 da_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_da_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_da_type())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_da_type())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_da_type;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DaInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 da_type = 1;
  for (int i = 0; i < this->da_type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->da_type(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DaInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 da_type = 1;
  for (int i = 0; i < this->da_type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->da_type(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DaInfo::ByteSize() const {
  int total_size = 0;

  // repeated int32 da_type = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->da_type_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->da_type(i));
    }
    total_size += 1 * this->da_type_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DaInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DaInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DaInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DaInfo::MergeFrom(const DaInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  da_type_.MergeFrom(from.da_type_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DaInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DaInfo::CopyFrom(const DaInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DaInfo::IsInitialized() const {

  return true;
}

void DaInfo::Swap(DaInfo* other) {
  if (other != this) {
    da_type_.Swap(&other->da_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DaInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DaInfo_descriptor_;
  metadata.reflection = DaInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int zhenjiangGameSence::kDainfoFieldNumber;
const int zhenjiangGameSence::kDaSumFieldNumber;
const int zhenjiangGameSence::kLockLaiziFieldNumber;
#endif  // !_MSC_VER

zhenjiangGameSence::zhenjiangGameSence()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void zhenjiangGameSence::InitAsDefaultInstance() {
}

zhenjiangGameSence::zhenjiangGameSence(const zhenjiangGameSence& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void zhenjiangGameSence::SharedCtor() {
  _cached_size_ = 0;
  lock_laizi_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

zhenjiangGameSence::~zhenjiangGameSence() {
  SharedDtor();
}

void zhenjiangGameSence::SharedDtor() {
  if (this != default_instance_) {
  }
}

void zhenjiangGameSence::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* zhenjiangGameSence::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return zhenjiangGameSence_descriptor_;
}

const zhenjiangGameSence& zhenjiangGameSence::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zhenjiang_2eproto();
  return *default_instance_;
}

zhenjiangGameSence* zhenjiangGameSence::default_instance_ = NULL;

zhenjiangGameSence* zhenjiangGameSence::New() const {
  return new zhenjiangGameSence;
}

void zhenjiangGameSence::Clear() {
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    lock_laizi_ = 0;
  }
  dainfo_.Clear();
  da_sum_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool zhenjiangGameSence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.game.zhenjiang.DaInfo dainfo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dainfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dainfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_dainfo;
        if (input->ExpectTag(16)) goto parse_da_sum;
        break;
      }

      // repeated int32 da_sum = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_da_sum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_da_sum())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_da_sum())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_da_sum;
        if (input->ExpectTag(24)) goto parse_lock_laizi;
        break;
      }

      // required int32 lock_laizi = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lock_laizi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lock_laizi_)));
          set_has_lock_laizi();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void zhenjiangGameSence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto.game.zhenjiang.DaInfo dainfo = 1;
  for (int i = 0; i < this->dainfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dainfo(i), output);
  }

  // repeated int32 da_sum = 2;
  for (int i = 0; i < this->da_sum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->da_sum(i), output);
  }

  // required int32 lock_laizi = 3;
  if (has_lock_laizi()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lock_laizi(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* zhenjiangGameSence::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto.game.zhenjiang.DaInfo dainfo = 1;
  for (int i = 0; i < this->dainfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->dainfo(i), target);
  }

  // repeated int32 da_sum = 2;
  for (int i = 0; i < this->da_sum_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->da_sum(i), target);
  }

  // required int32 lock_laizi = 3;
  if (has_lock_laizi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lock_laizi(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int zhenjiangGameSence::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // required int32 lock_laizi = 3;
    if (has_lock_laizi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lock_laizi());
    }

  }
  // repeated .proto.game.zhenjiang.DaInfo dainfo = 1;
  total_size += 1 * this->dainfo_size();
  for (int i = 0; i < this->dainfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dainfo(i));
  }

  // repeated int32 da_sum = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->da_sum_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->da_sum(i));
    }
    total_size += 1 * this->da_sum_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void zhenjiangGameSence::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const zhenjiangGameSence* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const zhenjiangGameSence*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void zhenjiangGameSence::MergeFrom(const zhenjiangGameSence& from) {
  GOOGLE_CHECK_NE(&from, this);
  dainfo_.MergeFrom(from.dainfo_);
  da_sum_.MergeFrom(from.da_sum_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_lock_laizi()) {
      set_lock_laizi(from.lock_laizi());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void zhenjiangGameSence::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void zhenjiangGameSence::CopyFrom(const zhenjiangGameSence& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool zhenjiangGameSence::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;

  return true;
}

void zhenjiangGameSence::Swap(zhenjiangGameSence* other) {
  if (other != this) {
    dainfo_.Swap(&other->dainfo_);
    da_sum_.Swap(&other->da_sum_);
    std::swap(lock_laizi_, other->lock_laizi_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata zhenjiangGameSence::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = zhenjiangGameSence_descriptor_;
  metadata.reflection = zhenjiangGameSence_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int zhenjiangGameEnd::kToudaFieldNumber;
const int zhenjiangGameEnd::kErdaFieldNumber;
const int zhenjiangGameEnd::kBeidongdaFieldNumber;
const int zhenjiangGameEnd::kGenzhangFieldNumber;
const int zhenjiangGameEnd::kDaFenFieldNumber;
const int zhenjiangGameEnd::kGangfenFieldNumber;
const int zhenjiangGameEnd::kHufenFieldNumber;
#endif  // !_MSC_VER

zhenjiangGameEnd::zhenjiangGameEnd()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void zhenjiangGameEnd::InitAsDefaultInstance() {
}

zhenjiangGameEnd::zhenjiangGameEnd(const zhenjiangGameEnd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void zhenjiangGameEnd::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

zhenjiangGameEnd::~zhenjiangGameEnd() {
  SharedDtor();
}

void zhenjiangGameEnd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void zhenjiangGameEnd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* zhenjiangGameEnd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return zhenjiangGameEnd_descriptor_;
}

const zhenjiangGameEnd& zhenjiangGameEnd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zhenjiang_2eproto();
  return *default_instance_;
}

zhenjiangGameEnd* zhenjiangGameEnd::default_instance_ = NULL;

zhenjiangGameEnd* zhenjiangGameEnd::New() const {
  return new zhenjiangGameEnd;
}

void zhenjiangGameEnd::Clear() {
  touda_.Clear();
  erda_.Clear();
  beidongda_.Clear();
  genzhang_.Clear();
  da_fen_.Clear();
  gangfen_.Clear();
  hufen_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool zhenjiangGameEnd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 touda = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_touda:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_touda())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_touda())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_touda;
        if (input->ExpectTag(16)) goto parse_erda;
        break;
      }

      // repeated int32 erda = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_erda:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_erda())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_erda())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_erda;
        if (input->ExpectTag(24)) goto parse_beidongda;
        break;
      }

      // repeated int32 beidongda = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beidongda:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_beidongda())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_beidongda())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_beidongda;
        if (input->ExpectTag(32)) goto parse_genzhang;
        break;
      }

      // repeated int32 genzhang = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_genzhang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_genzhang())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_genzhang())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_genzhang;
        if (input->ExpectTag(40)) goto parse_da_fen;
        break;
      }

      // repeated int32 da_fen = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_da_fen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_da_fen())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_da_fen())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_da_fen;
        if (input->ExpectTag(48)) goto parse_gangfen;
        break;
      }

      // repeated int32 gangfen = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gangfen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_gangfen())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_gangfen())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_gangfen;
        if (input->ExpectTag(56)) goto parse_hufen;
        break;
      }

      // repeated int32 hufen = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hufen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_hufen())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_hufen())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_hufen;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void zhenjiangGameEnd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 touda = 1;
  for (int i = 0; i < this->touda_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->touda(i), output);
  }

  // repeated int32 erda = 2;
  for (int i = 0; i < this->erda_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->erda(i), output);
  }

  // repeated int32 beidongda = 3;
  for (int i = 0; i < this->beidongda_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->beidongda(i), output);
  }

  // repeated int32 genzhang = 4;
  for (int i = 0; i < this->genzhang_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->genzhang(i), output);
  }

  // repeated int32 da_fen = 5;
  for (int i = 0; i < this->da_fen_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->da_fen(i), output);
  }

  // repeated int32 gangfen = 6;
  for (int i = 0; i < this->gangfen_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->gangfen(i), output);
  }

  // repeated int32 hufen = 7;
  for (int i = 0; i < this->hufen_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->hufen(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* zhenjiangGameEnd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 touda = 1;
  for (int i = 0; i < this->touda_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->touda(i), target);
  }

  // repeated int32 erda = 2;
  for (int i = 0; i < this->erda_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->erda(i), target);
  }

  // repeated int32 beidongda = 3;
  for (int i = 0; i < this->beidongda_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->beidongda(i), target);
  }

  // repeated int32 genzhang = 4;
  for (int i = 0; i < this->genzhang_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->genzhang(i), target);
  }

  // repeated int32 da_fen = 5;
  for (int i = 0; i < this->da_fen_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->da_fen(i), target);
  }

  // repeated int32 gangfen = 6;
  for (int i = 0; i < this->gangfen_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->gangfen(i), target);
  }

  // repeated int32 hufen = 7;
  for (int i = 0; i < this->hufen_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->hufen(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int zhenjiangGameEnd::ByteSize() const {
  int total_size = 0;

  // repeated int32 touda = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->touda_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->touda(i));
    }
    total_size += 1 * this->touda_size() + data_size;
  }

  // repeated int32 erda = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->erda_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->erda(i));
    }
    total_size += 1 * this->erda_size() + data_size;
  }

  // repeated int32 beidongda = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->beidongda_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->beidongda(i));
    }
    total_size += 1 * this->beidongda_size() + data_size;
  }

  // repeated int32 genzhang = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->genzhang_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->genzhang(i));
    }
    total_size += 1 * this->genzhang_size() + data_size;
  }

  // repeated int32 da_fen = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->da_fen_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->da_fen(i));
    }
    total_size += 1 * this->da_fen_size() + data_size;
  }

  // repeated int32 gangfen = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->gangfen_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->gangfen(i));
    }
    total_size += 1 * this->gangfen_size() + data_size;
  }

  // repeated int32 hufen = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->hufen_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->hufen(i));
    }
    total_size += 1 * this->hufen_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void zhenjiangGameEnd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const zhenjiangGameEnd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const zhenjiangGameEnd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void zhenjiangGameEnd::MergeFrom(const zhenjiangGameEnd& from) {
  GOOGLE_CHECK_NE(&from, this);
  touda_.MergeFrom(from.touda_);
  erda_.MergeFrom(from.erda_);
  beidongda_.MergeFrom(from.beidongda_);
  genzhang_.MergeFrom(from.genzhang_);
  da_fen_.MergeFrom(from.da_fen_);
  gangfen_.MergeFrom(from.gangfen_);
  hufen_.MergeFrom(from.hufen_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void zhenjiangGameEnd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void zhenjiangGameEnd::CopyFrom(const zhenjiangGameEnd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool zhenjiangGameEnd::IsInitialized() const {

  return true;
}

void zhenjiangGameEnd::Swap(zhenjiangGameEnd* other) {
  if (other != this) {
    touda_.Swap(&other->touda_);
    erda_.Swap(&other->erda_);
    beidongda_.Swap(&other->beidongda_);
    genzhang_.Swap(&other->genzhang_);
    da_fen_.Swap(&other->da_fen_);
    gangfen_.Swap(&other->gangfen_);
    hufen_.Swap(&other->hufen_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata zhenjiangGameEnd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = zhenjiangGameEnd_descriptor_;
  metadata.reflection = zhenjiangGameEnd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int zhenjiangGenZhang::kCharidFieldNumber;
#endif  // !_MSC_VER

zhenjiangGenZhang::zhenjiangGenZhang()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void zhenjiangGenZhang::InitAsDefaultInstance() {
}

zhenjiangGenZhang::zhenjiangGenZhang(const zhenjiangGenZhang& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void zhenjiangGenZhang::SharedCtor() {
  _cached_size_ = 0;
  charid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

zhenjiangGenZhang::~zhenjiangGenZhang() {
  SharedDtor();
}

void zhenjiangGenZhang::SharedDtor() {
  if (this != default_instance_) {
  }
}

void zhenjiangGenZhang::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* zhenjiangGenZhang::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return zhenjiangGenZhang_descriptor_;
}

const zhenjiangGenZhang& zhenjiangGenZhang::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zhenjiang_2eproto();
  return *default_instance_;
}

zhenjiangGenZhang* zhenjiangGenZhang::default_instance_ = NULL;

zhenjiangGenZhang* zhenjiangGenZhang::New() const {
  return new zhenjiangGenZhang;
}

void zhenjiangGenZhang::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    charid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool zhenjiangGenZhang::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 charid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void zhenjiangGenZhang::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 charid = 1;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->charid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* zhenjiangGenZhang::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 charid = 1;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->charid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int zhenjiangGenZhang::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 charid = 1;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->charid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void zhenjiangGenZhang::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const zhenjiangGenZhang* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const zhenjiangGenZhang*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void zhenjiangGenZhang::MergeFrom(const zhenjiangGenZhang& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_charid()) {
      set_charid(from.charid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void zhenjiangGenZhang::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void zhenjiangGenZhang::CopyFrom(const zhenjiangGenZhang& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool zhenjiangGenZhang::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void zhenjiangGenZhang::Swap(zhenjiangGenZhang* other) {
  if (other != this) {
    std::swap(charid_, other->charid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata zhenjiangGenZhang::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = zhenjiangGenZhang_descriptor_;
  metadata.reflection = zhenjiangGenZhang_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int zhenjiangDaSum::kCharidFieldNumber;
const int zhenjiangDaSum::kDaSumFieldNumber;
#endif  // !_MSC_VER

zhenjiangDaSum::zhenjiangDaSum()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void zhenjiangDaSum::InitAsDefaultInstance() {
}

zhenjiangDaSum::zhenjiangDaSum(const zhenjiangDaSum& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void zhenjiangDaSum::SharedCtor() {
  _cached_size_ = 0;
  charid_ = 0;
  da_sum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

zhenjiangDaSum::~zhenjiangDaSum() {
  SharedDtor();
}

void zhenjiangDaSum::SharedDtor() {
  if (this != default_instance_) {
  }
}

void zhenjiangDaSum::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* zhenjiangDaSum::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return zhenjiangDaSum_descriptor_;
}

const zhenjiangDaSum& zhenjiangDaSum::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zhenjiang_2eproto();
  return *default_instance_;
}

zhenjiangDaSum* zhenjiangDaSum::default_instance_ = NULL;

zhenjiangDaSum* zhenjiangDaSum::New() const {
  return new zhenjiangDaSum;
}

void zhenjiangDaSum::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    charid_ = 0;
    da_sum_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool zhenjiangDaSum::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 charid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_da_sum;
        break;
      }

      // required int32 da_sum = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_da_sum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &da_sum_)));
          set_has_da_sum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void zhenjiangDaSum::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 charid = 1;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->charid(), output);
  }

  // required int32 da_sum = 2;
  if (has_da_sum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->da_sum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* zhenjiangDaSum::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 charid = 1;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->charid(), target);
  }

  // required int32 da_sum = 2;
  if (has_da_sum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->da_sum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int zhenjiangDaSum::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 charid = 1;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->charid());
    }

    // required int32 da_sum = 2;
    if (has_da_sum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->da_sum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void zhenjiangDaSum::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const zhenjiangDaSum* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const zhenjiangDaSum*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void zhenjiangDaSum::MergeFrom(const zhenjiangDaSum& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_da_sum()) {
      set_da_sum(from.da_sum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void zhenjiangDaSum::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void zhenjiangDaSum::CopyFrom(const zhenjiangDaSum& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool zhenjiangDaSum::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void zhenjiangDaSum::Swap(zhenjiangDaSum* other) {
  if (other != this) {
    std::swap(charid_, other->charid_);
    std::swap(da_sum_, other->da_sum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata zhenjiangDaSum::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = zhenjiangDaSum_descriptor_;
  metadata.reflection = zhenjiangDaSum_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace zhenjiang
}  // namespace game
}  // namespace proto

// @@protoc_insertion_point(global_scope)
